"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import errorresp as shared_errorresp
from ..shared import webhookconfig as shared_webhookconfig
from typing import Optional


@dataclasses.dataclass
class GetConfigsRequest:
    
    event_name: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'eventName', 'style': 'form', 'explode': True }})
    r"""Filter configurations by event Name"""  
    

@dataclasses.dataclass
class GetConfigsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error_resp: Optional[shared_errorresp.ErrorResp] = dataclasses.field(default=None)
    r"""Other errors"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    webhook_configs: Optional[list[shared_webhookconfig.WebhookConfig]] = dataclasses.field(default=None)
    r"""Success - configs loaded with success. Empty array if org has configs."""  
    