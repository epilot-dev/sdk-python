"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from epilot import utils
from typing import Optional

class JourneyTokenParametersTokenType(str, Enum):
    JOURNEY = 'journey'


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class JourneyTokenParameters:
    journey_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('journey_id') }})
    r"""Journey ID for access token type \\"journey\\" """
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""Human readable name for access token"""
    token_type: Optional[JourneyTokenParametersTokenType] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('token_type'), 'exclude': lambda f: f is None }})
    

