"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from epilot import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetPublicTokenJwks200ApplicationJSONKeys:
    
    alg: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('alg'), 'exclude': lambda f: f is None }})
    e: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('e'), 'exclude': lambda f: f is None }})
    kid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kid'), 'exclude': lambda f: f is None }})
    kty: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kty'), 'exclude': lambda f: f is None }})
    n: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('n'), 'exclude': lambda f: f is None }})
    use: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('use'), 'exclude': lambda f: f is None }})
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetPublicTokenJwks200ApplicationJSON:
    r"""Set of jwks"""
    
    keys: Optional[list[GetPublicTokenJwks200ApplicationJSONKeys]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('keys'), 'exclude': lambda f: f is None }})
    

@dataclasses.dataclass
class GetPublicTokenJwksResponse:
    
    content_type: str = dataclasses.field()
    status_code: int = dataclasses.field()
    get_public_token_jwks_200_application_json_object: Optional[GetPublicTokenJwks200ApplicationJSON] = dataclasses.field(default=None)
    r"""Set of jwks"""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    