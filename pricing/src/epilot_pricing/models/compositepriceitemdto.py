"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .externalfeemapping import ExternalFeeMapping, ExternalFeeMappingTypedDict
from .externalfeemetadata import ExternalFeeMetadata, ExternalFeeMetadataTypedDict
from .metadata import MetaData, MetaDataTypedDict
from .priceinputmapping import PriceInputMapping, PriceInputMappingTypedDict
from .priceitemdto import PriceItemDto, PriceItemDtoTypedDict
from .product import ProductInput, ProductInputTypedDict
from epilot_pricing.types import BaseModel
import pydantic
from typing import List, Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class CompositePriceItemDtoTypedDict(TypedDict):
    r"""Represents a composite price input to the pricing library."""
    
    product: NotRequired[ProductInputTypedDict]
    r"""The snapshot of the product."""
    description: NotRequired[str]
    r"""An arbitrary string attached to the price item. Often useful for displaying to users. Defaults to product name."""
    external_fees_mappings: NotRequired[List[ExternalFeeMappingTypedDict]]
    external_fees_metadata: NotRequired[ExternalFeeMetadataTypedDict]
    is_composite_price: NotRequired[bool]
    r"""The flag for prices that contain price components."""
    is_tax_inclusive: NotRequired[bool]
    r"""Specifies whether the price is considered `inclusive` of taxes or not."""
    item_components: NotRequired[List[PriceItemDtoTypedDict]]
    r"""Contains price item configurations, per price component, when the main price item is a [composite price](/api/pricing#tag/dynamic_price_schema)."""
    metadata: NotRequired[List[MetaDataTypedDict]]
    r"""A set of key-value pairs used to store meta data information about an entity."""
    price_id: NotRequired[str]
    r"""The id of the price."""
    price_mappings: NotRequired[List[PriceInputMappingTypedDict]]
    product_id: NotRequired[str]
    r"""The id of the product."""
    quantity: NotRequired[int]
    r"""The quantity of products being purchased."""
    selected_price_component_ids: NotRequired[List[str]]
    r"""The ids of the price components that should be selected for the price calculation."""
    

class CompositePriceItemDto(BaseModel):
    r"""Represents a composite price input to the pricing library."""
    
    product: Annotated[Optional[ProductInput], pydantic.Field(alias="_product")] = None
    r"""The snapshot of the product."""
    description: Optional[str] = None
    r"""An arbitrary string attached to the price item. Often useful for displaying to users. Defaults to product name."""
    external_fees_mappings: Optional[List[ExternalFeeMapping]] = None
    external_fees_metadata: Optional[ExternalFeeMetadata] = None
    is_composite_price: Optional[bool] = None
    r"""The flag for prices that contain price components."""
    is_tax_inclusive: Optional[bool] = None
    r"""Specifies whether the price is considered `inclusive` of taxes or not."""
    item_components: Optional[List[PriceItemDto]] = None
    r"""Contains price item configurations, per price component, when the main price item is a [composite price](/api/pricing#tag/dynamic_price_schema)."""
    metadata: Optional[List[MetaData]] = None
    r"""A set of key-value pairs used to store meta data information about an entity."""
    price_id: Optional[str] = None
    r"""The id of the price."""
    price_mappings: Optional[List[PriceInputMapping]] = None
    product_id: Optional[str] = None
    r"""The id of the product."""
    quantity: Optional[int] = None
    r"""The quantity of products being purchased."""
    selected_price_component_ids: Optional[List[str]] = None
    r"""The ids of the price components that should be selected for the price calculation."""
    
