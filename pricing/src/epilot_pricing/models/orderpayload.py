"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .address import Address, AddressTypedDict
from .orderstatus import OrderStatus
from .paymentmethod import PaymentMethod, PaymentMethodTypedDict
from .priceitemsdto import PriceItemsDto, PriceItemsDtoTypedDict
from epilot_pricing.types import BaseModel
import pydantic
from pydantic import ConfigDict
from typing import Any, Dict, List, Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class OrderPayloadTypedDict(TypedDict):
    r"""Order Entity Payload"""
    
    tags: NotRequired[List[str]]
    billing_address: NotRequired[List[AddressTypedDict]]
    billing_company_name: NotRequired[str]
    billing_email: NotRequired[str]
    billing_first_name: NotRequired[str]
    billing_last_name: NotRequired[str]
    billing_phone: NotRequired[str]
    billing_vat: NotRequired[str]
    currency: NotRequired[str]
    r"""Three-letter ISO currency code, in lowercase. Must be a supported currency.
    ISO 4217 CURRENCY CODES as specified in the documentation: https://www.iso.org/iso-4217-currency-codes.html

    """
    delivery_address: NotRequired[List[AddressTypedDict]]
    line_items: NotRequired[List[PriceItemsDtoTypedDict]]
    r"""A valid set of product prices, quantities, (discounts) and taxes from a client."""
    payment_method: NotRequired[List[PaymentMethodTypedDict]]
    source_type: NotRequired[str]
    r"""type of source, e.g. journey or manual"""
    status: NotRequired[OrderStatus]
    r"""
    | status      | description |
    |-------------|-------|
    | `draft`     | \u200B\u200BStarting state for all orders, at this point we can still edit the order |
    | `quote`     | The order is in a quoting phase, bound to an expiration date |
    | `placed`    | The order has been paid and can now be fulfilled (shipped, delivered, complete) or canceled |
    | `cancelled` | The order has been cancelled |
    | `completed` | The order is now closed and finalized |

    """
    

class OrderPayload(BaseModel):
    r"""Order Entity Payload"""
    model_config = ConfigDict(populate_by_name=True, arbitrary_types_allowed=True, extra="allow")
    __pydantic_extra__:  Dict[str, Any] = pydantic.Field(init=False)
    
    tags: Annotated[Optional[List[str]], pydantic.Field(alias="_tags")] = None
    billing_address: Optional[List[Address]] = None
    billing_company_name: Optional[str] = None
    billing_email: Optional[str] = None
    billing_first_name: Optional[str] = None
    billing_last_name: Optional[str] = None
    billing_phone: Optional[str] = None
    billing_vat: Optional[str] = None
    currency: Optional[str] = None
    r"""Three-letter ISO currency code, in lowercase. Must be a supported currency.
    ISO 4217 CURRENCY CODES as specified in the documentation: https://www.iso.org/iso-4217-currency-codes.html

    """
    delivery_address: Optional[List[Address]] = None
    line_items: Optional[List[PriceItemsDto]] = None
    r"""A valid set of product prices, quantities, (discounts) and taxes from a client."""
    payment_method: Optional[List[PaymentMethod]] = None
    source_type: Optional[str] = None
    r"""type of source, e.g. journey or manual"""
    status: Optional[OrderStatus] = None
    r"""
    | status      | description |
    |-------------|-------|
    | `draft`     | \u200B\u200BStarting state for all orders, at this point we can still edit the order |
    | `quote`     | The order is in a quoting phase, bound to an expiration date |
    | `placed`    | The order has been paid and can now be fulfilled (shipped, delivered, complete) or canceled |
    | `cancelled` | The order has been cancelled |
    | `completed` | The order is now closed and finalized |

    """
    
    @property
    def additional_properties(self):
        return self.__pydantic_extra__

    @additional_properties.setter
    def additional_properties(self, value):
        self.__pydantic_extra__ = value # pyright: ignore[reportIncompatibleVariableOverride]
    
