"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .taxbreakdowninfo import TaxBreakdownInfo, TaxBreakdownInfoTypedDict
from epilot_pricing.types import BaseModel
import pydantic
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class TaxAmountBreakdownTypedDict(TypedDict):
    r"""A tax amount associated with a specific tax rate."""
    
    amount: NotRequired[int]
    r"""The tax amount."""
    rate: NotRequired[str]
    r"""The tax rate applied. With the release of the tax manager feature this field is being deprecated in favor of the tax field."""
    rate_value: NotRequired[float]
    r"""The tax rate value applied. With the release of the tax manager feature this field is being deprecated in favor of the tax field."""
    tax: NotRequired[TaxBreakdownInfoTypedDict]
    

class TaxAmountBreakdown(BaseModel):
    r"""A tax amount associated with a specific tax rate."""
    
    amount: Optional[int] = None
    r"""The tax amount."""
    rate: Annotated[Optional[str], pydantic.Field(deprecated="warning: ** DEPRECATED ** - This will be removed in a future release, please migrate away from it as soon as possible.")] = None
    r"""The tax rate applied. With the release of the tax manager feature this field is being deprecated in favor of the tax field."""
    rate_value: Annotated[Optional[float], pydantic.Field(deprecated="warning: ** DEPRECATED ** - This will be removed in a future release, please migrate away from it as soon as possible.", alias="rateValue")] = None
    r"""The tax rate value applied. With the release of the tax manager feature this field is being deprecated in favor of the tax field."""
    tax: Optional[TaxBreakdownInfo] = None
    
