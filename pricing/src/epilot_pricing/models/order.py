"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .address import Address, AddressTypedDict
from .entityrelation import EntityRelation, EntityRelationTypedDict
from .metadata import MetaData, MetaDataTypedDict
from .ordersource import OrderSource, OrderSourceTypedDict
from .orderstatus import OrderStatus
from .paymentmethod import PaymentMethod, PaymentMethodTypedDict
from .priceitems import PriceItems, PriceItemsTypedDict
from .totaldetails import TotalDetails, TotalDetailsTypedDict
from epilot_pricing.types import BaseModel
import pydantic
from pydantic import ConfigDict
from typing import Any, Dict, List, Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class OrderCustomerTypedDict(TypedDict):
    r"""A list of customers related with the opportunity"""
    
    dollar_relation: NotRequired[List[EntityRelationTypedDict]]
    

class OrderCustomer(BaseModel):
    r"""A list of customers related with the opportunity"""
    
    dollar_relation: Annotated[Optional[List[EntityRelation]], pydantic.Field(alias="$relation")] = None
    

class PricesTypedDict(TypedDict):
    r"""The price entities referenced from within `line_items`"""
    
    dollar_relation: NotRequired[List[EntityRelationTypedDict]]
    

class Prices(BaseModel):
    r"""The price entities referenced from within `line_items`"""
    
    dollar_relation: Annotated[Optional[List[EntityRelation]], pydantic.Field(alias="$relation")] = None
    

class ProductsTypedDict(TypedDict):
    r"""The product entities referenced from within `line_items`"""
    
    dollar_relation: NotRequired[List[EntityRelationTypedDict]]
    

class Products(BaseModel):
    r"""The product entities referenced from within `line_items`"""
    
    dollar_relation: Annotated[Optional[List[EntityRelation]], pydantic.Field(alias="$relation")] = None
    

class OrderTypedDict(TypedDict):
    r"""The order entity"""
    
    created_at: NotRequired[str]
    r"""The order creation date"""
    id: NotRequired[str]
    r"""The order id"""
    org_id: NotRequired[str]
    r"""Organization Id the order belongs to"""
    tags: NotRequired[List[str]]
    r"""An arbitrary set of tags attached to the order"""
    updated_at: NotRequired[str]
    r"""The order last update date"""
    amount_subtotal: NotRequired[int]
    r"""Total of all items before (discounts or) taxes are applied."""
    amount_total: NotRequired[int]
    r"""Total of all items after (discounts and) taxes are applied."""
    billing_address: NotRequired[List[AddressTypedDict]]
    r"""The billing address"""
    billing_company_name: NotRequired[str]
    r"""The billing account name"""
    billing_email: NotRequired[str]
    r"""The billing email"""
    billing_first_name: NotRequired[str]
    r"""The billing contact first name"""
    billing_last_name: NotRequired[str]
    r"""The billing contact last name"""
    billing_phone: NotRequired[str]
    r"""The billing phone"""
    billing_vat: NotRequired[str]
    r"""The billing account VAT"""
    cart_id: NotRequired[str]
    r"""The cart id that originated or is associated with the this order"""
    currency: NotRequired[str]
    r"""The order main currency"""
    customer: NotRequired[OrderCustomerTypedDict]
    r"""A list of customers related with the opportunity"""
    delivery_address: NotRequired[List[AddressTypedDict]]
    r"""The delivery address"""
    line_items: NotRequired[List[PriceItemsTypedDict]]
    r"""Tracks a set of product prices, quantities, (discounts) and taxes."""
    metadata: NotRequired[List[MetaDataTypedDict]]
    r"""A set of key-value pairs used to store meta data information about an entity."""
    order_number: NotRequired[str]
    r"""The order number (customer facing)"""
    payment_method: NotRequired[List[PaymentMethodTypedDict]]
    r"""The payment method details for the order"""
    prices: NotRequired[PricesTypedDict]
    r"""The price entities referenced from within `line_items`"""
    products: NotRequired[ProductsTypedDict]
    r"""The product entities referenced from within `line_items`"""
    source: NotRequired[OrderSourceTypedDict]
    r"""The order generation source"""
    source_id: NotRequired[str]
    r"""Identifier for source e.g. journey ID"""
    source_type: NotRequired[str]
    r"""Type of source, e.g. journey or manual"""
    status: NotRequired[OrderStatus]
    r"""
    | status      | description |
    |-------------|-------|
    | `draft`     | \u200B\u200BStarting state for all orders, at this point we can still edit the order |
    | `quote`     | The order is in a quoting phase, bound to an expiration date |
    | `placed`    | The order has been paid and can now be fulfilled (shipped, delivered, complete) or canceled |
    | `cancelled` | The order has been cancelled |
    | `completed` | The order is now closed and finalized |

    """
    total_details: NotRequired[TotalDetailsTypedDict]
    r"""The total details with tax (and discount) aggregated totals."""
    

class Order(BaseModel):
    r"""The order entity"""
    model_config = ConfigDict(populate_by_name=True, arbitrary_types_allowed=True, extra="allow")
    __pydantic_extra__:  Dict[str, Any] = pydantic.Field(init=False)
    
    created_at: Annotated[Optional[str], pydantic.Field(alias="_created_at")] = None
    r"""The order creation date"""
    id: Annotated[Optional[str], pydantic.Field(alias="_id")] = None
    r"""The order id"""
    org_id: Annotated[Optional[str], pydantic.Field(alias="_org_id")] = None
    r"""Organization Id the order belongs to"""
    tags: Annotated[Optional[List[str]], pydantic.Field(alias="_tags")] = None
    r"""An arbitrary set of tags attached to the order"""
    updated_at: Annotated[Optional[str], pydantic.Field(alias="_updated_at")] = None
    r"""The order last update date"""
    amount_subtotal: Optional[int] = None
    r"""Total of all items before (discounts or) taxes are applied."""
    amount_total: Optional[int] = None
    r"""Total of all items after (discounts and) taxes are applied."""
    billing_address: Optional[List[Address]] = None
    r"""The billing address"""
    billing_company_name: Optional[str] = None
    r"""The billing account name"""
    billing_email: Optional[str] = None
    r"""The billing email"""
    billing_first_name: Optional[str] = None
    r"""The billing contact first name"""
    billing_last_name: Optional[str] = None
    r"""The billing contact last name"""
    billing_phone: Optional[str] = None
    r"""The billing phone"""
    billing_vat: Optional[str] = None
    r"""The billing account VAT"""
    cart_id: Optional[str] = None
    r"""The cart id that originated or is associated with the this order"""
    currency: Optional[str] = None
    r"""The order main currency"""
    customer: Optional[OrderCustomer] = None
    r"""A list of customers related with the opportunity"""
    delivery_address: Optional[List[Address]] = None
    r"""The delivery address"""
    line_items: Optional[List[PriceItems]] = None
    r"""Tracks a set of product prices, quantities, (discounts) and taxes."""
    metadata: Optional[List[MetaData]] = None
    r"""A set of key-value pairs used to store meta data information about an entity."""
    order_number: Optional[str] = None
    r"""The order number (customer facing)"""
    payment_method: Optional[List[PaymentMethod]] = None
    r"""The payment method details for the order"""
    prices: Optional[Prices] = None
    r"""The price entities referenced from within `line_items`"""
    products: Optional[Products] = None
    r"""The product entities referenced from within `line_items`"""
    source: Optional[OrderSource] = None
    r"""The order generation source"""
    source_id: Optional[str] = None
    r"""Identifier for source e.g. journey ID"""
    source_type: Optional[str] = None
    r"""Type of source, e.g. journey or manual"""
    status: Optional[OrderStatus] = None
    r"""
    | status      | description |
    |-------------|-------|
    | `draft`     | \u200B\u200BStarting state for all orders, at this point we can still edit the order |
    | `quote`     | The order is in a quoting phase, bound to an expiration date |
    | `placed`    | The order has been paid and can now be fulfilled (shipped, delivered, complete) or canceled |
    | `cancelled` | The order has been cancelled |
    | `completed` | The order is now closed and finalized |

    """
    total_details: Optional[TotalDetails] = None
    r"""The total details with tax (and discount) aggregated totals."""
    
    @property
    def additional_properties(self):
        return self.__pydantic_extra__

    @additional_properties.setter
    def additional_properties(self, value):
        self.__pydantic_extra__ = value # pyright: ignore[reportIncompatibleVariableOverride]
    
