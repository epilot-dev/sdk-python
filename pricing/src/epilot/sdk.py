"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from .availability_api import AvailabilityAPI
from .cart_api import CartAPI
from .catalog_api import CatalogAPI
from .deprecated import Deprecated
from .order_api import OrderAPI
from .sdkconfiguration import SDKConfiguration
from epilot import utils
from epilot.models import shared

class Epilot:
    r"""Pricing API: The `pricing-api` hub sets the foundations for the following Pricing APIs:

    ### Order API
    This api enables the management of orders in epilot 360, providing features such as:
     - Automatic calculation of totals and price breakdowns for taxes on the Order entity
     - Product and pricing data validation

    ### Shopping Cart API
    Used to interact with a cart during a customer's checkout session, providing:
     - An unified data model to model a Shopping Cart
     - Product and pricing data validation
     - Checkout a cart into an order or quote

    ### Catalog API
    Provides a way to query the entire catalog of products and prices.

    ### Availability API
    Provides endpoints for querying products availability by a set of predefined dimensions.
    """
    availability_api: AvailabilityAPI
    r"""Provides endpoints for querying products availability by a set of predefined dimensions."""
    cart_api: CartAPI
    r"""Used to interact with a cart during a customer's checkout session, providing:
     - An unified data model to model a Shopping Cart
     - Product and pricing data validation
     - Checkout a cart into an order or quote
    """
    catalog_api: CatalogAPI
    r"""Provides a way to query the entire catalog of products and prices."""
    deprecated: Deprecated
    order_api: OrderAPI
    r"""This api enables the management of orders in epilot 360, providing features such as:
     - Automatic calculation of totals and price breakdowns for taxes on the Order entity
     - Product and pricing data validation
    """

    sdk_configuration: SDKConfiguration

    def __init__(self,
                 epilot_auth: str,
                 server_idx: int = None,
                 server_url: str = None,
                 url_params: dict[str, str] = None,
                 client: requests_http.Session = None,
                 retry_config: utils.RetryConfig = None
                 ) -> None:
        """Instantiates the SDK configuring it with the provided parameters.
        
        :param epilot_auth: The epilot_auth required for authentication
        :type epilot_auth: str
        :param server_idx: The index of the server to use for all operations
        :type server_idx: int
        :param server_url: The server URL to use for all operations
        :type server_url: str
        :param url_params: Parameters to optionally template the server URL with
        :type url_params: dict[str, str]
        :param client: The requests.Session HTTP client to use for all operations
        :type client: requests_http.Session
        :param retry_config: The utils.RetryConfig to use globally
        :type retry_config: utils.RetryConfig
        """
        if client is None:
            client = requests_http.Session()
        
        
        security_client = utils.configure_security_client(client, security)
        
        
        if server_url is not None:
            if url_params is not None:
                server_url = utils.template_url(server_url, url_params)

        self.sdk_configuration = SDKConfiguration(client, security_client, server_url, server_idx, retry_config=retry_config)
       
        self._init_sdks()
    
    def _init_sdks(self):
        self.availability_api = AvailabilityAPI(self.sdk_configuration)
        self.cart_api = CartAPI(self.sdk_configuration)
        self.catalog_api = CatalogAPI(self.sdk_configuration)
        self.deprecated = Deprecated(self.sdk_configuration)
        self.order_api = OrderAPI(self.sdk_configuration)
    