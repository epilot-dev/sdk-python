"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .notificationitem import NotificationItem, NotificationItemTypedDict
from epilot_notification.types import BaseModel
from epilot_notification.utils import FieldMetadata, QueryParamMetadata
from typing import List, Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class GetNotificationsV2RequestTypedDict(TypedDict):
    after_id: NotRequired[int]
    limit: NotRequired[int]
    r"""The numbers of items to return"""
    

class GetNotificationsV2Request(BaseModel):
    after_id: Annotated[Optional[int], FieldMetadata(query=QueryParamMetadata(style="form", explode=True))] = None
    limit: Annotated[Optional[int], FieldMetadata(query=QueryParamMetadata(style="form", explode=True))] = None
    r"""The numbers of items to return"""
    

class GetNotificationsV2ResponseBodyTypedDict(TypedDict):
    r"""Success"""
    
    results: NotRequired[List[NotificationItemTypedDict]]
    total: NotRequired[int]
    total_unread: NotRequired[int]
    

class GetNotificationsV2ResponseBody(BaseModel):
    r"""Success"""
    
    results: Optional[List[NotificationItem]] = None
    total: Optional[int] = None
    total_unread: Optional[int] = None
    
