"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .organization import Organization, OrganizationTypedDict
from .signupuserpayload import SignupUserPayload, SignupUserPayloadTypedDict
from .user import User, UserTypedDict
from epilot_user.types import BaseModel
from epilot_user.utils import FieldMetadata, QueryParamMetadata, RequestMetadata
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class SignUpUserRequestTypedDict(TypedDict):
    signup_user_payload: NotRequired[SignupUserPayloadTypedDict]
    token: NotRequired[str]
    r"""Invitation partner token"""
    

class SignUpUserRequest(BaseModel):
    signup_user_payload: Annotated[Optional[SignupUserPayload], FieldMetadata(request=RequestMetadata(media_type="application/json"))] = None
    token: Annotated[Optional[str], FieldMetadata(query=QueryParamMetadata(style="form", explode=True))] = None
    r"""Invitation partner token"""
    

class SignUpUserResponseBodyTypedDict(TypedDict):
    r"""The created user and organization"""
    
    organization: NotRequired[OrganizationTypedDict]
    user: NotRequired[UserTypedDict]
    

class SignUpUserResponseBody(BaseModel):
    r"""The created user and organization"""
    
    organization: Optional[Organization] = None
    user: Optional[User] = None
    
