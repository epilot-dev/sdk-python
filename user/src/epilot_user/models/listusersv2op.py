"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .userv2 import UserV2, UserV2TypedDict
from epilot_user.types import BaseModel
from epilot_user.utils import FieldMetadata, QueryParamMetadata
from typing import List, Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class ListUsersV2RequestTypedDict(TypedDict):
    limit: NotRequired[float]
    r"""Limit the results size"""
    offset: NotRequired[float]
    r"""Specify the offset"""
    query: NotRequired[str]
    r"""Query text to filter by"""
    

class ListUsersV2Request(BaseModel):
    limit: Annotated[Optional[float], FieldMetadata(query=QueryParamMetadata(style="form", explode=True))] = None
    r"""Limit the results size"""
    offset: Annotated[Optional[float], FieldMetadata(query=QueryParamMetadata(style="form", explode=True))] = None
    r"""Specify the offset"""
    query: Annotated[Optional[str], FieldMetadata(query=QueryParamMetadata(style="form", explode=True))] = None
    r"""Query text to filter by"""
    

class ListUsersV2ResponseBodyTypedDict(TypedDict):
    r"""List of organization users"""
    
    results: NotRequired[List[UserV2TypedDict]]
    

class ListUsersV2ResponseBody(BaseModel):
    r"""List of organization users"""
    
    results: Optional[List[UserV2]] = None
    
