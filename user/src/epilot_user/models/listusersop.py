"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .user import User, UserTypedDict
from epilot_user.types import BaseModel
from epilot_user.utils import FieldMetadata, QueryParamMetadata
from typing import List, Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class ListUsersRequestTypedDict(TypedDict):
    limit: NotRequired[float]
    r"""Limit the results size"""
    offset: NotRequired[float]
    r"""Specify the offset"""
    org_ids: NotRequired[List[str]]
    r"""Comma-separated list of organization ids to filter by"""
    query: NotRequired[str]
    r"""Query text to filter by"""
    

class ListUsersRequest(BaseModel):
    limit: Annotated[Optional[float], FieldMetadata(query=QueryParamMetadata(style="form", explode=True))] = None
    r"""Limit the results size"""
    offset: Annotated[Optional[float], FieldMetadata(query=QueryParamMetadata(style="form", explode=True))] = None
    r"""Specify the offset"""
    org_ids: Annotated[Optional[List[str]], FieldMetadata(query=QueryParamMetadata(style="form", explode=False))] = None
    r"""Comma-separated list of organization ids to filter by"""
    query: Annotated[Optional[str], FieldMetadata(query=QueryParamMetadata(style="form", explode=True))] = None
    r"""Query text to filter by"""
    

class ListUsersResponseBodyTypedDict(TypedDict):
    r"""List of users"""
    
    users: NotRequired[List[UserTypedDict]]
    

class ListUsersResponseBody(BaseModel):
    r"""List of users"""
    
    users: Optional[List[User]] = None
    
