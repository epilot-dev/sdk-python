"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import balance as shared_balance
from typing import Optional


@dataclasses.dataclass
class GetCustomerBalanceSecurity:
    epilot_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'bearer', 'field_name': 'Authorization' }})
    



@dataclasses.dataclass
class GetCustomerBalanceRequest:
    customer_entity_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'customer_entity_id', 'style': 'simple', 'explode': False }})
    r"""Customer entity ID (contact or account)"""
    



@dataclasses.dataclass
class GetCustomerBalanceResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    balance: Optional[shared_balance.Balance] = dataclasses.field(default=None)
    r"""OK"""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    r"""Raw HTTP response; suitable for custom response parsing"""
    

