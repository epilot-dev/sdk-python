"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from epilot import utils
from typing import Optional


@dataclasses.dataclass
class GetCountByEmailRequest:
    
    email: str = dataclasses.field(metadata={'query_param': { 'field_name': 'email', 'style': 'form', 'explode': True }})
    org_id: str = dataclasses.field(metadata={'query_param': { 'field_name': 'org_id', 'style': 'form', 'explode': True }})
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetCountByEmail200ApplicationJSON:
    r"""The returned count of contact"""
    
    count: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('count'), 'exclude': lambda f: f is None }})
    

@dataclasses.dataclass
class GetCountByEmailResponse:
    
    content_type: str = dataclasses.field()
    status_code: int = dataclasses.field()
    get_count_by_email_200_application_json_object: Optional[GetCountByEmail200ApplicationJSON] = dataclasses.field(default=None)
    r"""The returned count of contact"""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    