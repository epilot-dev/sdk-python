"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ...models.components import contactcountrequest as components_contactcountrequest
from ...models.components import origin as components_origin
from dataclasses_json import Undefined, dataclass_json
from epilot import utils
from typing import Optional


@dataclasses.dataclass
class GetContactCountRequest:
    contact_count_request: components_contactcountrequest.ContactCountRequest = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    r"""Request payload"""
    origin: components_origin.Origin = dataclasses.field(metadata={'query_param': { 'field_name': 'origin', 'style': 'form', 'explode': True }})
    r"""Origin of the portal"""
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetContactCountResponseBody:
    r"""Contact count for the request successfully."""
    count: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('count'), 'exclude': lambda f: f is None }})
    r"""Count of Contact"""
    



@dataclasses.dataclass
class GetContactCountResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    object: Optional[GetContactCountResponseBody] = dataclasses.field(default=None)
    r"""Contact count for the request successfully."""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    r"""Raw HTTP response; suitable for custom response parsing"""
    

