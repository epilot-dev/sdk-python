"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ...models.components import createssouserrequest as components_createssouserrequest
from ...models.components import origin as components_origin
from ...models.components import portaluser as components_portaluser
from dataclasses_json import Undefined, dataclass_json
from epilot import utils
from typing import Optional


@dataclasses.dataclass
class CreateSSOUserSecurity:
    epilot_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'bearer', 'field_name': 'Authorization' }})
    



@dataclasses.dataclass
class CreateSSOUserRequest:
    create_sso_user_request: components_createssouserrequest.CreateSSOUserRequest = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    r"""Portal user payload"""
    origin: components_origin.Origin = dataclasses.field(metadata={'query_param': { 'field_name': 'origin', 'style': 'form', 'explode': True }})
    r"""Origin of the portal"""
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateSSOUserResponseBody:
    r"""SSO User created successfully."""
    data: Optional[components_portaluser.PortalUser] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('data'), 'exclude': lambda f: f is None }})
    r"""The portal user entity"""
    



@dataclasses.dataclass
class CreateSSOUserResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    object: Optional[CreateSSOUserResponseBody] = dataclasses.field(default=None)
    r"""SSO User created successfully."""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    r"""Raw HTTP response; suitable for custom response parsing"""
    

