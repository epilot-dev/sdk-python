"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ...models.components import createuserrequest as components_createuserrequest
from ...models.components import origin as components_origin
from ...models.components import portaluser as components_portaluser
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from epilot import utils
from typing import Optional


@dataclasses.dataclass
class CreateUserRequest:
    create_user_request: components_createuserrequest.CreateUserRequest = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    r"""Portal user payload"""
    origin: components_origin.Origin = dataclasses.field(metadata={'query_param': { 'field_name': 'origin', 'style': 'form', 'explode': True }})
    r"""Origin of the portal"""
    


class CreateUserMessage(str, Enum):
    USER_CREATED_SUCCESSFULLY = 'User created successfully'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateUserResponseBody:
    r"""User created successfully."""
    message: CreateUserMessage = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message') }})
    response: components_portaluser.PortalUser = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('response') }})
    r"""The portal user entity"""
    



@dataclasses.dataclass
class CreateUserResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    object: Optional[CreateUserResponseBody] = dataclasses.field(default=None)
    r"""User created successfully."""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    r"""Raw HTTP response; suitable for custom response parsing"""
    

