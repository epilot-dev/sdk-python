"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from epilot import utils
from typing import Any, Optional


@dataclasses.dataclass
class UserExistsRequest:
    
    email: str = dataclasses.field(metadata={'query_param': { 'field_name': 'email', 'style': 'form', 'explode': True }})

    org_id: str = dataclasses.field(metadata={'query_param': { 'field_name': 'org_id', 'style': 'form', 'explode': True }})

    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UserExists404ApplicationJSON:
    r"""User does not exist in the portal"""
    
    exists: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('exists'), 'exclude': lambda f: f is None }})

    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UserExists200ApplicationJSON:
    r"""User exists in the portal"""
    
    exists: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('exists'), 'exclude': lambda f: f is None }})

    user: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('user'), 'exclude': lambda f: f is None }})

    

@dataclasses.dataclass
class UserExistsResponse:
    
    content_type: str = dataclasses.field()

    status_code: int = dataclasses.field()

    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)

    user_exists_200_application_json_object: Optional[UserExists200ApplicationJSON] = dataclasses.field(default=None)

    r"""User exists in the portal"""
    user_exists_404_application_json_object: Optional[UserExists404ApplicationJSON] = dataclasses.field(default=None)

    r"""User does not exist in the portal"""
    