"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .opportunity import Opportunity, OpportunityTypedDict
from epilot_customer_portal.types import BaseModel
from epilot_customer_portal.utils import FieldMetadata, QueryParamMetadata
import pydantic
from typing import List, Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class GetSearchableAttributesForOpportunitiesRequestTypedDict(TypedDict):
    from_: NotRequired[float]
    size: NotRequired[float]
    

class GetSearchableAttributesForOpportunitiesRequest(BaseModel):
    from_: Annotated[Optional[float], pydantic.Field(alias="from"), FieldMetadata(query=QueryParamMetadata(style="form", explode=True))] = 0
    size: Annotated[Optional[float], FieldMetadata(query=QueryParamMetadata(style="form", explode=True))] = 1000
    

class GetSearchableAttributesForOpportunitiesResponseBodyTypedDict(TypedDict):
    r"""The opportunities is retrieved successfully for the portal user."""
    
    data: NotRequired[List[OpportunityTypedDict]]
    

class GetSearchableAttributesForOpportunitiesResponseBody(BaseModel):
    r"""The opportunities is retrieved successfully for the portal user."""
    
    data: Optional[List[Opportunity]] = None
    
