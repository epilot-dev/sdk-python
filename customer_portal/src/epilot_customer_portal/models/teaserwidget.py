"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from epilot_customer_portal.types import BaseModel
import pydantic
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class TeaserWidgetLabelTypedDict(TypedDict):
    de: NotRequired[str]
    en: NotRequired[str]
    

class TeaserWidgetLabel(BaseModel):
    de: Optional[str] = None
    en: Optional[str] = None
    

class ButtonTypedDict(TypedDict):
    label: NotRequired[TeaserWidgetLabelTypedDict]
    url: NotRequired[str]
    

class Button(BaseModel):
    label: Optional[TeaserWidgetLabel] = None
    url: Optional[str] = None
    

class TeaserWidgetHeadlineTypedDict(TypedDict):
    de: NotRequired[str]
    en: NotRequired[str]
    

class TeaserWidgetHeadline(BaseModel):
    de: Optional[str] = None
    en: Optional[str] = None
    

class TeaserWidgetSubHeadlineTypedDict(TypedDict):
    de: NotRequired[str]
    en: NotRequired[str]
    

class TeaserWidgetSubHeadline(BaseModel):
    de: Optional[str] = None
    en: Optional[str] = None
    

class TeaserWidgetType(str, Enum):
    ACTION_WIDGET = "ACTION_WIDGET"
    CONTENT_WIDGET = "CONTENT_WIDGET"
    ENTITY_WIDGET = "ENTITY_WIDGET"
    TEASER_WIDGET = "TEASER_WIDGET"
    DOCUMENT_WIDGET = "DOCUMENT_WIDGET"
    PAYMENT_WIDGET = "PAYMENT_WIDGET"

class TeaserWidgetTypedDict(TypedDict):
    id: str
    list_index: int
    r"""Index of the widget in the list, used for ordering (left or right)"""
    type: TeaserWidgetType
    button: NotRequired[ButtonTypedDict]
    headline: NotRequired[TeaserWidgetHeadlineTypedDict]
    image_url: NotRequired[str]
    sub_headline: NotRequired[TeaserWidgetSubHeadlineTypedDict]
    

class TeaserWidget(BaseModel):
    id: str
    list_index: Annotated[int, pydantic.Field(alias="listIndex")]
    r"""Index of the widget in the list, used for ordering (left or right)"""
    type: TeaserWidgetType
    button: Optional[Button] = None
    headline: Optional[TeaserWidgetHeadline] = None
    image_url: Annotated[Optional[str], pydantic.Field(alias="imageUrl")] = None
    sub_headline: Annotated[Optional[TeaserWidgetSubHeadline], pydantic.Field(alias="subHeadline")] = None
    
