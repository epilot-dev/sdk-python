"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from epilot_customer_portal.types import BaseModel
import pydantic
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class AutomationEntityMappingTypedDict(TypedDict):
    enabled: NotRequired[bool]
    r"""Enable/Disable automation entity mapping"""
    

class AutomationEntityMapping(BaseModel):
    enabled: Optional[bool] = None
    r"""Enable/Disable automation entity mapping"""
    

class AutomationPreviewTypedDict(TypedDict):
    enabled: NotRequired[bool]
    r"""Enable/Disable automation preview"""
    

class AutomationPreview(BaseModel):
    enabled: Optional[bool] = None
    r"""Enable/Disable automation preview"""
    

class CentralInboxPreviewSettingTypedDict(TypedDict):
    enabled: NotRequired[bool]
    r"""Enable/Disable central inbox preview setting"""
    

class CentralInboxPreviewSetting(BaseModel):
    enabled: Optional[bool] = None
    r"""Enable/Disable central inbox preview setting"""
    

class ContractsPreviewSettingTypedDict(TypedDict):
    enabled: NotRequired[bool]
    r"""Enable/Disable contracts preview setting"""
    

class ContractsPreviewSetting(BaseModel):
    enabled: Optional[bool] = None
    r"""Enable/Disable contracts preview setting"""
    

class DisableIvyTypedDict(TypedDict):
    enabled: NotRequired[bool]
    r"""Enable/Disable Ivy"""
    

class DisableIvy(BaseModel):
    enabled: Optional[bool] = None
    r"""Enable/Disable Ivy"""
    

class DoubleOptInTypedDict(TypedDict):
    enabled: NotRequired[bool]
    r"""Enable/Disable double opt-in"""
    

class DoubleOptIn(BaseModel):
    enabled: Optional[bool] = None
    r"""Enable/Disable double opt-in"""
    

class EcommerceCatalogPreviewTypedDict(TypedDict):
    enabled: NotRequired[bool]
    r"""Enable/Disable ecommerce catalog preview"""
    

class EcommerceCatalogPreview(BaseModel):
    enabled: Optional[bool] = None
    r"""Enable/Disable ecommerce catalog preview"""
    

class EcommerceOpportunitiesPreviewTypedDict(TypedDict):
    enabled: NotRequired[bool]
    r"""Enable/Disable ecommerce opportunities preview"""
    

class EcommerceOpportunitiesPreview(BaseModel):
    enabled: Optional[bool] = None
    r"""Enable/Disable ecommerce opportunities preview"""
    

class EcommercePreviewTypedDict(TypedDict):
    enabled: NotRequired[bool]
    r"""Enable/Disable ecommerce preview"""
    

class EcommercePreview(BaseModel):
    enabled: Optional[bool] = None
    r"""Enable/Disable ecommerce preview"""
    

class EndCustomerPortalTypedDict(TypedDict):
    enabled: NotRequired[bool]
    r"""Enable/Disable end customer portal"""
    

class EndCustomerPortal(BaseModel):
    enabled: Optional[bool] = None
    r"""Enable/Disable end customer portal"""
    

class EntitySchemaBuilderTypedDict(TypedDict):
    enabled: NotRequired[bool]
    r"""Enable/Disable entity schema builder"""
    

class EntitySchemaBuilder(BaseModel):
    enabled: Optional[bool] = None
    r"""Enable/Disable entity schema builder"""
    

class InstallerPortalTypedDict(TypedDict):
    enabled: NotRequired[bool]
    r"""Enable/Disable installer portal"""
    

class InstallerPortal(BaseModel):
    enabled: Optional[bool] = None
    r"""Enable/Disable installer portal"""
    

class LogicEditorPreviewTypedDict(TypedDict):
    enabled: NotRequired[bool]
    r"""Enable/Disable logic editor preview"""
    

class LogicEditorPreview(BaseModel):
    enabled: Optional[bool] = None
    r"""Enable/Disable logic editor preview"""
    

class NewNavigationTypedDict(TypedDict):
    enabled: NotRequired[bool]
    r"""Enable/Disable new navigation"""
    

class NewNavigation(BaseModel):
    enabled: Optional[bool] = None
    r"""Enable/Disable new navigation"""
    

class PartneringTypedDict(TypedDict):
    enabled: NotRequired[bool]
    r"""Enable/Disable partnering"""
    

class Partnering(BaseModel):
    enabled: Optional[bool] = None
    r"""Enable/Disable partnering"""
    

class ProductAvailabilityTypedDict(TypedDict):
    enabled: NotRequired[bool]
    r"""Enable/Disable product availability"""
    

class ProductAvailability(BaseModel):
    enabled: Optional[bool] = None
    r"""Enable/Disable product availability"""
    

class SsoTypedDict(TypedDict):
    enabled: NotRequired[bool]
    r"""Enable/Disable single sign-on (SSO)"""
    

class Sso(BaseModel):
    enabled: Optional[bool] = None
    r"""Enable/Disable single sign-on (SSO)"""
    

class SubmissionPreviewTypedDict(TypedDict):
    enabled: NotRequired[bool]
    r"""Enable/Disable submission preview"""
    

class SubmissionPreview(BaseModel):
    enabled: Optional[bool] = None
    r"""Enable/Disable submission preview"""
    

class UserRolesPreviewTypedDict(TypedDict):
    enabled: NotRequired[bool]
    r"""Enable/Disable user roles preview"""
    

class UserRolesPreview(BaseModel):
    enabled: Optional[bool] = None
    r"""Enable/Disable user roles preview"""
    

class OrganizationSettingsTypedDict(TypedDict):
    automation_entity_mapping: NotRequired[AutomationEntityMappingTypedDict]
    automation_preview: NotRequired[AutomationPreviewTypedDict]
    central_inbox_preview_setting: NotRequired[CentralInboxPreviewSettingTypedDict]
    contracts_preview_setting: NotRequired[ContractsPreviewSettingTypedDict]
    disable_ivy: NotRequired[DisableIvyTypedDict]
    double_opt_in: NotRequired[DoubleOptInTypedDict]
    ecommerce_catalog_preview: NotRequired[EcommerceCatalogPreviewTypedDict]
    ecommerce_opportunities_preview: NotRequired[EcommerceOpportunitiesPreviewTypedDict]
    ecommerce_preview: NotRequired[EcommercePreviewTypedDict]
    end_customer_portal: NotRequired[EndCustomerPortalTypedDict]
    entity_schema_builder: NotRequired[EntitySchemaBuilderTypedDict]
    installer_portal: NotRequired[InstallerPortalTypedDict]
    logic_editor_preview: NotRequired[LogicEditorPreviewTypedDict]
    new_navigation: NotRequired[NewNavigationTypedDict]
    partnering: NotRequired[PartneringTypedDict]
    product_availability: NotRequired[ProductAvailabilityTypedDict]
    sso: NotRequired[SsoTypedDict]
    submission_preview: NotRequired[SubmissionPreviewTypedDict]
    user_roles_preview: NotRequired[UserRolesPreviewTypedDict]
    

class OrganizationSettings(BaseModel):
    automation_entity_mapping: Optional[AutomationEntityMapping] = None
    automation_preview: Optional[AutomationPreview] = None
    central_inbox_preview_setting: Optional[CentralInboxPreviewSetting] = None
    contracts_preview_setting: Optional[ContractsPreviewSetting] = None
    disable_ivy: Optional[DisableIvy] = None
    double_opt_in: Optional[DoubleOptIn] = None
    ecommerce_catalog_preview: Optional[EcommerceCatalogPreview] = None
    ecommerce_opportunities_preview: Optional[EcommerceOpportunitiesPreview] = None
    ecommerce_preview: Optional[EcommercePreview] = None
    end_customer_portal: Optional[EndCustomerPortal] = None
    entity_schema_builder: Optional[EntitySchemaBuilder] = None
    installer_portal: Optional[InstallerPortal] = None
    logic_editor_preview: Optional[LogicEditorPreview] = None
    new_navigation: Optional[NewNavigation] = None
    partnering: Optional[Partnering] = None
    product_availability: Annotated[Optional[ProductAvailability], pydantic.Field(alias="product-availability")] = None
    sso: Optional[Sso] = None
    submission_preview: Optional[SubmissionPreview] = None
    user_roles_preview: Optional[UserRolesPreview] = None
    
