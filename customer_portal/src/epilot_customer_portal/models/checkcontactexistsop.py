"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .contactexistsrequest import ContactExistsRequest, ContactExistsRequestTypedDict
from .origin import Origin
from epilot_customer_portal.types import BaseModel
from epilot_customer_portal.utils import FieldMetadata, QueryParamMetadata, RequestMetadata
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class CheckContactExistsRequestTypedDict(TypedDict):
    contact_exists_request: ContactExistsRequestTypedDict
    r"""Request payload"""
    origin: Origin
    r"""Origin of the portal"""
    

class CheckContactExistsRequest(BaseModel):
    contact_exists_request: Annotated[ContactExistsRequest, FieldMetadata(request=RequestMetadata(media_type="application/json"))]
    r"""Request payload"""
    origin: Annotated[Origin, FieldMetadata(query=QueryParamMetadata(style="form", explode=True))]
    r"""Origin of the portal"""
    

class CheckContactExistsResponseBodyTypedDict(TypedDict):
    r"""Return result true|false if the contact with given identifiers exists."""
    
    exists: NotRequired[bool]
    r"""Whether the contact exists with the given identifier values"""
    

class CheckContactExistsResponseBody(BaseModel):
    r"""Return result true|false if the contact with given identifiers exists."""
    
    exists: Optional[bool] = None
    r"""Whether the contact exists with the given identifier values"""
    
