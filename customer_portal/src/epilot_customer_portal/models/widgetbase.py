"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from epilot_customer_portal.types import BaseModel
import pydantic
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class WidgetBaseHeadlineTypedDict(TypedDict):
    de: NotRequired[str]
    en: NotRequired[str]
    

class WidgetBaseHeadline(BaseModel):
    de: Optional[str] = None
    en: Optional[str] = None
    

class WidgetBaseSubHeadlineTypedDict(TypedDict):
    de: NotRequired[str]
    en: NotRequired[str]
    

class WidgetBaseSubHeadline(BaseModel):
    de: Optional[str] = None
    en: Optional[str] = None
    

class WidgetBaseType(str, Enum):
    ACTION_WIDGET = "ACTION_WIDGET"
    CONTENT_WIDGET = "CONTENT_WIDGET"
    ENTITY_WIDGET = "ENTITY_WIDGET"
    TEASER_WIDGET = "TEASER_WIDGET"
    DOCUMENT_WIDGET = "DOCUMENT_WIDGET"
    PAYMENT_WIDGET = "PAYMENT_WIDGET"

class WidgetBaseTypedDict(TypedDict):
    id: str
    list_index: int
    r"""Index of the widget in the list, used for ordering (left or right)"""
    type: WidgetBaseType
    headline: NotRequired[WidgetBaseHeadlineTypedDict]
    sub_headline: NotRequired[WidgetBaseSubHeadlineTypedDict]
    

class WidgetBase(BaseModel):
    id: str
    list_index: Annotated[int, pydantic.Field(alias="listIndex")]
    r"""Index of the widget in the list, used for ordering (left or right)"""
    type: WidgetBaseType
    headline: Optional[WidgetBaseHeadline] = None
    sub_headline: Annotated[Optional[WidgetBaseSubHeadline], pydantic.Field(alias="subHeadline")] = None
    
