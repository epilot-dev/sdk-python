"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .origin import Origin
from epilot_customer_portal.types import BaseModel
from epilot_customer_portal.utils import FieldMetadata, QueryParamMetadata
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class UserExistsRequestTypedDict(TypedDict):
    email: str
    org_id: str
    origin: NotRequired[Origin]
    r"""Checkes if user exists in the given portal origin. If not provided, checks in all origins."""
    

class UserExistsRequest(BaseModel):
    email: Annotated[str, FieldMetadata(query=QueryParamMetadata(style="form", explode=True))]
    org_id: Annotated[str, FieldMetadata(query=QueryParamMetadata(style="form", explode=True))]
    origin: Annotated[Optional[Origin], FieldMetadata(query=QueryParamMetadata(style="form", explode=True))] = None
    r"""Checkes if user exists in the given portal origin. If not provided, checks in all origins."""
    

class UserExistsResponseBodyTypedDict(TypedDict):
    r"""Returned whether the user exists in the portal or not successfully."""
    
    exists: bool
    r"""Whether the user exists in the portal"""
    

class UserExistsResponseBody(BaseModel):
    r"""Returned whether the user exists in the portal or not successfully."""
    
    exists: bool
    r"""Whether the user exists in the portal"""
    
