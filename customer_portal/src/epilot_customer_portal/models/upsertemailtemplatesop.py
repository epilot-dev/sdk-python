"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .emailtemplates import EmailTemplates, EmailTemplatesTypedDict
from .origin import Origin
from enum import Enum
from epilot_customer_portal.types import BaseModel
from epilot_customer_portal.utils import FieldMetadata, QueryParamMetadata, RequestMetadata
import pydantic
from typing import TypedDict
from typing_extensions import Annotated


class UpsertEmailTemplatesRequestTypedDict(TypedDict):
    email_templates: EmailTemplatesTypedDict
    r"""Email templates payload"""
    origin: Origin
    r"""Origin of the portal"""
    

class UpsertEmailTemplatesRequest(BaseModel):
    email_templates: Annotated[EmailTemplates, FieldMetadata(request=RequestMetadata(media_type="application/json"))]
    r"""Email templates payload"""
    origin: Annotated[Origin, FieldMetadata(query=QueryParamMetadata(style="form", explode=True))]
    r"""Origin of the portal"""
    

class Message(str, Enum):
    EMAIL_TEMPLATES_UPSERTED_SUCCESSFULLY = "Email Templates upserted successfully"

class UpsertEmailTemplatesResponseBodyTypedDict(TypedDict):
    r"""Upserted email templates of the portal successfully."""
    
    email_templates: EmailTemplatesTypedDict
    r"""Email templates used for authentication and internal processes"""
    message: Message
    

class UpsertEmailTemplatesResponseBody(BaseModel):
    r"""Upserted email templates of the portal successfully."""
    
    email_templates: Annotated[EmailTemplates, pydantic.Field(alias="emailTemplates")]
    r"""Email templates used for authentication and internal processes"""
    message: Message
    
