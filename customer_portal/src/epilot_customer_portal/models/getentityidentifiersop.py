"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .entityslug import EntitySlug
from epilot_customer_portal.types import BaseModel
from epilot_customer_portal.utils import FieldMetadata, PathParamMetadata
from typing import List, Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class GetEntityIdentifiersRequestTypedDict(TypedDict):
    slug: EntitySlug
    r"""The slug of an entity"""
    

class GetEntityIdentifiersRequest(BaseModel):
    slug: Annotated[EntitySlug, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))]
    r"""The slug of an entity"""
    

class GetEntityIdentifiersDataTypedDict(TypedDict):
    name: NotRequired[str]
    r"""The name of the identifier"""
    type: NotRequired[str]
    r"""The type of the identifier"""
    

class GetEntityIdentifiersData(BaseModel):
    name: Optional[str] = None
    r"""The name of the identifier"""
    type: Optional[str] = None
    r"""The type of the identifier"""
    

class GetEntityIdentifiersResponseBodyTypedDict(TypedDict):
    r"""The identifiers of the requested entity returned successfully."""
    
    data: NotRequired[List[GetEntityIdentifiersDataTypedDict]]
    

class GetEntityIdentifiersResponseBody(BaseModel):
    r"""The identifiers of the requested entity returned successfully."""
    
    data: Optional[List[GetEntityIdentifiersData]] = None
    
