"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from epilot_customer_portal.types import BaseModel
import pydantic
from typing import List, Optional, TypedDict
from typing_extensions import Annotated, NotRequired, deprecated


@deprecated("warning: ** DEPRECATED ** - This will be removed in a future release, please migrate away from it as soon as possible.")
class SaveEntityFileAccessControl(str, Enum):
    r"""Access control level for the file. Deprecated - all files are private."""
    PRIVATE = "private"
    PUBLIC_READ = "public-read"

class S3refTypedDict(TypedDict):
    bucket: str
    r"""S3 bucket name"""
    key: str
    r"""S3 key"""
    

class S3ref(BaseModel):
    bucket: str
    r"""S3 bucket name"""
    key: str
    r"""S3 key"""
    

class FilesTypedDict(TypedDict):
    filename: str
    r"""File name"""
    s3ref: S3refTypedDict
    access_control: NotRequired[SaveEntityFileAccessControl]
    r"""Access control level for the file. Deprecated - all files are private."""
    

class Files(BaseModel):
    filename: str
    r"""File name"""
    s3ref: S3ref
    access_control: Annotated[Optional[SaveEntityFileAccessControl], pydantic.Field(deprecated="warning: ** DEPRECATED ** - This will be removed in a future release, please migrate away from it as soon as possible.")] = SaveEntityFileAccessControl.PRIVATE
    r"""Access control level for the file. Deprecated - all files are private."""
    

class SaveEntityFileTypedDict(TypedDict):
    entity_id: str
    r"""Entity ID"""
    entity_type: str
    r"""Entity type"""
    files: List[FilesTypedDict]
    

class SaveEntityFile(BaseModel):
    entity_id: str
    r"""Entity ID"""
    entity_type: str
    r"""Entity type"""
    files: List[Files]
    
