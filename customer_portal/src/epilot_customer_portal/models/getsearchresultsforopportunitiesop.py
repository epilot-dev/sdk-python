"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .opportunity import Opportunity, OpportunityTypedDict
from epilot_customer_portal.types import BaseModel
from epilot_customer_portal.utils import FieldMetadata, QueryParamMetadata, RequestMetadata
import pydantic
from typing import List, Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class WorkflowsTypedDict(TypedDict):
    defition_id: NotRequired[str]
    name: NotRequired[str]
    

class Workflows(BaseModel):
    defition_id: Optional[str] = None
    name: Optional[str] = None
    

class GetSearchResultsForOpportunitiesRequestBodyTypedDict(TypedDict):
    addresses: NotRequired[List[str]]
    customers: NotRequired[List[str]]
    purposes: NotRequired[List[str]]
    workflows: NotRequired[List[List[WorkflowsTypedDict]]]
    

class GetSearchResultsForOpportunitiesRequestBody(BaseModel):
    addresses: Optional[List[str]] = None
    customers: Optional[List[str]] = None
    purposes: Optional[List[str]] = None
    workflows: Optional[List[List[Workflows]]] = None
    

class GetSearchResultsForOpportunitiesRequestTypedDict(TypedDict):
    request_body: GetSearchResultsForOpportunitiesRequestBodyTypedDict
    from_: NotRequired[float]
    size: NotRequired[float]
    

class GetSearchResultsForOpportunitiesRequest(BaseModel):
    request_body: Annotated[GetSearchResultsForOpportunitiesRequestBody, FieldMetadata(request=RequestMetadata(media_type="application/json"))]
    from_: Annotated[Optional[float], pydantic.Field(alias="from"), FieldMetadata(query=QueryParamMetadata(style="form", explode=True))] = 0
    size: Annotated[Optional[float], FieldMetadata(query=QueryParamMetadata(style="form", explode=True))] = 1000
    

class GetSearchResultsForOpportunitiesResponseBodyTypedDict(TypedDict):
    r"""The opportunities is retrieved successfully for the portal user."""
    
    data: NotRequired[List[OpportunityTypedDict]]
    

class GetSearchResultsForOpportunitiesResponseBody(BaseModel):
    r"""The opportunities is retrieved successfully for the portal user."""
    
    data: Optional[List[Opportunity]] = None
    
