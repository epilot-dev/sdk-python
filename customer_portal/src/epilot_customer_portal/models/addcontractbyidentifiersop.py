"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .entityitem import EntityItem, EntityItemTypedDict
from enum import Enum
from epilot_customer_portal import utils
from epilot_customer_portal.types import BaseModel
from typing import Optional, TypedDict
from typing_extensions import NotRequired


class Reason(str, Enum):
    MULTIPLE = "MULTIPLE"
    DRAFT = "DRAFT"
class AddContractByIdentifiersECPResponseBodyData(BaseModel):
    reason: Reason
    message: Optional[str] = None
    r"""Error message"""
    


class AddContractByIdentifiersECPResponseBody(Exception):
    r"""Contract was found but is not assignable in its current state."""
    data: AddContractByIdentifiersECPResponseBodyData

    def __init__(self, data: AddContractByIdentifiersECPResponseBodyData):
        self.data = data

    def __str__(self) -> str:
        return utils.marshal_json(self.data, AddContractByIdentifiersECPResponseBodyData)


class AddContractByIdentifiersResponseBodyTypedDict(TypedDict):
    r"""Contract was assigned successfully."""
    
    hits: float
    data: NotRequired[EntityItemTypedDict]
    

class AddContractByIdentifiersResponseBody(BaseModel):
    r"""Contract was assigned successfully."""
    
    hits: float
    data: Optional[EntityItem] = None
    
