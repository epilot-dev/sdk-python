"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .entityslug import EntitySlug
from epilot_customer_portal.types import BaseModel
import pydantic
from typing import List, Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class EntitySearchParamsTypedDict(TypedDict):
    slug: EntitySlug
    r"""URL-friendly identifier for the entity schema"""
    fields: NotRequired[List[str]]
    r"""List of entity fields to include in search results"""
    from_: NotRequired[int]
    hydrate: NotRequired[bool]
    r"""When true, enables entity hydration to resolve nested $relation & $relation_ref references in-place."""
    size: NotRequired[int]
    r"""Max search size is 1000 with higher values defaulting to 1000"""
    sort: NotRequired[str]
    

class EntitySearchParams(BaseModel):
    slug: EntitySlug
    r"""URL-friendly identifier for the entity schema"""
    fields: Optional[List[str]] = None
    r"""List of entity fields to include in search results"""
    from_: Annotated[Optional[int], pydantic.Field(alias="from")] = 0
    hydrate: Optional[bool] = False
    r"""When true, enables entity hydration to resolve nested $relation & $relation_ref references in-place."""
    size: Optional[int] = 10
    r"""Max search size is 1000 with higher values defaulting to 1000"""
    sort: Optional[str] = None
    
