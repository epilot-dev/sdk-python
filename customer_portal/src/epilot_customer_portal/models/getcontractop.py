"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .contract import Contract, ContractTypedDict
from .entityitem import EntityItem, EntityItemTypedDict
from .file import File, FileTypedDict
from .journeyactions import JourneyActions, JourneyActionsTypedDict
from .meter import Meter, MeterTypedDict
from .order import Order, OrderTypedDict
from epilot_customer_portal.types import BaseModel
from epilot_customer_portal.utils import FieldMetadata, PathParamMetadata
from typing import Any, Dict, List, Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class GetContractRequestTypedDict(TypedDict):
    id: str
    r"""The ID of the contract"""
    

class GetContractRequest(BaseModel):
    id: Annotated[str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))]
    r"""The ID of the contract"""
    

class GetContractResponseBodyTypedDict(TypedDict):
    r"""The requested contract returned successfully."""
    
    entity: NotRequired[ContractTypedDict]
    r"""The contract entity"""
    files: NotRequired[List[FileTypedDict]]
    r"""The related files of the requested contract"""
    journey_actions: NotRequired[List[JourneyActionsTypedDict]]
    meters: NotRequired[List[MeterTypedDict]]
    r"""The related meters of the requested contract"""
    orders: NotRequired[List[OrderTypedDict]]
    r"""The related orders of the requested contract"""
    relations: NotRequired[List[EntityItemTypedDict]]
    r"""The related entities of the requested contract"""
    workflow: NotRequired[List[Dict[str, Any]]]
    

class GetContractResponseBody(BaseModel):
    r"""The requested contract returned successfully."""
    
    entity: Optional[Contract] = None
    r"""The contract entity"""
    files: Optional[List[File]] = None
    r"""The related files of the requested contract"""
    journey_actions: Optional[List[JourneyActions]] = None
    meters: Optional[List[Meter]] = None
    r"""The related meters of the requested contract"""
    orders: Optional[List[Order]] = None
    r"""The related orders of the requested contract"""
    relations: Optional[List[EntityItem]] = None
    r"""The related entities of the requested contract"""
    workflow: Optional[List[Dict[str, Any]]] = None
    
