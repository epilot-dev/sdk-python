"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .origin import Origin
from epilot_customer_portal.types import BaseModel
import pydantic
from typing import List, Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class SavePortalFileS3refTypedDict(TypedDict):
    bucket: str
    r"""S3 bucket name"""
    key: str
    r"""S3 key"""
    

class SavePortalFileS3ref(BaseModel):
    bucket: str
    r"""S3 bucket name"""
    key: str
    r"""S3 key"""
    

class SavePortalFileFilesTypedDict(TypedDict):
    file_type: str
    r"""File type"""
    tags: NotRequired[List[str]]
    r"""Array of file tags"""
    filename: NotRequired[str]
    r"""File name"""
    s3ref: NotRequired[SavePortalFileS3refTypedDict]
    

class SavePortalFileFiles(BaseModel):
    file_type: str
    r"""File type"""
    tags: Annotated[Optional[List[str]], pydantic.Field(alias="_tags")] = None
    r"""Array of file tags"""
    filename: Optional[str] = None
    r"""File name"""
    s3ref: Optional[SavePortalFileS3ref] = None
    

class SavePortalFileTypedDict(TypedDict):
    files: List[SavePortalFileFilesTypedDict]
    origin: Origin
    r"""Origin of the portal"""
    

class SavePortalFile(BaseModel):
    files: List[SavePortalFileFiles]
    origin: Origin
    r"""Origin of the portal"""
    
