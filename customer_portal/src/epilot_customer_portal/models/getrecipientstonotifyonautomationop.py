"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from epilot_customer_portal.types import BaseModel
from typing import List, Optional, TypedDict
from typing_extensions import NotRequired


class GetRecipientsToNotifyOnAutomationRequestBodyTypedDict(TypedDict):
    emails: List[str]
    r"""Emails array that are part of the automation"""
    template_id: str
    r"""Entity ID"""
    

class GetRecipientsToNotifyOnAutomationRequestBody(BaseModel):
    emails: List[str]
    r"""Emails array that are part of the automation"""
    template_id: str
    r"""Entity ID"""
    

class RecipientsTypedDict(TypedDict):
    email: str
    r"""Email of the recipient"""
    recipient_id: str
    r"""Entity ID"""
    

class Recipients(BaseModel):
    email: str
    r"""Email of the recipient"""
    recipient_id: str
    r"""Entity ID"""
    

class GetRecipientsToNotifyOnAutomationResponseBodyTypedDict(TypedDict):
    r"""Returns the valid recipients to notify successfully."""
    
    message: NotRequired[str]
    r"""Reason to not notify the user"""
    recipients: NotRequired[List[RecipientsTypedDict]]
    r"""Filtered recipients to notify"""
    

class GetRecipientsToNotifyOnAutomationResponseBody(BaseModel):
    r"""Returns the valid recipients to notify successfully."""
    
    message: Optional[str] = None
    r"""Reason to not notify the user"""
    recipients: Optional[List[Recipients]] = None
    r"""Filtered recipients to notify"""
    
