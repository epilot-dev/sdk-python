"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from epilot_internal_auth.types import BaseModel
import pydantic
from pydantic import ConfigDict
from typing import Any, Dict, List, Optional, TypedDict, Union
from typing_extensions import NotRequired


class AuthRequestTypedDict(TypedDict):
    assume_roles: NotRequired[List[str]]
    r"""List of assumed roles"""
    expires: NotRequired[ExpiresTypedDict]
    org_id: NotRequired[str]
    r"""Organization Id"""
    

class AuthRequest(BaseModel):
    model_config = ConfigDict(populate_by_name=True, arbitrary_types_allowed=True, extra="allow")
    __pydantic_extra__:  Dict[str, Any] = pydantic.Field(init=False)
    
    assume_roles: Optional[List[str]] = None
    r"""List of assumed roles"""
    expires: Optional[Expires] = None
    org_id: Optional[str] = None
    r"""Organization Id"""
    
    @property
    def additional_properties(self):
        return self.__pydantic_extra__

    @additional_properties.setter
    def additional_properties(self, value):
        self.__pydantic_extra__ = value # pyright: ignore[reportIncompatibleVariableOverride]
    

ExpiresTypedDict = Union[str, int]


Expires = Union[str, int]

