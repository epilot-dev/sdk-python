"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from epilot import utils
from typing import List, Optional

class Types(str, Enum):
    CREATE_METER_READING = 'CreateMeterReading'
    UPDATE_METER_READING = 'UpdateMeterReading'
    DOC_DOWNLOADED_FROM_PORTAL = 'DocDownloadedFromPortal'
    MESSAGE_ACTIVITY = 'MessageActivity'
    SYNC_ACTIVITY = 'SyncActivity'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Configuration:
    schema: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('schema'), 'exclude': lambda f: f is None }})
    types: Optional[List[Types]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('types'), 'exclude': lambda f: f is None }})
    


class Type(str, Enum):
    ACTIVITY = 'activity'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ActivityTrigger:
    configuration: Configuration = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('configuration') }})
    type: Type = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    

