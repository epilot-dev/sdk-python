"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from .comparison import Comparison
from dataclasses_json import Undefined, dataclass_json
from epilot import utils
from typing import List, Optional, Union


@dataclasses.dataclass
class Value:
    pass


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TriggerCondition:
    comparison: Comparison = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('comparison') }})
    source: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('source') }})
    value: Optional[Union[str, float, List[str], List[float]]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value'), 'exclude': lambda f: f is None }})
    

