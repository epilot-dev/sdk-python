"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import retryreq as shared_retryreq
from typing import Optional



@dataclasses.dataclass
class RetriggerActionRequest:
    action_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'action_id', 'style': 'simple', 'explode': False }})
    r"""Id of Action to retry."""
    execution_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'execution_id', 'style': 'simple', 'explode': False }})
    r"""Execution Id"""
    retry_req: Optional[shared_retryreq.RetryReq] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})
    r"""Retry request details."""
    




@dataclasses.dataclass
class RetriggerActionResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    r"""Raw HTTP response; suitable for custom response parsing"""
    

