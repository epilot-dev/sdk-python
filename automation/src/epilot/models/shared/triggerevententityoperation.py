"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import entityoperation as shared_entityoperation
from dataclasses_json import Undefined, dataclass_json
from epilot import utils
from typing import Final, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class TriggerEventEntityOperation:
    activity_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('activity_id') }})
    entity_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('entity_id') }})
    operation_type: shared_entityoperation.EntityOperation = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('operation_type') }})
    org_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('org_id') }})
    TYPE: Final[Optional[str]] = dataclasses.field(default='entity_operation', metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    

