"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from epilot_automation.types import BaseModel
import pydantic
from pydantic import ConfigDict
from typing import Any, Dict, List, Optional, TypedDict, Union
from typing_extensions import Annotated, NotRequired


UniqTypedDict = Union[bool, List[str]]
r"""Unique array"""


Uniq = Union[bool, List[str]]
r"""Unique array"""


class OperationObjectNodeTypedDict(TypedDict):
    append: NotRequired[List[Any]]
    r"""Append to array"""
    copy: NotRequired[str]
    r"""Copy JSONPath value from source entity context"""
    set: NotRequired[Any]
    uniq: NotRequired[UniqTypedDict]
    r"""Unique array"""
    

class OperationObjectNode(BaseModel):
    model_config = ConfigDict(populate_by_name=True, arbitrary_types_allowed=True, extra="allow")
    __pydantic_extra__:  Dict[str, Any] = pydantic.Field(init=False)
    
    append: Annotated[Optional[List[Any]], pydantic.Field(alias="_append")] = None
    r"""Append to array"""
    copy: Annotated[Optional[str], pydantic.Field(alias="_copy")] = None
    r"""Copy JSONPath value from source entity context"""
    set: Annotated[Optional[Any], pydantic.Field(alias="_set")] = None
    uniq: Annotated[Optional[Uniq], pydantic.Field(alias="_uniq")] = None
    r"""Unique array"""
    
    @property
    def additional_properties(self):
        return self.__pydantic_extra__

    @additional_properties.setter
    def additional_properties(self, value):
        self.__pydantic_extra__ = value # pyright: ignore[reportIncompatibleVariableOverride]
    
