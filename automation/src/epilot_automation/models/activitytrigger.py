"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from epilot_automation.types import BaseModel
import pydantic
from typing import List, Optional, TypedDict, Union
from typing_extensions import Annotated, NotRequired


class One(str, Enum):
    CREATE_METER_READING = "CreateMeterReading"
    UPDATE_METER_READING = "UpdateMeterReading"
    DOC_DOWNLOADED_FROM_PORTAL = "DocDownloadedFromPortal"
    PORTAL_USER_RESET_PASSWORD = "PortalUserResetPassword"
    PORTAL_USER_RESET_FORGOT_PASSWORD = "PortalUserResetForgotPassword"

TypesTypedDict = Union[One, str]


Types = Union[One, str]


class ConfigurationTypedDict(TypedDict):
    schema_: NotRequired[str]
    types: NotRequired[List[TypesTypedDict]]
    

class Configuration(BaseModel):
    schema_: Annotated[Optional[str], pydantic.Field(alias="schema")] = None
    types: Optional[List[Types]] = None
    

class Type(str, Enum):
    ACTIVITY = "activity"

class ActivityTriggerTypedDict(TypedDict):
    configuration: ConfigurationTypedDict
    type: Type
    id: NotRequired[str]
    

class ActivityTrigger(BaseModel):
    configuration: Configuration
    type: Type
    id: Optional[str] = None
    
