"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from epilot_automation.types import BaseModel
from epilot_automation.utils import FieldMetadata, QueryParamMetadata
import pydantic
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class GetExecutionsRequestTypedDict(TypedDict):
    entity_id: NotRequired[str]
    from_: NotRequired[int]
    r"""Pagination: starting for results"""
    size: NotRequired[int]
    r"""Pagination: max number of results to return"""
    

class GetExecutionsRequest(BaseModel):
    entity_id: Annotated[Optional[str], FieldMetadata(query=QueryParamMetadata(style="form", explode=True))] = None
    from_: Annotated[Optional[int], pydantic.Field(alias="from"), FieldMetadata(query=QueryParamMetadata(style="form", explode=True))] = 0
    r"""Pagination: starting for results"""
    size: Annotated[Optional[int], FieldMetadata(query=QueryParamMetadata(style="form", explode=True))] = 25
    r"""Pagination: max number of results to return"""
    
