"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from datetime import datetime
from epilot_automation.types import BaseModel
import pydantic
from pydantic import ConfigDict
from typing import Any, Dict, List, Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class EntityItemSnapshotTypedDict(TypedDict):
    created_at: datetime
    id: str
    org: str
    schema_: str
    title: str
    updated_at: datetime
    tags: NotRequired[List[str]]
    

class EntityItemSnapshot(BaseModel):
    model_config = ConfigDict(populate_by_name=True, arbitrary_types_allowed=True, extra="allow")
    __pydantic_extra__:  Dict[str, Any] = pydantic.Field(init=False)
    
    created_at: Annotated[datetime, pydantic.Field(alias="_created_at")]
    id: Annotated[str, pydantic.Field(alias="_id")]
    org: Annotated[str, pydantic.Field(alias="_org")]
    schema_: Annotated[str, pydantic.Field(alias="_schema")]
    title: Annotated[str, pydantic.Field(alias="_title")]
    updated_at: Annotated[datetime, pydantic.Field(alias="_updated_at")]
    tags: Annotated[Optional[List[str]], pydantic.Field(alias="_tags")] = None
    
    @property
    def additional_properties(self):
        return self.__pydantic_extra__

    @additional_properties.setter
    def additional_properties(self, value):
        self.__pydantic_extra__ = value # pyright: ignore[reportIncompatibleVariableOverride]
    
