"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .uploadfilepayload import UploadFilePayload, UploadFilePayloadTypedDict
from epilot_file.types import BaseModel
from epilot_file.utils import FieldMetadata, QueryParamMetadata, RequestMetadata
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class UploadFileRequestTypedDict(TypedDict):
    upload_file_payload: NotRequired[UploadFilePayloadTypedDict]
    file_entity_id: NotRequired[str]
    r"""file entity id"""
    

class UploadFileRequest(BaseModel):
    upload_file_payload: Annotated[Optional[UploadFilePayload], FieldMetadata(request=RequestMetadata(media_type="application/json"))] = None
    file_entity_id: Annotated[Optional[str], FieldMetadata(query=QueryParamMetadata(style="form", explode=True))] = None
    r"""file entity id"""
    

class UploadFileS3refTypedDict(TypedDict):
    bucket: str
    key: str
    

class UploadFileS3ref(BaseModel):
    bucket: str
    key: str
    

class UploadFileResponseBodyTypedDict(TypedDict):
    r"""Pre-signed URL for POST / PUT upload"""
    
    public_url: NotRequired[str]
    r"""Returned only if file is permanent i.e. file_entity_id is passed"""
    s3ref: NotRequired[UploadFileS3refTypedDict]
    upload_url: NotRequired[str]
    

class UploadFileResponseBody(BaseModel):
    r"""Pre-signed URL for POST / PUT upload"""
    
    public_url: Optional[str] = None
    r"""Returned only if file is permanent i.e. file_entity_id is passed"""
    s3ref: Optional[UploadFileS3ref] = None
    upload_url: Optional[str] = None
    
