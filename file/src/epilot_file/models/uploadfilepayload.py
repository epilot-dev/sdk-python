"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from epilot_file.types import BaseModel
from typing import Dict, Optional, TypedDict
from typing_extensions import NotRequired


class UploadFilePayloadTypedDict(TypedDict):
    filename: str
    index_tag: NotRequired[str]
    r"""Used to index the file at the storage layer, which helps when browsing for this file"""
    metadata: NotRequired[Dict[str, str]]
    r"""Allows passing in custom metadata for the file, expects key-value pairs of string type"""
    mime_type: NotRequired[str]
    r"""MIME type of file"""
    

class UploadFilePayload(BaseModel):
    filename: str
    index_tag: Optional[str] = None
    r"""Used to index the file at the storage layer, which helps when browsing for this file"""
    metadata: Optional[Dict[str, str]] = None
    r"""Allows passing in custom metadata for the file, expects key-value pairs of string type"""
    mime_type: Optional[str] = "application/octet-stream"
    r"""MIME type of file"""
    
