"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from epilot_permissions.types import BaseModel
from typing import List, Optional, TypedDict
from typing_extensions import NotRequired


class RoleSearchInputTypedDict(TypedDict):
    limit: NotRequired[float]
    r"""The Number of roles to return"""
    offset: NotRequired[float]
    r"""The number of roles to skip before starting to collect the result set"""
    org_ids: NotRequired[List[str]]
    r"""List of organization ids to filter by"""
    query: NotRequired[str]
    r"""Input to search across fields"""
    role_ids: NotRequired[List[str]]
    r"""List of role ids to filter by"""
    slugs: NotRequired[List[str]]
    r"""List of role slugs to filter by"""
    

class RoleSearchInput(BaseModel):
    limit: Optional[float] = 50
    r"""The Number of roles to return"""
    offset: Optional[float] = 0
    r"""The number of roles to skip before starting to collect the result set"""
    org_ids: Optional[List[str]] = None
    r"""List of organization ids to filter by"""
    query: Optional[str] = None
    r"""Input to search across fields"""
    role_ids: Optional[List[str]] = None
    r"""List of role ids to filter by"""
    slugs: Optional[List[str]] = None
    r"""List of role slugs to filter by"""
    
