"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from epilot import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class Geolocation:
    r"""Geo-location converted from text"""
    lat: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lat') }})
    r"""Latitude"""
    lng: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lng') }})
    r"""Longitude"""
    address_label: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('addressLabel'), 'exclude': lambda f: f is None }})
    r"""Full address label as returned by the location service"""
    relevance: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('relevance'), 'exclude': lambda f: f is None }})
    r"""Relevance of the result. A number between 0 and 1. Closer to 1 means more relevant"""
    

