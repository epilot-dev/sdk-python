"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .address import Address, AddressTypedDict
from epilot_partner.types import BaseModel
import pydantic
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class AddressGeolocationTypedDict(TypedDict):
    address: AddressTypedDict
    lat: float
    r"""Latitude"""
    lng: float
    r"""Longitude"""
    address_label: NotRequired[str]
    r"""Full address label as returned by the location service"""
    relevance: NotRequired[float]
    r"""Relevance of the result. A number between 0 and 1. Closer to 1 means more relevant"""
    

class AddressGeolocation(BaseModel):
    address: Address
    lat: float
    r"""Latitude"""
    lng: float
    r"""Longitude"""
    address_label: Annotated[Optional[str], pydantic.Field(alias="addressLabel")] = None
    r"""Full address label as returned by the location service"""
    relevance: Optional[float] = None
    r"""Relevance of the result. A number between 0 and 1. Closer to 1 means more relevant"""
    
