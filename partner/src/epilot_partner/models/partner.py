"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from epilot_partner.types import BaseModel
import pydantic
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class Status(str, Enum):
    PENDING = "Pending"
    REQUEST = "Request"
    DELETED = "Deleted"
    INVITED = "Invited"
    REJECTED = "Rejected"

class PartnerTypedDict(TypedDict):
    company_name: NotRequired[str]
    r"""Company name"""
    created_at: NotRequired[str]
    description: NotRequired[str]
    r"""Description"""
    email: NotRequired[str]
    r"""Email using to receive invitation"""
    id: NotRequired[str]
    invitation_email: NotRequired[str]
    r"""Email using to receive invitation"""
    invitation_token: NotRequired[str]
    r"""Invitation token"""
    organization_id: NotRequired[str]
    partner_org_id: NotRequired[str]
    r"""Target Organization"""
    signed_up_email: NotRequired[str]
    r"""Email using to sign up"""
    status: NotRequired[Status]
    

class Partner(BaseModel):
    company_name: Optional[str] = None
    r"""Company name"""
    created_at: Optional[str] = None
    description: Optional[str] = None
    r"""Description"""
    email: Optional[str] = None
    r"""Email using to receive invitation"""
    id: Optional[str] = None
    invitation_email: Annotated[Optional[str], pydantic.Field(deprecated="warning: ** DEPRECATED ** - This will be removed in a future release, please migrate away from it as soon as possible.")] = None
    r"""Email using to receive invitation"""
    invitation_token: Optional[str] = None
    r"""Invitation token"""
    organization_id: Optional[str] = None
    partner_org_id: Optional[str] = None
    r"""Target Organization"""
    signed_up_email: Optional[str] = None
    r"""Email using to sign up"""
    status: Optional[Status] = None
    
