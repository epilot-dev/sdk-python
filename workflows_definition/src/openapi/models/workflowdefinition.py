"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .closingreasonid import ClosingReasonID, ClosingReasonIDTypedDict
from .dynamicduedate import DynamicDueDate, DynamicDueDateTypedDict
from .section import Section, SectionTypedDict
from .step import Step, StepTypedDict
from .updateentityattributes import UpdateEntityAttributes, UpdateEntityAttributesTypedDict
from openapi.types import BaseModel
import pydantic
from typing import List, Optional, TypedDict, Union
from typing_extensions import Annotated, NotRequired


FlowTypedDict = Union[SectionTypedDict, StepTypedDict]


Flow = Union[Section, Step]


class WorkflowDefinitionTypedDict(TypedDict):
    flow: List[FlowTypedDict]
    name: str
    assigned_to: NotRequired[List[str]]
    closing_reasons: NotRequired[List[ClosingReasonIDTypedDict]]
    creation_time: NotRequired[str]
    r"""ISO String Date & Time"""
    description: NotRequired[str]
    due_date: NotRequired[str]
    dynamic_due_date: NotRequired[DynamicDueDateTypedDict]
    r"""set a Duedate for a step then a specific"""
    enable_ecp_workflow: NotRequired[bool]
    r"""Indicates whether this workflow is available for End Customer Portal or not. By default it's not."""
    id: NotRequired[str]
    last_update_time: NotRequired[str]
    r"""ISO String Date & Time"""
    update_entity_attributes: NotRequired[List[UpdateEntityAttributesTypedDict]]
    user_ids: NotRequired[List[float]]
    r"""This field is deprecated. Please use assignedTo"""
    

class WorkflowDefinition(BaseModel):
    flow: List[Flow]
    name: str
    assigned_to: Annotated[Optional[List[str]], pydantic.Field(alias="assignedTo")] = None
    closing_reasons: Annotated[Optional[List[ClosingReasonID]], pydantic.Field(alias="closingReasons")] = None
    creation_time: Annotated[Optional[str], pydantic.Field(alias="creationTime")] = None
    r"""ISO String Date & Time"""
    description: Optional[str] = None
    due_date: Annotated[Optional[str], pydantic.Field(alias="dueDate")] = None
    dynamic_due_date: Annotated[Optional[DynamicDueDate], pydantic.Field(alias="dynamicDueDate")] = None
    r"""set a Duedate for a step then a specific"""
    enable_ecp_workflow: Annotated[Optional[bool], pydantic.Field(alias="enableECPWorkflow")] = None
    r"""Indicates whether this workflow is available for End Customer Portal or not. By default it's not."""
    id: Optional[str] = None
    last_update_time: Annotated[Optional[str], pydantic.Field(alias="lastUpdateTime")] = None
    r"""ISO String Date & Time"""
    update_entity_attributes: Annotated[Optional[List[UpdateEntityAttributes]], pydantic.Field(alias="updateEntityAttributes")] = None
    user_ids: Annotated[Optional[List[float]], pydantic.Field(deprecated="warning: ** DEPRECATED ** - This will be removed in a future release, please migrate away from it as soon as possible.", alias="userIds")] = None
    r"""This field is deprecated. Please use assignedTo"""
    
