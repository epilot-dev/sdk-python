"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ...models.components import entity as components_entity
from ...models.components import entityitem as components_entityitem
from ...models.components import httpmetadata as components_httpmetadata
from dataclasses_json import Undefined, dataclass_json
from epilot import utils
from typing import List, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpsertEntityRequestBody:
    entity: components_entity.Entity = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('entity') }})
    unique_key: List[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('unique_key') }})
    



@dataclasses.dataclass
class UpsertEntityRequest:
    slug: str = dataclasses.field(metadata={'path_param': { 'field_name': 'slug', 'style': 'simple', 'explode': False }})
    r"""Entity Type"""
    request_body: Optional[UpsertEntityRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})
    activity_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'activity_id', 'style': 'form', 'explode': True }})
    r"""Activity to include in event feed"""
    async_: Optional[bool] = dataclasses.field(default=False, metadata={'query_param': { 'field_name': 'async', 'style': 'form', 'explode': True }})
    r"""Don't wait for updated entity to become available in Search API. Useful for large migrations"""
    dry_run: Optional[bool] = dataclasses.field(default=False, metadata={'query_param': { 'field_name': 'dry_run', 'style': 'form', 'explode': True }})
    r"""Dry Run mode = return results but does not perform the operation."""
    



@dataclasses.dataclass
class UpsertEntityResponse:
    http_meta: components_httpmetadata.HTTPMetadata = dataclasses.field()
    entity_item: Optional[components_entityitem.EntityItem] = dataclasses.field(default=None)
    r"""Entity was updated"""
    

