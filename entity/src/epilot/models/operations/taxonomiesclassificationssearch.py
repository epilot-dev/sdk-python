"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ...models.components import httpmetadata as components_httpmetadata
from ...models.components import taxonomyclassification as components_taxonomyclassification
from dataclasses_json import Undefined, dataclass_json
from epilot import utils
from typing import List, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TaxonomiesClassificationsSearchRequestBody:
    classification_ids: Optional[List[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('classificationIds'), 'exclude': lambda f: f is None }})
    



@dataclasses.dataclass
class TaxonomiesClassificationsSearchRequest:
    taxonomy_slug: str = dataclasses.field(metadata={'query_param': { 'field_name': 'taxonomySlug', 'style': 'form', 'explode': True }})
    r"""Taxonomy slug"""
    request_body: Optional[TaxonomiesClassificationsSearchRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TaxonomiesClassificationsSearchResponseBody:
    r"""Returns list of taxonomy classifications"""
    results: Optional[List[components_taxonomyclassification.TaxonomyClassification]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('results'), 'exclude': lambda f: f is None }})
    



@dataclasses.dataclass
class TaxonomiesClassificationsSearchResponse:
    http_meta: components_httpmetadata.HTTPMetadata = dataclasses.field()
    object: Optional[TaxonomiesClassificationsSearchResponseBody] = dataclasses.field(default=None)
    r"""Returns list of taxonomy classifications"""
    

