"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ...models.components import activityitem as components_activityitem
from ...models.components import httpmetadata as components_httpmetadata
from typing import Optional


@dataclasses.dataclass
class GetActivityRequest:
    id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""Activity Id"""
    operations_from: Optional[int] = dataclasses.field(default=0, metadata={'query_param': { 'field_name': 'operations_from', 'style': 'form', 'explode': True }})
    r"""Pagination offset for operations"""
    operations_size: Optional[int] = dataclasses.field(default=25, metadata={'query_param': { 'field_name': 'operations_size', 'style': 'form', 'explode': True }})
    r"""Maximum number of operations to include in response (default: 10)"""
    



@dataclasses.dataclass
class GetActivityResponse:
    http_meta: components_httpmetadata.HTTPMetadata = dataclasses.field()
    activity_item: Optional[components_activityitem.ActivityItem] = dataclasses.field(default=None)
    r"""Success"""
    

