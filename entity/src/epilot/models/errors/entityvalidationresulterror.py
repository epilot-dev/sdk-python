"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ...models.components import entityvalidationerror as components_entityvalidationerror
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from epilot import utils
from typing import List

class Status(str, Enum):
    ERROR = 'error'


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class EntityValidationResultError(Exception):
    r"""Validation result for a failed validation"""
    errors: List[components_entityvalidationerror.EntityValidationError] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errors') }})
    status: Status = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})
    

    def __str__(self) -> str:
        return utils.marshal_json(self, type(self))
