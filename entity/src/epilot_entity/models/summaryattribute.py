"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .settingflag import SettingFlag, SettingFlagTypedDict
from epilot_entity.types import BaseModel
from typing import List, Optional, TypedDict
from typing_extensions import NotRequired


class SummaryAttributeTypedDict(TypedDict):
    r"""Represents an expanded version of an attribute to be displayed in the list item summary.
    This configuration can be used in the following way:
    ```js
    {
    \"label\": \"Price components\" 
    \"value\": \"{{item.prices.length}} price components\" 
    \"show_as_tag\": true
    \"render_condition\": \"is_composite_price = \"true\"\" 
    }
    ```
    The value field supports handlebar expressions from which you can pick any field from the entity state.

    """
    
    label: str
    r"""Label to be shown on the top of the value."""
    value: str
    r"""A static value or an handlebar expression."""
    feature_flag: NotRequired[str]
    r"""Binds summary field visibility to the feature flag state."""
    render_condition: NotRequired[str]
    r"""Defines the conditional rendering expression for showing this field.
    When a valid expression is parsed, their evaluation defines the visibility of this attribute.
    Note: Empty or invalid expression have no effect on the field visibility.

    """
    settings_flag: NotRequired[List[SettingFlagTypedDict]]
    r"""This summary attribute should only be visible when all the settings have the correct value"""
    show_as_tag: NotRequired[bool]
    r"""Displays the value within a tag chip."""
    tag_color: NotRequired[str]
    r"""CSS hex color or CSS color name for the tag chip."""
    

class SummaryAttribute(BaseModel):
    r"""Represents an expanded version of an attribute to be displayed in the list item summary.
    This configuration can be used in the following way:
    ```js
    {
    \"label\": \"Price components\" 
    \"value\": \"{{item.prices.length}} price components\" 
    \"show_as_tag\": true
    \"render_condition\": \"is_composite_price = \"true\"\" 
    }
    ```
    The value field supports handlebar expressions from which you can pick any field from the entity state.

    """
    
    label: str
    r"""Label to be shown on the top of the value."""
    value: str
    r"""A static value or an handlebar expression."""
    feature_flag: Optional[str] = None
    r"""Binds summary field visibility to the feature flag state."""
    render_condition: Optional[str] = None
    r"""Defines the conditional rendering expression for showing this field.
    When a valid expression is parsed, their evaluation defines the visibility of this attribute.
    Note: Empty or invalid expression have no effect on the field visibility.

    """
    settings_flag: Optional[List[SettingFlag]] = None
    r"""This summary attribute should only be visible when all the settings have the correct value"""
    show_as_tag: Optional[bool] = None
    r"""Displays the value within a tag chip."""
    tag_color: Optional[str] = None
    r"""CSS hex color or CSS color name for the tag chip."""
    
