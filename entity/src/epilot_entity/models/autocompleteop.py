"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from epilot_entity.types import BaseModel
from epilot_entity.utils import FieldMetadata, QueryParamMetadata
from typing import Any, Dict, List, Optional, TypedDict, Union
from typing_extensions import Annotated, NotRequired


class AutocompleteRequestTypedDict(TypedDict):
    attribute: str
    r"""Autocomplete attribute"""
    input: NotRequired[str]
    r"""Input to autocomplete"""
    size: NotRequired[int]
    r"""Maximum number of results to return"""
    slug: NotRequired[str]
    r"""Limit results to entity schema"""
    

class AutocompleteRequest(BaseModel):
    attribute: Annotated[str, FieldMetadata(query=QueryParamMetadata(style="form", explode=True))]
    r"""Autocomplete attribute"""
    input: Annotated[Optional[str], FieldMetadata(query=QueryParamMetadata(style="form", explode=True))] = None
    r"""Input to autocomplete"""
    size: Annotated[Optional[int], FieldMetadata(query=QueryParamMetadata(style="form", explode=True))] = 10
    r"""Maximum number of results to return"""
    slug: Annotated[Optional[str], FieldMetadata(query=QueryParamMetadata(style="form", explode=True))] = None
    r"""Limit results to entity schema"""
    

ResultsTypedDict = Union[str, bool, Dict[str, Any]]


Results = Union[str, bool, Dict[str, Any]]


class AutocompleteResponseBodyTypedDict(TypedDict):
    r"""Success"""
    
    hits: NotRequired[float]
    results: NotRequired[List[ResultsTypedDict]]
    

class AutocompleteResponseBody(BaseModel):
    r"""Success"""
    
    hits: Optional[float] = None
    results: Optional[List[Results]] = None
    
