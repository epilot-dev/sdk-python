"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .entityitem import EntityItem, EntityItemTypedDict
from epilot_entity.types import BaseModel
from epilot_entity.utils import FieldMetadata, PathParamMetadata, QueryParamMetadata
from typing import List, Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class GetEntityRequestTypedDict(TypedDict):
    id: str
    r"""Entity id"""
    slug: str
    r"""Entity Type"""
    hydrate: NotRequired[bool]
    r"""When true, enables entity hydration to resolve nested $relation & $relation_ref references in-place."""
    

class GetEntityRequest(BaseModel):
    id: Annotated[str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))]
    r"""Entity id"""
    slug: Annotated[str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))]
    r"""Entity Type"""
    hydrate: Annotated[Optional[bool], FieldMetadata(query=QueryParamMetadata(style="form", explode=True))] = False
    r"""When true, enables entity hydration to resolve nested $relation & $relation_ref references in-place."""
    

class GetEntityResponseBodyTypedDict(TypedDict):
    r"""Success"""
    
    entity: NotRequired[EntityItemTypedDict]
    relations: NotRequired[List[EntityItemTypedDict]]
    

class GetEntityResponseBody(BaseModel):
    r"""Success"""
    
    entity: Optional[EntityItem] = None
    relations: Optional[List[EntityItem]] = None
    
