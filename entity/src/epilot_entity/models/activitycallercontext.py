"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from epilot_entity.types import BaseModel
import pydantic
from pydantic import ConfigDict
from typing import Any, Dict, Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class TokenTypedDict(TypedDict):
    cognito_username: NotRequired[str]
    custom_ivy_user_id: NotRequired[str]
    email: NotRequired[str]
    sub: NotRequired[str]
    

class Token(BaseModel):
    cognito_username: Annotated[Optional[str], pydantic.Field(alias="cognito:username")] = None
    custom_ivy_user_id: Annotated[Optional[str], pydantic.Field(alias="custom:ivy_user_id")] = None
    email: Optional[str] = None
    sub: Optional[str] = None
    

class EpilotAuthTypedDict(TypedDict):
    token: NotRequired[TokenTypedDict]
    

class EpilotAuth(BaseModel):
    token: Optional[Token] = None
    

class ActivityCallerContextTypedDict(TypedDict):
    epilot_auth: NotRequired[EpilotAuthTypedDict]
    

class ActivityCallerContext(BaseModel):
    model_config = ConfigDict(populate_by_name=True, arbitrary_types_allowed=True, extra="allow")
    __pydantic_extra__:  Dict[str, Any] = pydantic.Field(init=False)
    
    epilot_auth: Annotated[Optional[EpilotAuth], pydantic.Field(alias="EpilotAuth")] = None
    
    @property
    def additional_properties(self):
        return self.__pydantic_extra__

    @additional_properties.setter
    def additional_properties(self, value):
        self.__pydantic_extra__ = value # pyright: ignore[reportIncompatibleVariableOverride]
    
