"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .classificationsupdate import ClassificationsUpdate, ClassificationsUpdateTypedDict
from .taxonomyclassification import TaxonomyClassification, TaxonomyClassificationTypedDict
from epilot_entity.types import BaseModel
from epilot_entity.utils import FieldMetadata, PathParamMetadata, RequestMetadata
import pydantic
from typing import List, Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class UpdateClassificationsForTaxonomyRequestTypedDict(TypedDict):
    taxonomy_slug: str
    r"""Taxonomy slug"""
    classifications_update: NotRequired[ClassificationsUpdateTypedDict]
    

class UpdateClassificationsForTaxonomyRequest(BaseModel):
    taxonomy_slug: Annotated[str, pydantic.Field(alias="taxonomySlug"), FieldMetadata(path=PathParamMetadata(style="simple", explode=False))]
    r"""Taxonomy slug"""
    classifications_update: Annotated[Optional[ClassificationsUpdate], FieldMetadata(request=RequestMetadata(media_type="application/json"))] = None
    

class DeletedTypedDict(TypedDict):
    pass
    

class Deleted(BaseModel):
    pass
    

class UpdateClassificationsForTaxonomyResponseBodyTypedDict(TypedDict):
    r"""Taxonomies classifications"""
    
    created: NotRequired[List[TaxonomyClassificationTypedDict]]
    deleted: NotRequired[DeletedTypedDict]
    updated: NotRequired[List[TaxonomyClassificationTypedDict]]
    

class UpdateClassificationsForTaxonomyResponseBody(BaseModel):
    r"""Taxonomies classifications"""
    
    created: Optional[List[TaxonomyClassification]] = None
    deleted: Optional[Deleted] = None
    updated: Optional[List[TaxonomyClassification]] = None
    
