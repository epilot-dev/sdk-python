"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from epilot_entity.types import BaseModel
from typing import Any, Dict, Optional, TypedDict
from typing_extensions import NotRequired


class SearchMappingsType(str, Enum):
    KEYWORD = "keyword"
    TEXT = "text"
    BOOLEAN = "boolean"
    INTEGER = "integer"
    LONG = "long"
    FLOAT = "float"
    DATE = "date"
    FLATTENED = "flattened"
    NESTED = "nested"

class SearchMappingsTypedDict(TypedDict):
    fields: NotRequired[Dict[str, Any]]
    index: NotRequired[bool]
    type: NotRequired[SearchMappingsType]
    

class SearchMappings(BaseModel):
    fields: Optional[Dict[str, Any]] = None
    index: Optional[bool] = True
    type: Optional[SearchMappingsType] = None
    
