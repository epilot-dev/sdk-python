"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .activitycallercontext import ActivityCallerContext, ActivityCallerContextTypedDict
from datetime import datetime
from epilot_entity.types import BaseModel
import pydantic
from typing import Any, Dict, Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class BaseActivityItemTypedDict(TypedDict):
    message: str
    r"""Message for activity. Supports handlebars syntax."""
    title: str
    r"""Title for activity. Supports handlebars syntax."""
    type: str
    id: NotRequired[str]
    r"""See https://github.com/ulid/spec"""
    caller: NotRequired[ActivityCallerContextTypedDict]
    payload: NotRequired[Dict[str, Any]]
    timestamp: NotRequired[datetime]
    

class BaseActivityItem(BaseModel):
    message: str
    r"""Message for activity. Supports handlebars syntax."""
    title: str
    r"""Title for activity. Supports handlebars syntax."""
    type: str
    id: Annotated[Optional[str], pydantic.Field(alias="_id")] = None
    r"""See https://github.com/ulid/spec"""
    caller: Optional[ActivityCallerContext] = None
    payload: Optional[Dict[str, Any]] = None
    timestamp: Optional[datetime] = None
    
