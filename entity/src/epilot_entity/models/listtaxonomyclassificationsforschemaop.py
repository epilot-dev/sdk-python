"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .taxonomyclassification import TaxonomyClassification, TaxonomyClassificationTypedDict
from epilot_entity.types import BaseModel
from epilot_entity.utils import FieldMetadata, PathParamMetadata, QueryParamMetadata
import pydantic
from typing import List, Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class ListTaxonomyClassificationsForSchemaRequestTypedDict(TypedDict):
    slug: str
    r"""Entity Type"""
    taxonomy_slug: str
    r"""Taxonomy slug"""
    query: NotRequired[str]
    size: NotRequired[float]
    

class ListTaxonomyClassificationsForSchemaRequest(BaseModel):
    slug: Annotated[str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))]
    r"""Entity Type"""
    taxonomy_slug: Annotated[str, pydantic.Field(alias="taxonomySlug"), FieldMetadata(path=PathParamMetadata(style="simple", explode=False))]
    r"""Taxonomy slug"""
    query: Annotated[Optional[str], FieldMetadata(query=QueryParamMetadata(style="form", explode=True))] = None
    size: Annotated[Optional[float], FieldMetadata(query=QueryParamMetadata(style="form", explode=True))] = None
    

class ListTaxonomyClassificationsForSchemaResponseBodyTypedDict(TypedDict):
    r"""List of taxonomy classifications"""
    
    results: NotRequired[List[TaxonomyClassificationTypedDict]]
    

class ListTaxonomyClassificationsForSchemaResponseBody(BaseModel):
    r"""List of taxonomy classifications"""
    
    results: Optional[List[TaxonomyClassification]] = None
    
