openapi: 3.0.3
info:
  title: Journey API
  description: >-
    API to configure journeys


    Flexible data layer for epilot Entities.


    Use this API configure and access your business objects like Contacts,
    Opportunities and Products.


    [Feature
    Documentation](https://docs.epilot.io/docs/entities/flexible-entities)


    API Backend for epilot Automation Workflows feature
  version: 1.0.0
servers:
  - url: 'https://journey-config.sls.epilot.io'
security:
  - EpilotAuth: []
tags:
  - name: Schemas
    description: Model Entities
  - name: Entities
    description: CRUD Access for Entities
  - name: Relations
    description: Entity Relationships
  - name: Activity
    description: Entity Events
  - name: Export
    description: Export and Import entities via files
  - name: Saved Views
    description: Saved Views for Entities
  - name: Taxonomy
    description: Entity classification with Taxonomies
  - name: flows
    description: Automation flows
  - name: executions
    description: Automation executions
paths:
  '/v1/journey/organization/{id}':
    get:
      operationId: getJourneysByOrgId
      summary: getJourneysByOrgId
      description: Get all journeys by organization id
      tags:
        - Journeys
      parameters:
        - name: id
          in: path
          description: Organization ID
          required: true
          schema:
            type: string
            example: '123'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJourneysResponse'
  '/v1/journey/configuration/{id}':
    get:
      operationId: getJourney
      summary: getJourney
      description: Get journey by id
      security: []
      tags:
        - Journeys
      parameters:
        - name: id
          in: path
          description: Journey ID
          required: true
          schema:
            type: string
            format: uuid
            example: 509cdffe-424f-457a-95c2-9708c304ce77
        - name: source
          in: query
          description: What source ID. Journey or Entity ID
          required: false
          schema:
            type: string
        - name: orgId
          in: query
          description: Organization ID
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JourneyResponse'
    delete:
      operationId: removeJourney
      summary: removeJourney
      description: Remove journey by id
      tags:
        - Journeys
      parameters:
        - name: id
          in: path
          description: Journey ID
          required: true
          schema:
            type: string
            format: uuid
            example: 509cdffe-424f-457a-95c2-9708c304ce77
      responses:
        '200':
          description: Success
          content: {}
  /v1/journey/configuration:
    post:
      operationId: createJourney
      summary: createJourney
      description: Create a Journey
      tags:
        - Journeys
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JourneyCreationRequest'
        description: Payload
      parameters: []
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JourneyResponse'
    put:
      operationId: updateJourney
      summary: updateJourney
      description: Update a Journey
      tags:
        - Journeys
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JourneyCreationRequest'
        description: Payload
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JourneyResponse'
    patch:
      operationId: patchUpdateJourney
      summary: patchUpdateJourney
      description: >-
        Update a Journey (partially / patch). Support for nested properties
        updates (e.g. "property[0].name").
      tags:
        - Journeys
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchUpdateJourneyRequest'
            example:
              journeyId: 509cdffe-424f-457a-95c2-9708c304ce77
              name: New Journey Name
              'steps[0].uischema.elements[0].products':
                - '123456'
                - '654321'
        description: Payload
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JourneyResponse'
  /v1/journey/configuration/search:
    post:
      operationId: searchJourneys
      summary: searchJourneys
      description: Search Journeys
      tags:
        - Journeys
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchJourneysQueryRequest'
        description: Payload
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchJourneysResponse'
  /v1/entity/schemas:
    get:
      operationId: listSchemas
      summary: listSchemas
      description: Get the latest version of local schema
      parameters:
        - in: query
          name: unpublished
          description: Includes the unpublished version of unpublished schema
          schema:
            type: boolean
            default: false
      tags:
        - Schemas
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/EntitySchemaItem'
  /v1/entity/schemas/blueprints:
    get:
      operationId: listSchemaBlueprints
      summary: listSchemaBlueprints
      description: List canonical versions of all available schemas
      tags:
        - Schemas
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/EntitySchemaItem'
  '/v1/entity/schemas/{slug}/versions':
    get:
      operationId: getSchemaVersions
      summary: getSchemaVersions
      description: >-
        Get all versions of this schema ordered by the latest versions including
        drafts.
      tags:
        - Schemas
      parameters:
        - in: path
          name: slug
          required: true
          schema:
            $ref: '#/components/schemas/EntitySlug'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  versions:
                    type: array
                    items:
                      $ref: '#/components/schemas/EntitySchemaItem'
                  drafts:
                    type: array
                    items:
                      $ref: '#/components/schemas/EntitySchemaItem'
  '/v1/entity/schemas/{slug}':
    get:
      operationId: getSchema
      summary: getSchema
      description: >-
        By default gets the latest version of the Schema and to get the specific
        version of schema pass the id.
      tags:
        - Schemas
      parameters:
        - in: path
          name: slug
          required: true
          schema:
            $ref: '#/components/schemas/EntitySlug'
        - in: query
          name: id
          schema:
            $ref: '#/components/schemas/SchemaId'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitySchemaItem'
    put:
      operationId: createNewSchemaVersion
      summary: createNewSchemaVersion
      description: Create new version of the schema and default draft is false.
      tags:
        - Schemas
      parameters:
        - in: path
          name: slug
          required: true
          schema:
            $ref: '#/components/schemas/EntitySlug'
        - in: query
          name: draft
          schema:
            default: false
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntitySchema'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitySchemaItem'
    delete:
      operationId: deleteSchemaById
      summary: deleteSchemaById
      description: Delete schema by Id
      tags:
        - Schemas
      parameters:
        - in: path
          name: slug
          required: true
          schema:
            $ref: '#/components/schemas/EntitySlug'
        - in: query
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/SchemaId'
      responses:
        '204':
          description: Success
  '/v1/entity/schemas/{slug}/taxonomy/{taxonomySlug}':
    get:
      operationId: listTaxonomyClassificationsForSchema
      summary: listTaxonomyClassificationsForSchema
      description: List taxonomy classifications for a given schema
      tags:
        - Schemas
      parameters:
        - in: path
          name: slug
          required: true
          schema:
            $ref: '#/components/schemas/EntitySlug'
        - in: path
          name: taxonomySlug
          required: true
          schema:
            $ref: '#/components/schemas/TaxonomySlug'
        - in: query
          name: query
          schema:
            type: string
        - in: query
          name: size
          schema:
            type: number
      responses:
        '200':
          description: List of taxonomy classifications
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/TaxonomyClassification'
  '/v1/entity:search':
    post:
      operationId: searchEntities
      summary: searchEntities
      description: >
        Search for entities. Supports ordering and pagination. Lucene query
        syntax supported for complex querying.


        Passing comma-separated `x-epilot-org-id` is supported for cross-org
        entity search.


        ## Relations


        When `hydrate=true`, relation attributes are replaced in-place with
        nested entity values.


        Example:

        ```json

        {
          "_id": "123",
          "name": "parent",
          "_tags": ["parent"],
          "contacts": {
            "$relation": [
              { "entity_id": "456", "_tags": ["primary"] },
              { "entity_id": "789", "_tags": ["secondary"] },
            ]
          },
          "addresses": {
            "$relation_ref": [
              { "entity_id": "123", "_tags": ["primary"], "path": "address.0" },
              { "entity_id": "234", "_tags": ["secondary"], "path": "address.0" },
            ]
          }
        }

        ```


        Becomes:

        ```json

        {
          "_id": "123",
          "name": "parent",
          "_tags": ["parent"],
          "contacts": [
            {
              "$relation": { "entity_id": "456", "_tags": ["primary"] },
              "_id": "456",
              "name": "child 1",
              "_tags": ["child"]
            },
            {
              "$relation": { "entity_id": "789", "_tags": ["secondary"] },
              "_id": "789",
              "name": "child 2",
              "_tags": ["child"]
            }
          ],
          "addresses": [
            {
              "$relation_ref": { "entity_id": "123", "_tags": ["primary"], "path": "address.0" },
              "_id": "123",
              "address": "address 1",
              "_tags": ["child"]
            },
            {
              "$relation_ref": { "entity_id": "234", "_tags": ["secondary"], "path": "address.0" },
              "_id": "234",
              "address": "address 2",
              "_tags": ["child"]
            }
          ]
        }

        ```
      tags:
        - Entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntitySearchParams'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitySearchResults'
            text/csv:
              schema:
                type: string
  '/v1/entity/{slug}':
    post:
      operationId: createEntity
      summary: createEntity
      description: >
        Creates a new entity using a key.


        ## Activity


        If no `activity_id` query parameter is provided, implicitly creates
        Activity of type `EntityCreated`


        ## Relations


        To create a relation, store a property object that defines a `$relation`
        array.


        Example:


        ```json

        {
          "contacts": {
            "$relation": [
              { "entity_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6" }
            ]
          }
        }

        ```


        The items in `$relation` support two properties:

        - `entity_id` - The ID of the entity to link

        - `_tags` - Tags or labels for the relation (optional)
      tags:
        - Entities
      parameters:
        - in: path
          name: slug
          description: Entity Schema
          required: true
          schema:
            $ref: '#/components/schemas/EntitySlug'
        - in: query
          name: activity_id
          description: Activity to include in event feed
          required: false
          schema:
            $ref: '#/components/schemas/ActivityId'
        - in: query
          name: async
          description: >-
            Don't wait for updated entity to become available in Search API.
            Useful for large migrations
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Entity'
            examples:
              contact:
                $ref: '#/components/examples/ContactEntity'
              account:
                $ref: '#/components/examples/AccountEntity'
              product:
                $ref: '#/components/examples/ProductEntity'
              price:
                $ref: '#/components/examples/PriceEntity'
              tax:
                $ref: '#/components/examples/TaxEntity'
              order:
                $ref: '#/components/examples/OrderEntity'
              opportunity:
                $ref: '#/components/examples/OpportunityEntity'
              email template:
                $ref: '#/components/examples/EmailTemplateEntity'
              file:
                $ref: '#/components/examples/FileEntity'
              workflow step:
                $ref: '#/components/examples/WorkflowStepEntity'
              submission:
                $ref: '#/components/examples/SubmissionEntity'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityItem'
  '/v1/entity/{slug}:upsert':
    patch:
      operationId: upsertEntity
      summary: upsertEntity
      description: >
        Create or update an entity using `unique_key`


        - If no entities are matched, a new entity is created.

        - If exactly one entity is matched, a `PATCH`-style update is applied to
        the existing entity.

        - If more than one entity is matched a `409` Error is returned


        ## Activity


        If no `activity_id` query parameter is provided, implicitly creates
        Activity of type `EntityCreated` or `EntityUpdated`
      tags:
        - Entities
      parameters:
        - in: path
          name: slug
          description: Entity Schema
          required: true
          schema:
            $ref: '#/components/schemas/EntitySlug'
        - in: query
          name: activity_id
          description: Activity to include in event feed
          required: false
          schema:
            $ref: '#/components/schemas/ActivityId'
        - in: query
          name: dry_run
          description: Dry Run mode = return matched entities but don't update them.
          required: false
          schema:
            type: boolean
            default: false
        - in: query
          name: async
          description: >-
            Don't wait for updated entity to become available in Search API.
            Useful for large migrations
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                unique_key:
                  type: array
                  items:
                    type: string
                    example: email.0.email
                  example:
                    - _id
                entity:
                  $ref: '#/components/schemas/Entity'
              required:
                - unique_key
                - entity
      responses:
        '200':
          description: Entity was updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityItem'
        '201':
          description: Entity was created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityItem'
        '409':
          description: 'Conflict: multiple entities were matched with `unique_key`'
  '/v1/entity/{slug}/{id}':
    get:
      operationId: getEntity
      summary: getEntity
      description: >
        Gets Entity and relations by id.


        ## Relations


        When `hydrate=true`, relation attributes are replaced in-place with
        nested entity values.


        Example:

        ```json

        {
          "_id": "123",
          "name": "parent",
          "_tags": ["parent"],
          "contacts": {
            "$relation": [
              { "entity_id": "456", "_tags": ["primary"] },
              { "entity_id": "789", "_tags": ["secondary"] },
            ]
          },
          "addresses": {
            "$relation_ref": [
              { "entity_id": "123", "_tags": ["primary"], "path": "address.0" },
              { "entity_id": "234", "_tags": ["secondary"], "path": "address.0" },
            ]
          }
        }

        ```


        Becomes:

        ```json

        {
          "_id": "123",
          "name": "parent",
          "_tags": ["parent"],
          "contacts": [
            {
              "$relation": { "entity_id": "456", "_tags": ["primary"] },
              "_id": "456",
              "name": "child 1",
              "_tags": ["child"]
            },
            {
              "$relation": { "entity_id": "789", "_tags": ["secondary"] },
              "_id": "789",
              "name": "child 2",
              "_tags": ["child"]
            }
          ],
          "addresses": [
            {
              "$relation_ref": { "entity_id": "123", "_tags": ["primary"], "path": "address.0" },
              "_id": "123",
              "address": "address 1",
              "_tags": ["child"]
            },
            {
              "$relation_ref": { "entity_id": "234", "_tags": ["secondary"], "path": "address.0" },
              "_id": "234",
              "address": "address 2",
              "_tags": ["child"]
            }
          ]
        }

        ```
      tags:
        - Entities
      parameters:
        - in: path
          name: slug
          description: Entity Type
          required: true
          schema:
            $ref: '#/components/schemas/EntitySlug'
        - in: path
          name: id
          description: Entity id
          required: true
          schema:
            $ref: '#/components/schemas/EntityId'
        - in: query
          name: hydrate
          description: >-
            When true, enables entity hydration to resolve nested $relation &
            $relation_ref references in-place.
          schema:
            default: false
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  entity:
                    $ref: '#/components/schemas/EntityItem'
                  relations:
                    type: array
                    items:
                      $ref: '#/components/schemas/EntityItem'
    put:
      operationId: updateEntity
      summary: updateEntity
      description: >
        Updates an Entity


        ## Activity


        If no `activity_id` query parameter is provided, implicitly creates
        Activity of type `EntityUpdated`


        ## Relations


        To create a relation, store a property that defines a `$relation` array.


        Example:


        ```json

        {
          "contacts": {
            "$relation": [
              { "entity_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6" }
            ]
          }
        }

        ```


        The items in `$relation` support two properties:

        - `entity_id` - The ID of the entity to link

        - `_tags` - Tags or labels for the relation (optional)
      tags:
        - Entities
      parameters:
        - in: path
          name: slug
          description: Entity Type
          required: true
          schema:
            $ref: '#/components/schemas/EntitySlug'
        - in: path
          name: id
          description: Entity id
          required: true
          schema:
            $ref: '#/components/schemas/EntityId'
        - in: query
          name: activity_id
          description: Activity to include in event feed
          required: false
          schema:
            $ref: '#/components/schemas/ActivityId'
        - in: query
          name: async
          description: >-
            Don't wait for updated entity to become available in Search API.
            Useful for large migrations
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Entity'
            example: {}
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityItem'
    delete:
      operationId: deleteEntity
      summary: deleteEntity
      description: >
        Deletes an Entity


        ## Activity


        If no `activity_id` query parameter is provided, implicitly creates
        Activity of type `EntityDeleted`
      tags:
        - Entities
      parameters:
        - in: path
          name: slug
          description: Entity Type
          required: true
          schema:
            $ref: '#/components/schemas/EntitySlug'
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/EntityId'
        - in: query
          name: activity_id
          description: Activity to include in event feed
          required: false
          schema:
            $ref: '#/components/schemas/ActivityId'
      responses:
        '200':
          description: Success
  '/v1/entity:autocomplete':
    get:
      operationId: autocomplete
      summary: autocomplete
      description: |
        Autocomplete entity attributes
      tags:
        - Entities
      parameters:
        - name: input
          in: query
          description: Input to autocomplete
          schema:
            type: string
        - name: attribute
          in: query
          description: Autocomplete attribute
          schema:
            type: string
            example: _tags
          required: true
        - name: slug
          in: query
          description: Limit results to entity schema
          schema:
            $ref: '#/components/schemas/EntitySlug'
        - name: size
          in: query
          description: Maximum number of results to return
          schema:
            type: integer
            default: 10
            minimum: 1
            maximum: 250
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  hits:
                    type: number
                    example: 1
                  results:
                    type: array
                    items:
                      anyOf:
                        - type: string
                        - type: boolean
                        - type: object
                          additionalProperties: true
                    example:
                      - value
  /v1/entity/activity:
    post:
      operationId: createActivity
      summary: createActivity
      description: |
        Create an activity that can be displayed in activity feeds.

        - All activites are published as events on the event bus
        - Entity mutations are always part of an activity
      tags:
        - Activity
      parameters:
        - in: query
          name: entities
          description: >-
            Comma-separated list of entities which the activity primarily
            concerns
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/EntityId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityItem'
  '/v1/entity/activity/{id}':
    get:
      operationId: getActivity
      summary: getActivity
      description: Get activity by id
      tags:
        - Activity
      parameters:
        - in: path
          name: id
          description: Activity Id
          required: true
          schema:
            $ref: '#/components/schemas/ActivityId'
        - in: query
          name: operations_size
          description: |
            Maximum number of operations to include in response (default: 10)
          schema:
            type: integer
            minimum: 0
            maximum: 1000
            default: 25
        - in: query
          name: operations_from
          description: |
            Pagination offset for operations
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityItem'
  '/v1/entity/activity/{id}:attach':
    post:
      operationId: attachActivity
      summary: attachActivity
      description: Attach existing activity to entity activity feeds
      tags:
        - Activity
      parameters:
        - in: path
          name: id
          description: Activity Id
          required: true
          schema:
            $ref: '#/components/schemas/ActivityId'
        - in: query
          name: entities
          description: >-
            Comma-separated list of entities which the activity primarily
            concerns
          style: form
          explode: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/EntityId'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityItem'
  '/v1/entity/{slug}/{id}/activity':
    get:
      operationId: getEntityActivityFeed
      summary: getEntityActivityFeed
      description: |
        Get activity feed for an entity
      tags:
        - Activity
      parameters:
        - in: path
          name: slug
          description: Entity Type
          required: true
          schema:
            $ref: '#/components/schemas/EntitySlug'
        - in: path
          name: id
          description: Entity id
          required: true
          schema:
            $ref: '#/components/schemas/EntityId'
        - in: query
          name: after
          description: Get activities after this timestamp
          schema:
            type: string
            format: date-time
        - in: query
          name: before
          description: get activities before this timestamp
          schema:
            type: string
            format: date-time
        - in: query
          name: from
          description: start from page
          schema:
            type: integer
            minimum: 0
            default: 0
        - in: query
          name: size
          description: max number of results to return
          schema:
            type: integer
            minimum: 1
            default: 25
        - in: query
          name: type
          description: Activity type
          schema:
            type: string
            example: SyncActivity
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    example: 1
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/ActivityItem'
  '/v1/entity/{slug}/{id}/relations':
    get:
      operationId: getRelations
      summary: getRelations
      description: >
        Returns 1st level direct relations for an entity.


        You can control whether to return the full entity or just the relation
        item with the `?hydrate` query param.


        Reverse relations i.e. entities referring to this entity are included
        with the `?include_reverse` query param.
      tags:
        - Relations
      parameters:
        - in: path
          name: slug
          description: Entity Type
          required: true
          schema:
            $ref: '#/components/schemas/EntitySlug'
        - in: path
          name: id
          description: Entity id
          required: true
          schema:
            $ref: '#/components/schemas/EntityId'
        - in: query
          name: hydrate
          description: 'When true, expand relation items with full blown entities.'
          schema:
            default: false
            type: boolean
        - in: query
          name: include_reverse
          description: >-
            When true, includes reverse relations in response (other entities
            pointing to this entity)
          schema:
            default: false
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRelationsResp'
              example:
                - attribute: contacts
                  entity_id: ed27830b-984c-4bca-9b87-2849bb5789ca
                  _tags:
                    - primary
                    - billing
                - attribute: contacts
                  entity_id: fadfc950-6e43-4e38-bae0-ffcf4b8b90e1
                - _id: 9924c4de-d3ed-4752-821d-fc0b9bd57c1b
                  order_number: a34234jd
                  customer_email: johndoe@epilot.cloud
                  billing_first_name: john
                  billing_last_name: doe
                  billing_company_name: ePilot Gmbh
                  billing_vat: '234823948,'
                  billing_email: johndoe@nowhere.com
                  billing_phone: '1234234545,'
                  billing_address: 'wallstreet, 1'
                  billing_contact: villy or zilly
                  $relation:
                    attribute: orders
                    entity_id: 9924c4de-d3ed-4752-821d-fc0b9bd57c1b
                    _tags:
                      - solar_panel
                      - one_time
    post:
      operationId: addRelations
      summary: addRelations
      description: >-
        Relates one or more entities to parent entity by adding items to a
        relation attribute
      tags:
        - Relations
      parameters:
        - in: path
          name: slug
          description: Entity Type
          required: true
          schema:
            $ref: '#/components/schemas/EntitySlug'
        - in: path
          name: id
          description: Entity id
          required: true
          schema:
            $ref: '#/components/schemas/EntityId'
        - in: query
          name: async
          description: >-
            Don't wait for updated entity to become available in Search API.
            Useful for large migrations
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/RelationItem'
            example:
              - attribute: contacts
                entity_id: e8878f62-2d3d-4c86-bfe7-01a4180ff048
                _tags:
                  - billing
              - attribute: contacts
                entity_id: ee8a2af9-fb36-4981-b848-4e65275851af
              - attribute: opportunities
                entity_id: 30990430-a53d-41a2-83db-2de072dc4dd4
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelationItem'
  '/v1/entity/{slug}/{id}/relations/{attribute}/{entity_id}':
    put:
      operationId: updateRelation
      summary: updateRelation
      description: Updates an existing relation between two entities.
      tags:
        - Relations
      parameters:
        - in: path
          name: slug
          description: Entity Type
          required: true
          schema:
            $ref: '#/components/schemas/EntitySlug'
        - in: path
          name: id
          description: Entity id
          required: true
          schema:
            $ref: '#/components/schemas/EntityId'
        - in: path
          name: attribute
          description: The attribute that express meaning
          required: true
          schema:
            type: string
        - in: path
          name: entity_id
          description: The attribute that express meaning
          required: true
          schema:
            type: string
        - in: query
          name: async
          description: >-
            Don't wait for updated entity to become available in Search API.
            Useful for large migrations
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                _tags:
                  type: array
                  items:
                    type: string
            example:
              _tags:
                - billing
                - prepaid
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelationItem'
    delete:
      operationId: deleteRelation
      summary: deleteRelation
      description: Removes relation between two entities
      tags:
        - Relations
      parameters:
        - in: path
          name: slug
          description: Entity Type
          required: true
          schema:
            $ref: '#/components/schemas/EntitySlug'
        - in: path
          name: id
          description: Entity id
          required: true
          schema:
            $ref: '#/components/schemas/EntityId'
        - in: path
          name: attribute
          description: The attribute that express meaning
          required: true
          schema:
            type: string
        - in: path
          name: entity_id
          description: The attribute that express meaning
          required: true
          schema:
            type: string
        - in: query
          name: async
          description: >-
            Don't wait for updated entity to become available in Search API.
            Useful for large migrations
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '204':
          description: Relation deleted with success.
  '/v1/entity:export':
    post:
      operationId: exportEntities
      summary: exportEntities
      description: create export file of entities
      tags:
        - Export
      parameters:
        - in: query
          name: job_id
          description: Export Job Id to get the result
          schema:
            $ref: '#/components/schemas/ExportJobId'
        - in: query
          name: is_template
          description: Pass 'true' to generate import template
          schema:
            $ref: '#/components/schemas/IsTemplate'
        - in: query
          name: language
          description: Export headers translation language
          schema:
            $ref: '#/components/schemas/Language'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntitySearchParams'
      responses:
        '201':
          description: created export url and download url
  '/v1/entity:import':
    post:
      operationId: importEntities
      summary: importEntities
      description: import entity data from
      tags:
        - Export
      parameters:
        - in: query
          name: job_id
          description: Import Job Id to get the result
          schema:
            $ref: '#/components/schemas/ExportJobId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityImportParams'
      responses:
        '201':
          description: created import url and download url
  /v1/entity/views:
    get:
      operationId: listSavedViews
      summary: listSavedViews
      description: Get the Saved Views based on the schema
      tags:
        - Saved Views
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/SavedViewItem'
  /v1/entity/view:
    post:
      operationId: createSavedView
      summary: createSavedView
      description: Creates a new saved view
      tags:
        - Saved Views
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SavedView'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedViewItem'
  '/v1/entity/view/{id}':
    get:
      operationId: getSavedView
      summary: getSavedView
      description: Gets Saved View configuration by id.
      tags:
        - Saved Views
      parameters:
        - in: path
          name: id
          description: View id
          required: true
          schema:
            $ref: '#/components/schemas/SavedViewId'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  view:
                    $ref: '#/components/schemas/SavedViewItem'
    put:
      operationId: updateSavedView
      summary: updateSavedView
      description: Updates a saved view
      tags:
        - Saved Views
      parameters:
        - in: path
          name: id
          description: View id
          required: true
          schema:
            $ref: '#/components/schemas/SavedViewId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SavedView'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedViewItem'
    delete:
      operationId: deleteSavedView
      summary: deleteSavedView
      description: Deletes a saved view
      parameters:
        - in: path
          name: id
          description: View id
          required: true
          schema:
            $ref: '#/components/schemas/SavedViewId'
      tags:
        - Saved Views
      responses:
        '200':
          description: List of all available saved views
  /v1/entity/listTaxonomies:
    get:
      operationId: listTaxonomies
      summary: listTaxonomies
      description: List taxonomies in an organisation
      tags:
        - Taxonomy
      responses:
        '200':
          description: Returns list of taxonomies in an organisation
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Taxonomy'
  '/v1/entity/taxonomies/{taxonomySlug}':
    get:
      operationId: getTaxonomy
      summary: getTaxonomy
      description: Get taxonomy by slug
      tags:
        - Taxonomy
      parameters:
        - in: path
          name: taxonomySlug
          description: Taxonomy slug to return taxonomy for
          schema:
            $ref: '#/components/schemas/TaxonomySlug'
          required: true
      responses:
        '200':
          description: Taxonomy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Taxonomy'
  '/v1/entity/taxonomies/{taxonomySlug}:autocomplete':
    get:
      operationId: taxonomyAutocomplete
      summary: taxonomyAutocomplete
      description: Taxonomies autocomplete
      tags:
        - Taxonomy
      parameters:
        - in: path
          name: taxonomySlug
          description: Limit results to slug
          schema:
            type: string
          required: true
        - in: query
          name: query
          description: Input to autocomplete
          schema:
            type: string
        - in: query
          name: size
          description: Minimum number of results to return
          schema:
            type: number
      responses:
        '200':
          description: Taxonomy classifications
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/TaxonomyClassification'
  '/v1/entity/taxonomies/classifications:search':
    post:
      operationId: taxonomiesClassificationsSearch
      summary: taxonomiesClassificationsSearch
      description: List taxonomy classifications in an organisation based on taxonomy slug
      tags:
        - Taxonomy
      parameters:
        - in: query
          name: taxonomySlug
          description: Taxonomy slug
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                classificationIds:
                  type: array
                  items:
                    $ref: '#/components/schemas/ClassificationId'
      responses:
        '200':
          description: Returns list of taxonomy classifications
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    items:
                      $ref: '#/components/schemas/TaxonomyClassification'
  '/v1/entity/taxonomies/{taxonomySlug}/classifications':
    post:
      operationId: updateClassificationsForTaxonomy
      summary: updateClassificationsForTaxonomy
      description: Update taxonomies in an organisation based in taxonomy slug
      tags:
        - Taxonomy
      parameters:
        - in: path
          name: taxonomySlug
          description: Taxonomy slug
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClassificationsUpdate'
      responses:
        '200':
          description: Taxonomies classifications
          content:
            application/json:
              schema:
                type: object
                properties:
                  created:
                    type: array
                    items:
                      $ref: '#/components/schemas/TaxonomyClassification'
                  updated:
                    type: array
                    items:
                      $ref: '#/components/schemas/TaxonomyClassification'
                  deleted:
                    type: object
                    items:
                      $ref: '#/components/schemas/ClassificationId'
  /v1/automation/flows:
    get:
      operationId: searchFlows
      summary: searchFlows
      description: Search available automation flows
      tags:
        - flows
      parameters:
        - name: schema
          in: query
          description: Entity Schema
          schema:
            type: string
            example: submission
        - name: size
          in: query
          description: 'Pagination: max number of results to return'
          schema:
            type: integer
            default: 25
        - name: from
          in: query
          description: 'Pagination: starting for results'
          schema:
            type: integer
            default: 0
        - name: trigger_source_id
          in: query
          description: Trigger source identifier
          schema:
            type: string
            example: 600945fe-212e-4b97-acf7-391d64648384
      responses:
        '200':
          description: 'List of automation flows, including total count'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchAutomationsResp'
    post:
      operationId: createFlow
      summary: createFlow
      description: Create new automation flow
      tags:
        - flows
      requestBody:
        description: Automation flow to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutomationFlow'
      responses:
        '201':
          description: The created automation flow
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationFlow'
  '/v1/automation/flows/{flow_id}':
    get:
      operationId: getFlow
      summary: getFlow
      description: List available automation flows
      tags:
        - flows
      parameters:
        - name: flow_id
          in: path
          required: true
          description: Automation Workflow ID
          schema:
            $ref: '#/components/schemas/AutomationFlowId'
      responses:
        '200':
          description: The returned automation flow
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationFlow'
    put:
      operationId: putFlow
      summary: putFlow
      description: Update automation flow by id
      tags:
        - flows
      parameters:
        - name: flow_id
          in: path
          required: true
          description: Automation Workflow ID
          schema:
            $ref: '#/components/schemas/AutomationFlowId'
      requestBody:
        description: Automation flow to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutomationFlow'
      responses:
        '200':
          description: The updated automation flow
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationFlow'
    delete:
      operationId: deleteFlow
      summary: deleteFlow
      description: Update automation flow by id
      tags:
        - flows
      parameters:
        - name: flow_id
          in: path
          required: true
          description: Automation Workflow ID
          schema:
            $ref: '#/components/schemas/AutomationFlowId'
      responses:
        '200':
          description: The deleted automation flow
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationFlow'
  /v1/automation/executions:
    get:
      operationId: getExecutions
      summary: getExecutions
      description: List automation executions
      parameters:
        - name: entity_id
          in: query
          schema:
            $ref: '#/components/schemas/EntityId1'
        - name: size
          in: query
          description: 'Pagination: max number of results to return'
          schema:
            type: integer
            default: 25
        - name: from
          in: query
          description: 'Pagination: starting for results'
          schema:
            type: integer
            default: 0
      tags:
        - executions
      responses:
        '200':
          description: List of automation executions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetExecutionsResp'
    post:
      operationId: startExecution
      summary: startExecution
      description: Start new automation execution
      requestBody:
        description: Execution parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartExecutionRequest'
      tags:
        - executions
      responses:
        '201':
          description: The created execution
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationExecution'
  '/v1/automation/executions/{execution_id}':
    get:
      operationId: getExecution
      summary: getExecution
      description: Get automation execution
      parameters:
        - name: execution_id
          in: path
          schema:
            $ref: '#/components/schemas/AutomationExecutionId'
          required: true
      tags:
        - executions
      responses:
        '200':
          description: The returned execution
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationExecution'
    delete:
      operationId: cancelExecution
      summary: cancelExecution
      description: Cancel automation execution
      parameters:
        - name: execution_id
          in: path
          schema:
            $ref: '#/components/schemas/AutomationExecutionId'
          required: true
      tags:
        - executions
      responses:
        '200':
          description: The cancelled execution
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationExecution'
  '/v1/automation/executions/{execution_id}/{action_id}/retrigger':
    post:
      operationId: retriggerAction
      summary: retriggerAction
      description: Retry a specific automation execution action which failed / is stuck.
      tags:
        - executions
      parameters:
        - name: execution_id
          in: path
          description: Execution Id
          schema:
            $ref: '#/components/schemas/AutomationExecutionId'
          required: true
        - name: action_id
          in: path
          description: Id of Action to retry.
          schema:
            $ref: '#/components/schemas/AutomationActionId'
          required: true
      requestBody:
        description: Retry request details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetryReq'
      responses:
        '200':
          description: action re-triggered with success
components:
  schemas:
    GetJourneysResponse:
      type: object
    JourneyResponse:
      type: object
    PatchUpdateJourneyRequest:
      type: object
      properties:
        journeyId:
          type: string
          format: uuid
          example: 509cdffe-424f-457a-95c2-9708c304ce77
      additionalProperties: true
      description: >
        Patch request to update a journey (journey id is required) Support for
        nested properties (e.g. steps[0].uischema.elements[0].products) is
        supported.
      required:
        - journeyId
    JourneyCreationRequest:
      type: object
      properties:
        journeyId:
          type: string
        organizationId:
          type: string
        brandId:
          type: string
        name:
          type: string
        steps:
          type: array
          items:
            type: object
            additionalProperties: false
            properties:
              showStepName:
                type: boolean
                nullable: true
              title:
                type: string
                nullable: true
              subTitle:
                type: string
                nullable: true
              showStepSubtitle:
                type: boolean
                nullable: true
              showStepper:
                type: boolean
                nullable: true
              showStepperLabels:
                type: boolean
                nullable: true
              hideNextButton:
                type: boolean
                nullable: true
              name:
                type: string
              stepId:
                type: string
              schema: {}
              uischema: {}
            required:
              - name
              - schema
              - uischema
        design:
          type: object
          properties:
            logoUrl:
              type: string
              nullable: true
            theme:
              type: object
              additionalProperties: {}
          required:
            - theme
          additionalProperties: false
        rules:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                enum:
                  - inject
                  - injectWithKey
              sourceType:
                type: string
                enum:
                  - journey
                  - step
                  - block
              source:
                type: string
              target:
                type: string
            required:
              - type
              - sourceType
              - source
              - target
            additionalProperties: false
        logics:
          type: array
          items:
            type: object
            properties:
              autoGeneratedId:
                type: string
              conditions:
                type: array
                items:
                  type: string
              actions:
                type: array
                items:
                  type: string
            required:
              - conditions
              - actions
            additionalProperties: false
        settings:
          type: object
          properties:
            embedOptions:
              type: object
              properties:
                mode:
                  type: string
                  enum:
                    - full-screen
                    - inline
                lang:
                  type: string
                  enum:
                    - de
                    - en
                    - fr
                width:
                  type: string
                topBar:
                  type: boolean
                scrollToTop:
                  type: boolean
                button:
                  type: object
                  properties:
                    text:
                      type: string
                      nullable: true
                    align:
                      type: string
                      enum:
                        - left
                        - center
                        - right
            safeModeAutomation:
              type: boolean
            designId:
              type: string
            templateId:
              type: string
            entityId:
              type: string
              nullable: true
            mappingsAutomationId:
              type: string
            # targeted_customer:
            #   type: string
            targetedCustomer:
              type: string
            description:
              type: string
              nullable: true
            organizationSettings:
              type: object
              additionalProperties:
                type: boolean
              nullable: true
            publicToken:
              type: string
              nullable: true
            runtimeEntities:
              type: array
              items:
                type: string
                enum:
                  - ORDER
                  - OPPORTUNITY
            entityTags:
              type: array
              items:
                type: string
          required:
            - designId
          additionalProperties: false
        createdBy:
          type: string
      required:
        - organizationId
        - brandId
        - name
        - steps
      additionalProperties: true
    SearchJourneysQueryRequest:
      type: object
      properties:
        q:
          type: string
          description: >
            Lucene query syntax

            See https://lucene.apache.org/core/2_9_4/queryparsersyntax.html ;
            https://www.elastic.co/guide/en/kibana/current/lucene-query.html
          example: '_tags:*Flex*'
          default: '*'
        from:
          type: integer
          description: >
            The offset of the first result to return.

            See
            https://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-from-size.html
          example: 0
          default: 0
        size:
          type: integer
          description: >
            The maximum number of results to return.

            See
            https://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-from-size.html
          example: 25
          default: 25
        sort:
          type: string
          description: |
            The sort order. Follows Lucene syntax.
          example: '_created_at:desc'
          default: '_created_at:desc'
    SearchJourneysResponse:
      type: object
      properties:
        hits:
          type: number
          description: |
            The total number of hits.
          example: 1
        results:
          type: array
          description: |
            The results.
          items:
            type: object
            properties:
              _id:
                type: string
                description: Journey Entity ID
                format: uuid
                example: e0f8f8f8-f8f8-f8f8-f8f8-f8f8f8f8f8f8
              _schema:
                type: string
                description: Entity Schema (journey always in this case)
                example: journey
              _title:
                type: string
                description: Journey Entity Title
                example: Journey Entity Title
              _org:
                type: string
                description: Organization ID
                example: '739224'
              _created_at:
                type: string
                format: date-time
                example: '2020-01-01T00:00:00.000Z'
              _updated_at:
                type: string
                format: date-time
                example: '2020-01-01T00:00:00.000Z'
              _tags:
                type: array
                items:
                  type: string
                  example: Flex
              journey_name:
                type: string
                description: Journey Name
                example: Journey Name
              journey_id:
                type: string
                format: uuid
                description: Journey config ID
                example: de7df470-253e-11ed-9174-116b8a718c0a
              journey_type:
                type: string
                description: Journey Template
                example: Sales template
              design:
                type: string
                description: Journey Design Name
                example: Design EPILOT
              created_by:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: User ID
                      example: '12345'
              journey_version:
                type: string
                description: Journey Version
                enum:
                  - Flex
                  - Widget
    ExportJobId:
      description: Export Job Id to get the result
      type: string
    Language:
      description: Export headers translation Language
      type: string
    IsTemplate:
      description: Pass 'true' to generate import template
      type: boolean
    SchemaId:
      description: Generated uuid for schema
      type: string
      format: uuid
    EntitySchema:
      description: >-
        The "type" of an Entity. Describes the shape. Includes Entity
        Attributes, Relations and Capabilities.
      type: object
      properties:
        slug:
          $ref: '#/components/schemas/EntitySlug'
        version:
          type: integer
          minimum: 1
        blueprint:
          $ref: '#/components/schemas/BlueprintEntityId'
        feature_flag:
          type: string
          example: FF_MY_FEATURE_FLAG
          description: This schema should only be active when the feature flag is enabled
        enable_setting:
          description: >-
            This schema should only be active when one of the organization
            settings is enabled
          type: array
          items:
            type: string
            example: 360_features
        name:
          description: User-friendly identifier for the entity schema
          type: string
          example: Contact
        plural:
          type: string
          example: Contacts
        published:
          type: boolean
          example: false
        draft:
          type: boolean
          example: false
        icon:
          type: string
          example: person
        title_template:
          type: string
          description: Template for rendering the title field. Uses handlebars
          example: '{{first_name}} {{last_name}}'
        ui_config:
          type: object
          properties:
            table_view:
              $ref: '#/components/schemas/EntityViewConfig'
            create_view:
              $ref: '#/components/schemas/EntityViewConfig'
            edit_view:
              $ref: '#/components/schemas/EntityViewConfig'
            single_view:
              $ref: '#/components/schemas/EntityViewConfig'
            list_item:
              type: object
              properties:
                summary_attributes:
                  type: array
                  items:
                    anyOf:
                      - $ref: '#/components/schemas/SummaryAttribute'
                      - type: string
                        description: List of attributes to show in list item
                        example: email
            sharing:
              type: object
              properties:
                show_sharing_button:
                  type: boolean
                  description: Show the sharing button in entity detail view
                  example: true
        capabilities:
          type: array
          items:
            $ref: '#/components/schemas/EntityCapability'
        group_settings:
          type: array
          description: A dictionary of Group Titles and associated settings if present.
          items:
            type: object
            properties:
              label:
                type: string
              id:
                type: string
              expanded:
                type: boolean
              render_condition:
                type: string
                example: _is_composite_price = "false"
              order:
                description: Render order of the group
                type: integer
                default: 0
              feature_flag:
                type: string
                example: FF_MY_FEATURE_FLAG
                description: >-
                  This group should only be active when the feature flag is
                  enabled
              setting_flag:
                type: string
                example: MY_SETTING
                description: This group should only be active when the setting is enabled
              info_tooltip_title:
                type: object
                properties:
                  key:
                    type: string
                  default:
                    type: string
              _purpose:
                type: array
                items:
                  $ref: '#/components/schemas/ClassificationId'
            required:
              - label
              - id
          example:
            Order Info:
              expanded: true
            Contact Details:
              expanded: false
              info_tooltip_title:
                key: partner.partner_information_group_tooltip
                default: >-
                  These informations are provided by the partner company and
                  cannot be edited.
        layout_settings:
          type: object
          description: >
            Custom grid definitions for the layout. These settings are composed
            by managed and un-managed properties:

            - Managed Properties: are interpreted and transformed into layout
            styles

            - Un-managed Properties: are appended as styles into the attribute
            mounting node
          additionalProperties: true
          properties:
            grid_gap:
              type: string
              description: Defines the grid gap for the mounting node of the attribute.
            grid_template_columns:
              type: string
              description: >-
                Defines the grid column template for the mounting node of the
                attribute.
        dialog_config:
          type: object
          additionalProperties: true
        attributes:
          description: An ordered list of attributes the entity contains
          type: array
          items:
            $ref: '#/components/schemas/Attribute'
          example:
            - name: email
              type: email
              label: Email
              required: true
            - name: first_name
              type: string
              label: First Name
            - name: last_name
              type: string
              label: Last Name
            - name: birthdate
              type: date
              label: Birthdate
            - name: salutation
              type: select
              label: Salutation
              options:
                - Mr.
                - Ms. / Mrs.
                - Other
            - name: marketing_permission
              type: boolean
              label: Marketing permission
            - name: image
              type: file
              label: Image
        explicit_search_mappings:
          $ref: '#/components/schemas/SearchMappings'
      required:
        - slug
        - name
        - plural
    EntitySchemaItem:
      allOf:
        - type: object
          properties:
            id:
              $ref: '#/components/schemas/SchemaId'
            created_at:
              type: string
            updated_at:
              type: string
            comment:
              type: string
            source:
              type: object
              properties:
                id:
                  type: string
                type:
                  type: string
        - $ref: '#/components/schemas/EntitySchema'
    Attribute:
      anyOf:
        - $ref: '#/components/schemas/TextAttribute'
        - $ref: '#/components/schemas/LinkAttribute'
        - $ref: '#/components/schemas/DateAttribute'
        - $ref: '#/components/schemas/CountryAttribute'
        - $ref: '#/components/schemas/BooleanAttribute'
        - $ref: '#/components/schemas/SelectAttribute'
        - $ref: '#/components/schemas/MultiSelectAttribute'
        - $ref: '#/components/schemas/StatusAttribute'
        - $ref: '#/components/schemas/SequenceAttribute'
        - $ref: '#/components/schemas/RelationAttribute'
        - $ref: '#/components/schemas/UserRelationAttribute'
        - $ref: '#/components/schemas/AddressRelationAttribute'
        - $ref: '#/components/schemas/PaymentMethodRelationAttribute'
        - $ref: '#/components/schemas/CurrencyAttribute'
        - $ref: '#/components/schemas/RepeatableAttribute'
        - $ref: '#/components/schemas/TagsAttribute'
        - $ref: '#/components/schemas/NumberAttribute'
        - $ref: '#/components/schemas/ConsentAttribute'
        - $ref: '#/components/schemas/InternalAttribute'
        - $ref: '#/components/schemas/OrderedListAttribute'
        - $ref: '#/components/schemas/FileAttribute'
        - $ref: '#/components/schemas/ComputedAttribute'
        - $ref: '#/components/schemas/PartnerStatusAttribute'
        - $ref: '#/components/schemas/InvitationEmailAttribute'
        - $ref: '#/components/schemas/AutomationAttribute'
        - $ref: '#/components/schemas/InternalUserAttribute'
        - $ref: '#/components/schemas/PurposeAttribute'
    BaseAttribute:
      type: object
      properties:
        name:
          type: string
        label:
          type: string
        placeholder:
          type: string
        hidden:
          description: Do not render attribute in entity views
          type: boolean
          default: false
        show_in_table:
          description: 'Render as a column in table views. When defined, overrides `hidden`'
          type: boolean
        required:
          type: boolean
          default: false
        readonly:
          type: boolean
          default: false
        deprecated:
          type: boolean
          default: false
        default_value:
          oneOf:
            - type: string
            - type: object
              additionalProperties: true
            - type: integer
            - type: number
            - type: boolean
            # - type: array
        group:
          description: >-
            Which group the attribute should appear in. Accepts group ID or
            group name
          type: string
        order:
          description: Attribute sort order (ascending) in group
          type: integer
          example: 0
        layout:
          type: string
          example: full_width
        hide_label:
          type: boolean
          description: 'When set to true, will hide the label of the field.'
        icon:
          type: string
          description: |
            Code name of the icon to used to represent this attribute.
            The value must be a valid @epilot/base-elements Icon name
        render_condition:
          type: string
          description: >
            Defines the conditional rendering expression for showing this field.

            When a valid expression is parsed, their evaluation defines the
            visibility of this attribute.

            Note: Empty or invalid expression have no effect on the field
            visibility.
        _purpose:
          type: array
          items:
            $ref: '#/components/schemas/ClassificationId'
        constraints:
          type: object
          description: >
            A set of constraints applicable to the attribute.

            These constraints should and will be enforced by the attribute
            renderer.
          example:
            disablePast: true
        feature_flag:
          type: string
          example: FF_MY_FEATURE_FLAG
          description: >-
            This attribute should only be active when the feature flag is
            enabled
        setting_flag:
          type: string
          example: MY_SETTING
          description: This attribute should only be active when the setting is enabled
        value_formatter:
          type: string
        preview_value_formatter:
          type: string
        entity_builder_disable_edit:
          description: >-
            Setting to `true` disables editing the attribute on the entity
            builder UI
          type: boolean
          default: false
        protected:
          description: >-
            Setting to `true` prevents the attribute from being modified /
            deleted
          type: boolean
          default: true
      required:
        - name
        - label
    TextAttribute:
      allOf:
        - $ref: '#/components/schemas/BaseAttribute'
        - type: object
          description: Textarea or text input
          properties:
            type:
              type: string
              enum:
                - string
            multiline:
              type: boolean
    LinkAttribute:
      allOf:
        - $ref: '#/components/schemas/BaseAttribute'
        - type: object
          description: Link with title and href
          properties:
            type:
              type: string
              enum:
                - link
    InternalAttribute:
      allOf:
        - $ref: '#/components/schemas/BaseAttribute'
        - type: object
          description: No UI representation
          properties:
            type:
              type: string
              enum:
                - internal
    BooleanAttribute:
      allOf:
        - $ref: '#/components/schemas/BaseAttribute'
        - type: object
          description: Yes / No Toggle
          properties:
            type:
              type: string
              enum:
                - boolean
    DateAttribute:
      allOf:
        - $ref: '#/components/schemas/BaseAttribute'
        - type: object
          description: Date or Datetime picker
          properties:
            type:
              type: string
              enum:
                - date
                - datetime
    CountryAttribute:
      allOf:
        - $ref: '#/components/schemas/BaseAttribute'
        - type: object
          description: Country picker
          properties:
            type:
              type: string
              enum:
                - country
    SelectAttribute:
      allOf:
        - $ref: '#/components/schemas/BaseAttribute'
        - type: object
          description: Dropdown select
          properties:
            type:
              type: string
              enum:
                - select
                - radio
            options:
              type: array
              items:
                anyOf:
                  - type: string
                    nullable: true
                  - type: object
                    properties:
                      value:
                        type: string
                      title:
                        type: string
                    required:
                      - value
            allow_any:
              type: boolean
              description: Allow arbitrary input values in addition to provided options
    MultiSelectAttribute:
      allOf:
        - $ref: '#/components/schemas/BaseAttribute'
        - type: object
          description: Multi Choice Selection
          properties:
            type:
              type: string
              enum:
                - multiselect
                - checkbox
            disable_case_sensitive:
              type: boolean
              nullable: true
              description: >-
                controls if the matching of values against the options is case
                sensitive or not
            allow_extra_options:
              type: boolean
              nullable: true
              description: >-
                controls if the 360 ui will allow the user to enter a value
                which is not defined by the options
            options:
              type: array
              items:
                anyOf:
                  - type: string
                    nullable: true
                  - type: object
                    properties:
                      value:
                        type: string
                      title:
                        type: string
                    required:
                      - value
            allow_any:
              type: boolean
              description: Allow arbitrary input values in addition to provided options
    StatusAttribute:
      allOf:
        - $ref: '#/components/schemas/BaseAttribute'
        - type: object
          description: Status select
          properties:
            type:
              type: string
              enum:
                - status
            options:
              type: array
              items:
                anyOf:
                  - type: string
                    nullable: true
                  - type: object
                    properties:
                      value:
                        type: string
                      title:
                        type: string
                    required:
                      - value
    SequenceAttribute:
      allOf:
        - $ref: '#/components/schemas/BaseAttribute'
        - type: object
          description: Sequence of unique identifiers
          properties:
            type:
              type: string
              enum:
                - sequence
            prefix:
              description: Prefix added before the sequence number
              type: string
              example: OR-
            start_number:
              type: integer
              minimum: 0
    FileAttribute:
      allOf:
        - $ref: '#/components/schemas/BaseAttribute'
        - type: object
          description: File or Image Attachment
          properties:
            type:
              type: string
              enum:
                - image
                - file
            multiple:
              type: boolean
            allowed_extensions:
              description: List of file extensions (without the dot suffix)
              type: array
              items:
                type: string
                example: csv
            display_images_landscaped:
              type: boolean
              description: >-
                Controls how the images are presented to the user during upload
                on the Entity Details view.
            enable_description:
              type: boolean
              description: >
                When set to true, an i18n description will be used alongside the
                attribute label.

                This description should be set through the platform locales in
                the form: `file.{attribute_name}.description_text`.
            default_access_control:
              type: string
              enum:
                - public-read
                - private
          required:
            - type
    CurrencyAttribute:
      allOf:
        - $ref: '#/components/schemas/BaseAttribute'
        - type: object
          description: Currency input
          properties:
            type:
              type: string
              enum:
                - currency
            currency_selector_only:
              type: boolean
              default: false
            currency:
              description: >-
                An array of currency configurations with a country code
                (ISO-4217)
              type: array
              items:
                anyOf:
                  - type: object
                    description: A currency configuration
                    properties:
                      code:
                        type: string
                      description:
                        type: string
                      symbol:
                        type: string
                      flag:
                        type: string
                    required:
                      - code
                      - description
                      - symbol
                    example:
                      code: EUR
                      description: Euro
                      symbol: €
                      flag: "\U0001F1EA\U0001F1FA"
          required:
            - type
            - currency
    SummaryField:
      type: object
      description: >-
        Summary Fields are displayed inside list view as a resume of the
        relation entity.
      properties:
        field:
          type: string
          description: The field from the entity attributes to display
        display_as:
          type: string
          description: An hint on how to display the summary field
    RelationAttribute:
      allOf:
        - $ref: '#/components/schemas/BaseAttribute'
        - type: object
          description: Entity Relationship
          properties:
            type:
              type: string
              enum:
                - relation
            relation_type:
              type: string
              enum:
                - has_many
                - has_one
            reverse_attributes:
              description: Map of schema slug to target relation attribute
              type: object
              additionalProperties:
                type: string
                example: contact.account
              example:
                contact: account
                opportunity: customer
            relation_affinity_mode:
              description: >-
                Weak relation attributes are kept when duplicating an entity.
                Strong relation attributes are discarded when duplicating an
                entity.
              type: string
              enum:
                - weak
                - strong
            enable_relation_picker:
              type: boolean
              default: true
              description: >-
                When enable_relation_picker is set to true the user will be able
                to pick existing relations as values. Otherwise, the user will
                need to create new relation to link.
            edit_mode:
              type: string
              enum:
                - list-view
            details_view_mode_enabled:
              type: boolean
              default: false
              description: >-
                Enables the preview, edition, and creation of relation items on
                a Master-Details view mode.
            actions:
              type: array
              items:
                type: object
                properties:
                  action_type:
                    type: string
                    enum:
                      - add_existing
                      - create_new
                      - create_from_existing
                    description: >
                      The action type. Currently supported actions:


                      | action | description |

                      |--------|-------------|

                      | add_existing | Enables the user to pick an existing
                      entity to link as relation |

                      | create_new | Enables the user to create a new entity
                      using the first/main `allowed_schemas` schema

                      | create_from_existing | Enables the user to pick an
                      existing entity to clone from, while creating a blank new
                      entity to link as relation |
                  label:
                    type: string
                    description: The action label or action translation key (i18n)
                  default:
                    type: boolean
                    description: >-
                      Sets the action as the default action, visible as the main
                      action button.
                  feature_flag:
                    type: string
                    description: Name of the feature flag that enables this action
                  setting_flag:
                    type: string
                    description: Name of the setting flag that enables this action
                  new_entity_item:
                    type: object
                    allOf:
                      - $ref: '#/components/schemas/EntityItem'
              example:
                value:
                  - action_type: add_existing
                    label: entityrelation.add_existing
                    default: true
                  - action_type: create_new
                    label: entityrelation.create_new
                  - action_type: create_from_existing
                    label: entityrelation.create_from_existing
            drawer_size:
              type: string
              enum:
                - small
                - medium
                - large
            icon:
              type: string
            summary_fields:
              type: array
              items:
                anyOf:
                  - type: string
                    description: The field name from the entity attributes to display
                  - $ref: '#/components/schemas/SummaryField'
            has_primary:
              type: boolean
            allowedSchemas:
              type: array
              items:
                $ref: '#/components/schemas/EntitySlug'
            enable_relation_tags:
              type: boolean
              default: true
              description: >-
                When enable_relation_tags is set to true the user will be able
                to set tags(labels) in each relation item.
            add_button_label:
              type: string
              description: >-
                Optional label for the add button. The translated value for
                add_button_lable is used, if found else the string is used as
                is.
            search_placeholder:
              type: string
              description: >-
                Optional placeholder text for the relation search input. The
                translated value for search_placeholder is used, if found else
                the string is used as is.
    UserRelationAttribute:
      allOf:
        - $ref: '#/components/schemas/BaseAttribute'
        - type: object
          description: User Relationship
          properties:
            type:
              type: string
              enum:
                - relation_user
            multiple:
              type: boolean
              default: false
    AddressRelationAttribute:
      allOf:
        - $ref: '#/components/schemas/BaseAttribute'
        - type: object
          description: Reference to an address attribute of another entity
          properties:
            type:
              type: string
              enum:
                - relation_address
            has_primary:
              type: boolean
    PaymentMethodRelationAttribute:
      allOf:
        - $ref: '#/components/schemas/BaseAttribute'
        - type: object
          description: Reference to a payment method attribute of another entity
          properties:
            type:
              type: string
              enum:
                - relation_payment_method
            has_primary:
              type: boolean
    InvitationEmailAttribute:
      allOf:
        - $ref: '#/components/schemas/BaseAttribute'
        - type: object
          description: Email address for send invitation
          properties:
            type:
              type: string
              enum:
                - invitation_email
    AutomationAttribute:
      allOf:
        - $ref: '#/components/schemas/BaseAttribute'
        - type: object
          description: Automation entity
          properties:
            type:
              type: string
              enum:
                - automation
    InternalUserAttribute:
      allOf:
        - $ref: '#/components/schemas/BaseAttribute'
        - type: object
          description: Epilot internal user info
          properties:
            type:
              type: string
              enum:
                - internal_user
    PurposeAttribute:
      allOf:
        - $ref: '#/components/schemas/BaseAttribute'
        - $ref: '#/components/schemas/TaxonomyClassification'
        - type: object
          description: Entity Taxonomy
          properties:
            type:
              type: string
              enum:
                - purpose
    RepeatableAttribute:
      allOf:
        - $ref: '#/components/schemas/BaseAttribute'
        - type: object
          description: Repeatable (add N number of fields)
          properties:
            repeatable:
              type: boolean
            has_primary:
              type: boolean
            relation_affinity_mode:
              description: >-
                Weak repeatable attributes are kept when duplicating an entity.
                Strong repeatable attributes are discarded when duplicating an
                entity.
              type: string
              enum:
                - weak
                - strong
            type:
              type: string
              enum:
                - string
                - phone
                - email
                - address
                - relation
                - payment
                - price_component
                - date
            enable_relation_picker:
              type: boolean
              default: true
              description: >-
                when enable_relation_picker is set to true the user will be able
                to pick existing relations as values. Otherwise, the user will
                need to create new relation to link.
    TagsAttribute:
      allOf:
        - $ref: '#/components/schemas/BaseAttribute'
        - type: object
          description: Tags
          properties:
            type:
              type: string
              enum:
                - tags
            options:
              type: array
              items:
                type: string
            suggestions:
              type: array
              items:
                type: string
    NumberAttribute:
      allOf:
        - $ref: '#/components/schemas/BaseAttribute'
        - type: object
          description: Numeric input
          properties:
            type:
              type: string
              enum:
                - number
            format:
              type: string
    ConsentAttribute:
      allOf:
        - $ref: '#/components/schemas/BaseAttribute'
        - type: object
          description: Consent Management
          properties:
            type:
              type: string
              enum:
                - consent
            topic:
              type: string
            identifiers:
              type: array
              items:
                type: string
          required:
            - type
            - topic
    OrderedListAttribute:
      allOf:
        - $ref: '#/components/schemas/BaseAttribute'
        - type: object
          description: Type of attribute to render N number of ordered fields
          properties:
            type:
              type: string
              enum:
                - ordered_list
    ComputedAttribute:
      allOf:
        - $ref: '#/components/schemas/BaseAttribute'
        - type: object
          description: >-
            An attribute that is computed from the entity data. For more details
            on how to use them, check the docs
            [here](https://e-pilot.atlassian.net/wiki/spaces/EO/pages/5642977476/How+To+Computed+Schema+Attributes)
          properties:
            type:
              type: string
              enum:
                - computed
    PartnerStatusAttribute:
      allOf:
        - $ref: '#/components/schemas/BaseAttribute'
        - type: object
          description: Partner Status
          properties:
            type:
              type: string
              enum:
                - partner_status
    Attachment:
      type: object
      deprecated: true
      properties:
        key:
          type: string
        mime:
          type: string
        name:
          type: string
        size:
          type: number
        image_url:
          type: string
        download_url:
          type: string
        alt_text:
          type: string
      required:
        - key
        - mime
        - name
        - size
        - image_url
        - download_url
    SummaryAttribute:
      description: >
        Represents an expanded version of an attribute to be displayed in the
        list item summary.

        This configuration can be used in the following way:

        ```js

        {
          "label": "Price components"
          "value": "{{item.prices.length}} price components"
          "show_as_tag": true
          "render_condition": "is_composite_price = "true""
        }

        ```

        The value field supports handlebar expressions from which you can pick
        any field from the entity state.
      type: object
      properties:
        label:
          type: string
          description: Label to be shown on the top of the value.
        value:
          type: string
          description: A static value or an handlebar expression.
        show_as_tag:
          type: boolean
          description: Displays the value within a tag chip.
        tag_color:
          type: string
          description: CSS hex color or CSS color name for the tag chip.
        render_condition:
          type: string
          description: >
            Defines the conditional rendering expression for showing this field.

            When a valid expression is parsed, their evaluation defines the
            visibility of this attribute.

            Note: Empty or invalid expression have no effect on the field
            visibility.
        feature_flag:
          type: string
          description: Binds summary field visibility to the feature flag state.
        setting_flag:
          type: string
          description: Binds summary field visibility to the setting flag state.
      required:
        - label
        - value
    EntitySlug:
      description: URL-friendly identifier for the entity schema
      type: string
      example: contact
    EntityCapability:
      description: Capabilities the Entity has. Turn features on/off for entities.
      type: object
      properties:
        name:
          type: string
          description: Unique name for the capability
          example: customer_messaging
        title:
          type: string
          description: Human readable title of the capability
          example: Messaging
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/Attribute'
        _purpose:
          type: array
          items:
            $ref: '#/components/schemas/ClassificationId'
        ui_hooks:
          type: array
          items:
            type: object
            additionalProperties: true
            properties:
              hook:
                type: string
                description: name of the hook to use
                example: 'EntityDetailsV2:Tab'
              render_condition:
                type: string
                example: _is_composite_price = "false"
              order:
                type: integer
                description: render order (ascending)
                example: 10
              title:
                type: string
                example: Notes
              group_expanded:
                type: boolean
                description: Sets the group expand/collapse default state
              import:
                type: string
                description: package to be imported
                example: '@epilot360/notes'
              component:
                type: string
                description: the component to be dynamically loaded
                example: PricingItems
              route:
                type: string
                description: route for specified capability
                example: notes
              icon:
                type: string
                description: Preview icon name(As in Base elements) for the capability
                example: email
              disabled:
                type: boolean
                description: Whether capability should be disabled
              header:
                type: boolean
                description: Specific to Activity pilot
              requiredPermission:
                type: object
                description: Require a permission to display UI hook
                properties:
                  action:
                    type: string
                    example: 'note:view'
                  resource:
                    type: string
                    example: 123
                required:
                  - action
            required:
              - hook
        feature_flag:
          type: string
          example: FF_MY_FEATURE_FLAG
          description: >-
            This capability should only be active when the feature flag is
            enabled
        setting_flag:
          type: string
          example: MY_SETTING
          description: This capability should only be active when the setting is enabled
        legacy:
          type: boolean
          description: Only show capability for legacy tenants (ivy)
      required:
        - name
    EntityViewConfig:
      anyOf:
        - $ref: '#/components/schemas/EntityDefaultCreate'
        - $ref: '#/components/schemas/EntityDefaultEdit'
        - $ref: '#/components/schemas/EntityDefaultTable'
        - $ref: '#/components/schemas/RedirectEntityView'
        - $ref: '#/components/schemas/EntityParcelView'
        - $ref: '#/components/schemas/EntityViewDisabled'
    EntityViewDisabled:
      type: object
      properties:
        view_type:
          type: string
          enum:
            - disabled
    EntityDefaultTable:
      type: object
      properties:
        view_type:
          type: string
          enum:
            - default
        dropdown_items:
          type: array
          items:
            allOf:
              - type: object
                properties:
                  feature_flag:
                    type: string
                    example: FF_MY_FEATURE_FLAG
                    description: >-
                      This dropdown item should only be active when the feature
                      flag is enabled
                  legacy:
                    type: boolean
                    description: Only show item for legacy tenants (ivy)
              - oneOf:
                  - type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - entity
                      entity:
                        $ref: '#/components/schemas/EntitySlug'
                  - type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - link
                      title:
                        type: string
                        example: Opportunities
                      uri:
                        type: string
                        format: uri-reference
        row_actions:
          type: array
          items:
            type: string
        navbar_actions:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              options:
                type: array
                items:
                  type: object
                  properties:
                    label:
                      type: string
                    params:
                      type: object
                  required:
                    - label
            required:
              - type
        enable_thumbnails:
          description: Enable the thumbnail column
          type: boolean
          default: false
        classic_view:
          type: string
          format: uri-reference
    EntityDefaultCreate:
      type: object
      properties:
        view_type:
          type: string
          enum:
            - default
        search_params:
          type: object
          additionalProperties:
            type: string
        table_menu_options:
          type: object
          properties:
            icon:
              type: string
            label:
              type: string
    EntityDefaultEdit:
      type: object
      properties:
        view_type:
          type: string
          enum:
            - default
        search_params:
          type: object
          additionalProperties:
            type: string
        table_menu_options:
          type: object
          properties:
            icon:
              type: string
            label:
              type: string
    RedirectEntityView:
      type: object
      properties:
        view_type:
          type: string
          enum:
            - redirect
        route:
          type: string
          example: '/app/pricing-hub/product/:entityId'
      example:
        type: redirect
        route: '/app/pricing-hub/product/:entityId'
    EntityParcelView:
      type: object
      properties:
        view_type:
          type: string
          enum:
            - parcel
        import:
          type: string
          example: '@epilot360/pricing-hub-app'
      example:
        type: redirect
        route: '/app/pricing-hub/product/:entityId'
    EntityId:
      type: string
      format: uuid
    BaseEntity:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - required:
            - _id
            - _title
            - _org
            - _schema
            - _created_at
            - _updated_at
    Entity:
      type: object
      additionalProperties: true
      properties:
        _id:
          $ref: '#/components/schemas/EntityId'
        _org:
          type: string
          description: Organization Id the entity belongs to
        _schema:
          $ref: '#/components/schemas/EntitySlug'
        _title:
          type: string
          description: Title of entity
          nullable: true
        _tags:
          type: array
          items:
            type: string
          nullable: true
        _created_at:
          type: string
          format: date-time
          nullable: true
        _updated_at:
          type: string
          format: date-time
          nullable: true
      example:
        _id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        _org: '123'
        _schema: contact
        _tags:
          - example
          - mock
        _created_at: '2021-02-09T12:41:43.662Z'
        _updated_at: '2021-02-09T12:41:43.662Z'
    HydratedEntity:
      type: object
      description: Entity with relation data resolved into the attribute values
      properties: {}
      additionalProperties: true
      example:
        status: active
        customer_number: abc123
        email:
          - label: work
            email: user@example.com
        phone:
          - label: work
            phone: '+49123456789'
        first_name: First Name
        middle_name: Middle Name
        last_name: Last Name
        date_of_birth: '2019-08-24'
        title: Mr.
        account:
          - status: active
            name: Company name
            company_email:
              - label: Company email
                email: company@example.com
            company_phone:
              - label: Support phone
                phone: '+49123456789'
            company_website: 'https://example.com'
            tax_id: DE123456789
            tax_exemption: '2019-08-24'
            contacts:
              $relation:
                - _tags:
                    - CEO
                  entity_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
    EntityItem:
      allOf:
        - $ref: '#/components/schemas/BaseEntity'
        - $ref: '#/components/schemas/Entity'
    HydratedEntityItem:
      allOf:
        - $ref: '#/components/schemas/BaseEntity'
        - $ref: '#/components/schemas/HydratedEntity'
    GetRelationsResp:
      type: array
      items:
        anyOf:
          - $ref: '#/components/schemas/RelationItem'
          - $ref: '#/components/schemas/RelationEntity'
    RelationEntity:
      allOf:
        - $ref: '#/components/schemas/BaseEntity'
        - type: object
          properties:
            $relation:
              $ref: '#/components/schemas/RelationItem'
    RelationItem:
      type: object
      properties:
        entity_id:
          $ref: '#/components/schemas/EntityId'
        attribute:
          type: string
        _tags:
          type: array
          items:
            type: string
        reverse:
          description: Whether this is a reverse relation
          type: boolean
      required:
        - entity_id
        - attribute
    EntitySearchParams:
      type: object
      properties:
        q:
          description: Lucene queries supported with ElasticSearch
          type: string
          example: '_schema:contact AND status:active'
        sort:
          type: string
          example: '_created_at:desc'
        from:
          type: integer
          minimum: 0
          default: 0
        size:
          type: integer
          minimum: 1
          default: 10
          description: Max search size is 1000 with higher values defaulting to 1000
        hydrate:
          type: boolean
          description: >-
            When true, enables entity hydration to resolve nested $relation &
            $relation_ref references in-place.
          default: false
        fields:
          type: array
          description: List of entity fields to include in search results
          items:
            type: string
          example:
            - _id
            - _title
            - first_name
        include_scores:
          type: boolean
          default: false
          description: >-
            Adds a `_score` number field to results that can be used to rank by
            match score
      required:
        - q
    EntityImportParams:
      type: object
      properties:
        S3Reference:
          type: object
          properties:
            bucket:
              type: string
              example: epilot-files-prod
            key:
              type: string
              example: 123/4d689aeb-1497-4410-a9fe-b36ca9ac4389/document.pdf
          required:
            - bucket
            - key
        schema:
          type: string
          example: contact
      required:
        - S3Reference
        - schema
    EntitySearchResults:
      type: object
      properties:
        hits:
          type: number
          example: 1
        results:
          type: array
          items:
            $ref: '#/components/schemas/EntityItem'
    SearchMappings:
      description: >
        Advanced: explicit Elasticsearch index mapping definitions for entity
        data
      example:
        image:
          type: keyword
          index: false
      type: object
      additionalProperties:
        type: object
        properties:
          index:
            type: boolean
            default: true
          type:
            type: string
            enum:
              - keyword
              - text
              - boolean
              - integer
              - long
              - float
              - date
              - flattened
              - nested
          fields:
            additionalProperties: true
    ActivityId:
      type: string
      format: ulid
      description: 'See https://github.com/ulid/spec'
      example: 01F130Q52Q6MWSNS8N2AVXV4JN
    ActivityCallerContext:
      type: object
      additionalProperties: true
      properties:
        EpilotAuth:
          type: object
          properties:
            token:
              type: object
              properties:
                sub:
                  type: string
                  example: 476e9b48-42f4-4234-a2b0-4668b34626ce
                email:
                  type: string
                  example: example@epilot.cloud
                'cognito:username':
                  type: string
                  example: example@epilot.cloud
                'custom:ivy_user_id':
                  type: string
                  example: '10006129'
              example:
                sub: 476e9b48-42f4-4234-a2b0-4668b34626ce
                'cognito:groups':
                  - Administrator
                'cognito:preferred_role': 'arn:aws:iam::912468240823:role/base-administrator-role'
                iss: >-
                  https://cognito-idp.eu-central-1.amazonaws.com/eu-central-1_6lZSgmU6D
                'custom:ivy_org_id': '739224'
                'cognito:username': n.ahmad@epilot.cloud
                'custom:ivy_user_id': '10006129'
                'cognito:roles':
                  - 'arn:aws:iam::912468240823:role/base-administrator-role'
                aud: 6e0jbdnger7nmoktaaflarue1l
                event_id: cd5f5583-d90c-4db5-8e99-5f5dd29a4d75
                token_use: id
                auth_time: 1614333023
                exp: 1614336623
                iat: 1614333023
                email: n.ahmad@epilot.cloud
    Activity:
      type: object
      properties:
        type:
          type: string
          example: MyCustomActivity
        title:
          type: string
          description: Title for activity. Supports handlebars syntax.
          example: My custom activity
        message:
          type: string
          description: Message for activity. Supports handlebars syntax.
          example: '{{caller}} did something with {{entity payload.entity.id}}.'
        payload:
          type: object
          properties: {}
          additionalProperties: true
          example:
            entity:
              id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              schema: contact
      required:
        - type
        - title
        - message
    EntityOperation:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/EntityId'
        org:
          type: string
          example: '123'
        activity_id:
          $ref: '#/components/schemas/ActivityId'
        operation:
          type: string
          enum:
            - createEntity
            - updateEntity
            - deleteEntity
        params:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/EntityId'
            slug:
              $ref: '#/components/schemas/EntitySlug'
          example:
            id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
            slug: contact
        payload:
          allOf:
            - $ref: '#/components/schemas/Entity'
            - example:
                _schema: contact
                _org: '123'
                status: Inactive
        diff:
          type: object
          properties:
            added:
              $ref: '#/components/schemas/Entity'
            updated:
              $ref: '#/components/schemas/Entity'
            deleted:
              $ref: '#/components/schemas/Entity'
      required:
        - entity
        - org
        - operation
    ActivityItem:
      allOf:
        - type: object
          properties:
            _id:
              $ref: '#/components/schemas/ActivityId'
            timestamp:
              type: string
              format: date-time
        - $ref: '#/components/schemas/Activity'
        - type: object
          properties:
            caller:
              $ref: '#/components/schemas/ActivityCallerContext'
        - type: object
          properties:
            operations_total:
              type: integer
              description: Count of total operations attached to this activity
              example: 1
            operations:
              type: array
              items:
                $ref: '#/components/schemas/EntityOperation'
    BlueprintEntityId:
      description: Reference to blueprint
      type: string
      format: uuid
    SavedViewId:
      description: Generated uuid for a saved view
      type: string
      format: uuid
    SavedViewItem:
      allOf:
        - type: object
          properties:
            id:
              $ref: '#/components/schemas/SavedViewId'
            created_at:
              type: string
            updated_at:
              type: string
        - $ref: '#/components/schemas/SavedView'
    SavedView:
      description: A saved entity view
      type: object
      properties:
        slug:
          type: array
          description: list of schemas a view can belong to
          items:
            $ref: '#/components/schemas/EntitySlug'
        name:
          description: User-friendly identifier for the saved view
          type: string
          example: View listing German
        org:
          description: Organisation ID a view belongs to
          type: string
          example: '66'
        shared:
          description: boolean property for if a view is shared with organisation
          type: boolean
          example: true
        created_by:
          anyOf:
            - type: object
              description: A user that created the view
              properties:
                user_id:
                  type: string
                  example: '10598'
            - type: object
              description: A system-created view
              properties:
                source:
                  type: string
                  enum:
                    - SYSTEM
                    - BLUEPRINT
              additionalProperties: true
        ui_config:
          type: object
          example:
            filters:
              customer_name: suresh test
              _tags: '360'
            table_layout:
              opportunity:
                page: 1
                sort: '_created_at:desc'
                pageSize: 25
                columnSettings: []
      required:
        - slug
        - name
        - created_by
        - ui_config
    Taxonomy:
      type: object
      properties:
        slug:
          $ref: '#/components/schemas/TaxonomySlug'
        name:
          type: string
          description: >-
            A human friendly name of a Taxonomy e.g. Purpose, Product Category,
            Folder, Tag
          example: Purpose
        plural:
          type: string
          description: >-
            Plural name of a Taxonomy e.g. Purposes, Product Categories,
            Folders, Tags
          example: Purposes
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - slug
        - name
    TaxonomyClassification:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ClassificationId'
        name:
          type: string
          example: Wallbox PV
        parents:
          type: array
          items:
            $ref: '#/components/schemas/ClassificationId'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - name
    ClassificationId:
      type: string
      format: uuid
    TaxonomySlug:
      type: string
      description: URL-friendly name for taxonomy
      example: purpose
    ClassificationsUpdate:
      type: object
      properties:
        create:
          type: array
          items:
            $ref: '#/components/schemas/TaxonomyClassification'
        update:
          type: array
          items:
            $ref: '#/components/schemas/TaxonomyClassification'
        delete:
          type: array
          items:
            $ref: '#/components/schemas/ClassificationId'
    AutomationFlowId:
      type: string
      example: 7791b04a-16d2-44a2-9af9-2d59c25c512f
    AutomationActionId:
      type: string
      example: 9ec3711b-db63-449c-b894-54d5bb622a8f
    AutomationFlow:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/AutomationFlowId'
        flow_name:
          type: string
          description: A descriptive name for the Automation
          example: Handle contact form
        enabled:
          type: boolean
          description: Whether the automation is enabled or not
          default: true
        triggers:
          type: array
          items:
            $ref: '#/components/schemas/AnyTrigger'
        trigger_conditions:
          type: array
          items:
            $ref: '#/components/schemas/TriggerCondition'
        entity_schema:
          description: The triggering entity schema
          type: string
          example: submission
        actions:
          type: array
          items:
            $ref: '#/components/schemas/AnyActionConfig'
        runs:
          type: number
          example: 7
          description: Number of automation executions that ran
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        created_by:
          type: string
          example: 'user:123'
          description: User / service who created automation flow
        last_updated_by:
          type: string
          example: 'user:123'
          description: User / service who last updated automation flow
      required:
        - flow_name
        - triggers
        - actions
    SearchAutomationsResp:
      type: object
      properties:
        total:
          type: number
        results:
          type: array
          items:
            $ref: '#/components/schemas/AutomationFlow'
      required:
        - total
        - results
    AnyTrigger:
      anyOf:
        - $ref: '#/components/schemas/FrontendSubmitTrigger'
        - $ref: '#/components/schemas/JourneySubmitTrigger'
        - $ref: '#/components/schemas/ApiSubmissionTrigger'
        - $ref: '#/components/schemas/EntityOperationTrigger'
        - $ref: '#/components/schemas/ActivityTrigger'
        - $ref: '#/components/schemas/EntityManualTrigger'
        - $ref: '#/components/schemas/ReceivedEmailTrigger'
    AnyAction:
      anyOf:
        - $ref: '#/components/schemas/MapEntityAction'
        - $ref: '#/components/schemas/TriggerWorkflowAction'
        - $ref: '#/components/schemas/TriggerWebhookAction'
        - $ref: '#/components/schemas/CreateDocumentAction'
        - $ref: '#/components/schemas/SendEmailAction'
        - $ref: '#/components/schemas/CartCheckoutAction'
        - $ref: '#/components/schemas/AutomationAction'
    AnyActionConfig:
      anyOf:
        - $ref: '#/components/schemas/MapEntityActionConfig'
        - $ref: '#/components/schemas/TriggerWorkflowActionConfig'
        - $ref: '#/components/schemas/TriggerWebhookActionConfig'
        - $ref: '#/components/schemas/CreateDocumentActionConfig'
        - $ref: '#/components/schemas/SendEmailActionConfig'
        - $ref: '#/components/schemas/CartCheckoutActionConfig'
        - $ref: '#/components/schemas/AutomationActionConfig'
    AutomationActionConfig:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/AutomationActionId'
        flow_action_id:
          $ref: '#/components/schemas/AutomationActionId'
        name:
          type: string
        type:
          type: string
        config:
          type: object
          additionalProperties: true
        allow_failure:
          description: Whether to stop execution in a failed state if this action fails
          type: boolean
        created_automatically:
          description: >-
            Flag indicating whether the action was created automatically or
            manually
          type: boolean
    AutomationActionExecutionState:
      type: object
      properties:
        execution_status:
          $ref: '#/components/schemas/ExecutionStatus'
        started_at:
          type: string
        updated_at:
          type: string
        outputs:
          type: object
          additionalProperties: true
          example: {}
        error_output:
          $ref: '#/components/schemas/ErrorOutput'
        retry_strategy:
          $ref: '#/components/schemas/RetryStrategy'
    RetryStrategy:
      type: string
      description: different behaviors for retrying failed execution actions.
      enum:
        - RETRY_AND_RESUME
        - RETRY_AND_STOP
    AutomationAction:
      allOf:
        - $ref: '#/components/schemas/AutomationActionConfig'
        - $ref: '#/components/schemas/AutomationActionExecutionState'
    ErrorOutput:
      type: object
      properties:
        error_code:
          $ref: '#/components/schemas/ErrorCode'
        error_reason:
          type: string
      required:
        - error_code
        - error_reason
    ErrorCode:
      type: string
      enum:
        - MAPPING_ERROR
        - REFRESH_RELATIONS_ERROR
        - DUPLICATE_ENTITY_ERROR
        - TRIGGER_WORKFLOW_ERROR
        - TIMEOUT_ERROR
        - BAD_CONFIG
        - INTERNAL_ERROR
    CartCheckoutActionConfig:
      allOf:
        - $ref: '#/components/schemas/AutomationActionConfig'
        - type: object
          description: Creates an order entity with prices from journey
          properties:
            type:
              enum:
                - cart-checkout
            config:
              $ref: '#/components/schemas/CartCheckoutConfig'
    CartCheckoutAction:
      allOf:
        - $ref: '#/components/schemas/AutomationAction'
        - type: object
          description: Creates an order entity with prices from journey
          properties:
            type:
              enum:
                - cart-checkout
            config:
              $ref: '#/components/schemas/CartCheckoutConfig'
    CartCheckoutConfig:
      type: object
      properties:
        version:
          description: Version of the config
          type: string
          default: '1'
        mapping_config:
          $ref: '#/components/schemas/MappingConfigRef'
        relation_attributes:
          type: array
          items:
            $ref: '#/components/schemas/RelationAttribute1'
        mapping_attributes:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/MappingAttributeV2'
              - $ref: '#/components/schemas/MappingAttribute'
        linkback_relation_attribute:
          type: string
          default: mapped_entities
          description: >
            Relation attribute on the main entity where the target entity will
            be linked. Set to false to disable linkback
        linkback_relation_tags:
          type: array
          description: >-
            Relation tags (labels) to include in main entity linkback relation
            attribute
          items:
            type: string
        target_unique:
          type: array
          description: Unique key for target entity (see upsertEntity of Entity API)
          items:
            type: string
    MapEntityActionConfig:
      allOf:
        - $ref: '#/components/schemas/AutomationActionConfig'
        - type: object
          properties:
            type:
              enum:
                - map-entity
            config:
              $ref: '#/components/schemas/MapEntityConfig'
      example:
        id: 2520gja-2sgmsaga-0asg-822jgal
        name: Map Entity
        type: map-entity
        config:
          target_schema: contact
          target_unique:
            - email.0.email
          relation_attributes:
            - target: company
              mode: append
              source_filter:
                schema: account
                limit: 1
          mapping_attributes:
            - target: _tags
              operation:
                _append:
                  - primary
                  - payer
                _uniq: true
            - target: email
              operation:
                _append:
                  - email:
                      _copy: billing_contact.email
            - target: first_name
              operation:
                _copy: billing_contact.first_name
            - target: last_name
              operation:
                _copy: billing_contact.last_name
            - target: contact_type
              operation:
                _set: customer
            - target: address
              operation:
                _append:
                  - _tags:
                      - billing
                      - primary
                    street_name:
                      _copy: billing_contact.street_name
                    street_number:
                      _copy: billing_contact.street_number
                    city:
                      _copy: billing_contact.city
                    postal_code:
                      _copy: billing_contact.postal_code
                    country:
                      _copy: billing_contact.country
                  - _tags:
                      - delivery
                    street_name:
                      _copy: delivery_contact.street_name
                    street_number:
                      _copy: delivery_contact.street_number
                    city:
                      _copy: delivery_contact.city
                    postal_code:
                      _copy: delivery_contact.postal_code
                    country:
                      _copy: delivery_contact.country
                _uniq:
                  - street_name
                  - street_number
                  - postal_code
                  - country
    MapEntityAction:
      allOf:
        - $ref: '#/components/schemas/AutomationAction'
        - type: object
          properties:
            type:
              enum:
                - map-entity
            config:
              $ref: '#/components/schemas/MapEntityConfig'
    MapEntityConfig:
      type: object
      properties:
        mapping_config:
          $ref: '#/components/schemas/MappingConfigRef'
        target_schema:
          type: string
          description: Schema of target entity
        target_unique:
          type: array
          description: Unique key for target entity (see upsertEntity of Entity API)
          items:
            type: string
        mapping_attributes:
          type: array
          description: Attribute mappings
          items:
            anyOf:
              - $ref: '#/components/schemas/MappingAttributeV2'
              - $ref: '#/components/schemas/MappingAttribute'
        relation_attributes:
          type: array
          description: Relation mappings
          items:
            $ref: '#/components/schemas/RelationAttribute1'
        linkback_relation_attribute:
          type: string
          default: mapped_entities
          description: >
            Relation attribute on the main entity where the target entity will
            be linked. Set to false to disable linkback
        linkback_relation_tags:
          type: array
          description: >-
            Relation tags (labels) to include in main entity linkback relation
            attribute
          items:
            type: string
      required:
        - target_schema
    MappingConfigRef:
      type: object
      properties:
        config_id:
          type: string
          description: Id of Entity Mapping Configuration to run for mapping.
        target_id:
          type: string
          description: Id of TargetConfig to run for mapping.
        version:
          type: number
          description: Version of Entity Mapping Configuration to run for mapping.
      required:
        - config_id
        - target_id
    RelationAttribute1:
      type: object
      properties:
        target:
          type: string
          description: Target attribute to store the relation in
        target_tags:
          type: array
          description: Relation tags (labels) to set for the stored relations
          items:
            type: string
        target_tags_include_source:
          type: boolean
          description: >-
            Include all relation tags (labels) present on the main entity
            relation
          default: false
        source_filter:
          type: object
          description: >-
            A filter to identify which source entities to pick as relations from
            main entity
          properties:
            limit:
              type: integer
              description: >-
                Limit relations to maximum number (default, all matched
                relations)
              minimum: 0
            schema:
              type: string
              description: Filter by specific schema
            attribute:
              type: string
              description: Filter by a specific relation attribute on the main entity
            relation_tag:
              type: string
              description: Filter by relation tag (label) on the main entity
            tag:
              type: string
              description: Filter by a specific tag on the related entity
            self:
              type: boolean
              description: Picks main entity as relation (overrides other filters)
              default: false
        related_to:
          type: object
          additionalProperties: true
          deprecated: true
        mode:
          type: string
          enum:
            - append
            - prepend
            - set
      required:
        - target
        - mode
    MappingAttributeV2:
      type: object
      properties:
        target:
          type: string
          description: Target JSON path for the attribute to set
        operation:
          $ref: '#/components/schemas/OperationNode'
      required:
        - targetPath
        - operation
      example:
        target: _tags
        operation:
          _append:
            - new
            - tags
          _uniq: true
    OperationNode:
      description: >-
        Mapping operation nodes are either primitive values or operation node
        objects
      oneOf:
        - $ref: '#/components/schemas/OperationObjectNode'
        - $ref: '#/components/schemas/PrimitiveJSONValue'
    OperationObjectNode:
      type: object
      properties:
        _set:
          $ref: '#/components/schemas/PrimitiveJSONValue'
        _append:
          description: Append to array
          items:
            $ref: '#/components/schemas/PrimitiveJSONValue'
        _uniq:
          description: Unique array
          oneOf:
            - type: boolean
              example: true
            - type: array
              description: Unique key consisting of object keys
              example:
                - email
              items:
                type: string
        _copy:
          description: Copy JSONPath value from source entity context
          type: string
          example: contact.first_name
      additionalProperties: true
    PrimitiveJSONValue:
      description: Represents any primitive JSON value
      anyOf:
        - type: string
        - type: boolean
        - type: number
        - type: object
          additionalProperties: true
        # - type: array
    MappingAttribute:
      anyOf:
        - $ref: '#/components/schemas/SetValueMapper'
        - $ref: '#/components/schemas/CopyValueMapper'
        - $ref: '#/components/schemas/AppendValueMapper'
    MappingAttributeMode:
      type: string
      enum:
        - copy_if_exists
        - append_if_exists
        - set_value
      description: >
        - copy_if_exists - it replaces the target attribute with the source
        value - append_if_exists - it currently replaces target attribute with
        array like values. Useful when you have multiple values to be added into
        one attribute. - set_value - it sets a value to a predefined value. Must
        be used together with value property.
    SetValueMapper:
      type: object
      deprecated: true
      properties:
        mode:
          $ref: '#/components/schemas/MappingAttributeMode'
        target:
          type: string
          description: JSON like target path for the attribute. Eg. last_name
        value:
          description: >
            Any value to be set: string, number, string[], number[], JSON
            object, etc. It will override existing values, if any.
      required:
        - mode
        - target
        - value
    CopyValueMapper:
      type: object
      deprecated: true
      properties:
        mode:
          $ref: '#/components/schemas/MappingAttributeMode'
        target:
          type: string
          description: JSON like target path for the attribute. Eg. last_name
        source:
          type: string
          description: >
            JSON source path for the value to be extracted from the main entity.
            Eg: steps[1].['Product Info'].price
      required:
        - mode
        - target
        - source
    AppendValueMapper:
      type: object
      deprecated: true
      properties:
        mode:
          $ref: '#/components/schemas/MappingAttributeMode'
        target:
          type: string
          description: JSON like target path for the attribute. Eg. last_name
        source:
          type: string
          description: >
            JSON source path for the value to be extracted from the main entity.
            Eg: steps[1].['Product Info'].price
        value_json:
          type: string
          description: >
            To be provided only when mapping json objects into a target
            attribute. Eg array of addresses.
        target_unique:
          type: array
          items:
            type: string
          description: >
            Array of keys which should be used when checking for uniqueness. Eg:
            [country, city, postal_code]
      required:
        - mode
        - target
        - value_json
    SendEmailActionConfig:
      allOf:
        - $ref: '#/components/schemas/AutomationActionConfig'
        - type: object
          properties:
            type:
              enum:
                - send-email
            config:
              $ref: '#/components/schemas/SendEmailConfig'
      example:
        id: 25jga0-gkasl26-0asg-908sgaj2
        name: Send Email
        type: send-email
        config:
          email_template_id: gasj02-29ug9asgm-29t9gsaghg2g-pkmbhx2
          language_code: de
    SendEmailAction:
      allOf:
        - $ref: '#/components/schemas/AutomationAction'
        - type: object
          properties:
            type:
              enum:
                - send-email
            config:
              $ref: '#/components/schemas/SendEmailConfig'
    SendEmailConfig:
      type: object
      properties:
        email_template_id:
          type: string
        language_code:
          type: string
          enum:
            - de
            - en
        attachments:
          type: array
          description: >
            Include extra file attachments in sent email.


            Attachments in email template will be sent regardless of this
            configuration.
          items:
            type: object
            properties:
              source_filter:
                type: object
                description: Specify filters to match file entities related to main entity
                properties:
                  limit:
                    type: integer
                    description: >-
                      Limit files to maximum number (default, all matched file
                      relations)
                    minimum: 0
                    example: 1
                  filename_regex:
                    type: string
                    description: Match by filename. Regex syntax supported
                    example: .*
                  attribute:
                    type: string
                    description: Filter by a specific relation attribute on the main entity
                    example: _files
                  relation_tag:
                    type: string
                    description: Filter by relation tag (label) on the main entity
                    example: contract
                  tag:
                    type: string
                    description: Filter by a specific tag on the related file entity
                  document_type:
                    type: string
                    description: Filter by a specific document type (e.g. document)
                    enum:
                      - document
                      - text
                      - image
                      - video
                      - audio
                      - spreadsheet
                      - presentation
                      - font
                      - archive
                      - application
                      - unknown
                  self:
                    type: boolean
                    description: >-
                      Picks main entity as file (only works if source entity is
                      a file)
                    default: false
          required:
            - email_template_id
    CreateDocumentActionConfig:
      allOf:
        - $ref: '#/components/schemas/AutomationActionConfig'
        - type: object
          properties:
            type:
              enum:
                - create-document
            config:
              $ref: '#/components/schemas/CreateDocumentConfig'
      example:
        id: 08g988-ojt2jtaga-292h-8978gsaga
        name: Create Document
        type: create-document
        config:
          template_id:
            type: string
            example: 112b08ba-789c-42f2-9940-43b302f641e8"
          filename:
            type: string
            example: newsletter.pdf"
    CreateDocumentAction:
      allOf:
        - $ref: '#/components/schemas/AutomationAction'
        - type: object
          properties:
            type:
              enum:
                - create-document
            config:
              $ref: '#/components/schemas/CreateDocumentConfig'
    CreateDocumentConfig:
      type: object
      properties:
        template_id:
          type: string
        filename:
          type: string
    TriggerWorkflowActionConfig:
      allOf:
        - $ref: '#/components/schemas/AutomationActionConfig'
        - type: object
          properties:
            type:
              enum:
                - trigger-workflow
            config:
              $ref: '#/components/schemas/TriggerWorkflowConfig'
      example:
        id: 08g988-ojt2jtaga-292h-8978gsaga
        name: Trigger Workflow
        type: trigger-workflow
        config:
          target_workflow: mfptvUMH
          conditions:
            - schema: ivy-opportunity
              source: customer.type
              comparison: equals
              value: PRIVATE
          assign_steps:
            - step_name: Lead Sales
              user_ids:
                - 10010729
            - step_name: Operations
              user_ids:
                - 10010728
                - 10010729
    TriggerWorkflowAction:
      allOf:
        - $ref: '#/components/schemas/AutomationAction'
        - type: object
          properties:
            type:
              enum:
                - trigger-workflow
            config:
              $ref: '#/components/schemas/TriggerWorkflowConfig'
    TriggerWorkflowConfig:
      type: object
      properties:
        target_workflow:
          type: string
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/TriggerWorkflowCondition'
        assignees:
          type: array
          items:
            type: string
        assign_steps:
          type: array
          items:
            $ref: '#/components/schemas/AssignUsersToStep'
    TriggerWorkflowCondition:
      allOf:
        - $ref: '#/components/schemas/TriggerCondition'
        - type: object
          properties:
            schema:
              type: string
      required:
        - schema
        - source
        - comparison
      example:
        schema: contact
        source: email
        comparison: equals
        value: test@epilot.cloud
    AssignUsersToStep:
      type: object
      properties:
        step_id:
          type: string
        step_name:
          type: string
        user_ids:
          type: array
          items:
            type: number
      example:
        - step_id: xyh9t2ha
          step_name: Lead Sales
          user_ids:
            - 10010729
        - step_id: 29jgasl
          step_name: Operations
          user_ids:
            - 10010728
            - 10010729
    TriggerWebhookActionConfig:
      allOf:
        - $ref: '#/components/schemas/AutomationActionConfig'
        - type: object
          properties:
            type:
              enum:
                - trigger-webhook
            config:
              $ref: '#/components/schemas/TriggerWebhookConfig'
      example:
        id: 2520gja-2sgmsaga-0asg-822jgal
        name: Trigger Webhook
        type: trigger-webhook
        config:
          entity_sources:
            - contact
            - account
          target_webhook_id: 25jg9ag2ga
    TriggerWebhookAction:
      allOf:
        - $ref: '#/components/schemas/AutomationAction'
        - type: object
          properties:
            type:
              enum:
                - trigger-webhook
            config:
              $ref: '#/components/schemas/TriggerWebhookConfig'
    TriggerWebhookConfig:
      type: object
      properties:
        entity_sources:
          type: array
          items:
            type: string
        target_webhook_id:
          type: string
    AutomationExecutionId:
      type: string
      example: 9baf184f-bc81-4128-bca3-d974c90a12c4
    AutomationExecution:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/AutomationExecutionId'
        execution_status:
          $ref: '#/components/schemas/ExecutionStatus'
        entity_id:
          $ref: '#/components/schemas/EntityId1'
        activity_id:
          $ref: '#/components/schemas/ActivityId1'
        entity_snapshot:
          $ref: '#/components/schemas/EntityItemSnapshot'
        org_id:
          $ref: '#/components/schemas/OrganizationId'
        flow_id:
          $ref: '#/components/schemas/AutomationFlowId'
        flow_name:
          type: string
          example: Handle contact form
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        current_action_id:
          $ref: '#/components/schemas/AutomationActionId'
        actions:
          type: array
          items:
            $ref: '#/components/schemas/AnyAction'
      required:
        - id
        - status
        - entity_id
        - org_id
        - flow_id
        - actions
    ExecutionStatus:
      type: string
      enum:
        - pending
        - in_progress
        - success
        - failed
        - cancelled
    GetExecutionsResp:
      type: object
      properties:
        total:
          type: number
        results:
          type: array
          items:
            $ref: '#/components/schemas/AutomationExecution'
      required:
        - total
        - results
    StartExecutionRequest:
      type: object
      properties:
        entity_id:
          $ref: '#/components/schemas/EntityId1'
        flow_id:
          $ref: '#/components/schemas/AutomationFlowId'
    EntityId1:
      type: string
      example: e3d3ebac-baab-4395-abf4-50b5bf1f8b74
    ActivityId1:
      type: string
      example: e3d3ebac-baab-4395-abf4-50b5bf1f8b74
    OrganizationId:
      type: string
      example: e3d3ebac-baab-4395-abf4-50b5bf1f8b74
    JourneySubmitTrigger:
      type: object
      properties:
        type:
          type: string
          enum:
            - journey_submission
        configuration:
          type: object
          properties:
            source_id:
              type: string
              format: uuid
          required:
            - source_id
      required:
        - type
        - configuration
    FrontendSubmitTrigger:
      type: object
      properties:
        type:
          type: string
          enum:
            - frontend_submission
        configuration:
          type: object
          properties:
            source_id:
              type: string
              example: '99'
      required:
        - type
        - configuration
    ApiSubmissionTrigger:
      type: object
      properties:
        type:
          type: string
          enum:
            - api_submission
        configuration:
          type: object
          properties:
            source_id:
              type: string
      required:
        - type
        - configuration
    ReceivedEmailTrigger:
      type: object
      properties:
        type:
          type: string
          enum:
            - received_email
        configuration:
          type: object
          properties:
            message_type:
              type: string
              enum:
                - RECEIVED
      required:
        - type
        - configuration
    EntityOperationTrigger:
      type: object
      properties:
        type:
          type: string
          enum:
            - entity_operation
        configuration:
          type: object
          properties:
            schema:
              type: string
              example: submission
            operations:
              type: array
              minItems: 1
              items:
                type: string
                enum:
                  - createEntity
                  - updateEntity
                  - deleteEntity
            include_activities:
              type: array
              items:
                type: string
                example:
                  - CreateEntity
            exclude_activities:
              type: array
              items:
                type: string
                example:
                  - SyncEntity
          required:
            - schema
            - operations
      required:
        - type
        - configuration
    ActivityTrigger:
      type: object
      properties:
        type:
          type: string
          enum:
            - activity
        configuration:
          type: object
          properties:
            schema:
              type: string
              example: submission
            types:
              type: array
              items:
                type: string
                enum:
                  - CreateMeterReading
                  - UpdateMeterReading
                  - MessageActivity
                  - SyncActivity
      required:
        - type
        - configuration
    EntityManualTrigger:
      type: object
      properties:
        type:
          type: string
          enum:
            - entity_manual
        configuration:
          type: object
          properties:
            schema:
              description: Which entity type can this automation be triggered from
              type: string
              example: submission
      required:
        - type
        - configuration
    TriggerCondition:
      type: object
      properties:
        source:
          type: string
        comparison:
          $ref: '#/components/schemas/Comparison'
        value:
          oneOf:
            - type: string
            - type: number
            - type: array
              items:
                type: string
            - type: array
              items:
                type: number
      required:
        - source
        - comparison
      example:
        source: billing_contact.email
        comparison: exists
    Comparison:
      type: string
      enum:
        - equals
        - any_of
        - not_empty
        - is_empty
    EntityItemSnapshot:
      type: object
      properties:
        _id:
          $ref: '#/components/schemas/EntityId1'
        _title:
          type: string
        _org:
          type: string
        _schema:
          type: string
        _tags:
          type: array
          items:
            type: string
        _created_at:
          type: string
          format: date-time
        _updated_at:
          type: string
          format: date-time
      additionalProperties: true
      required:
        - _id
        - _title
        - _org
        - _schema
        - _created_at
        - _updated_at
    RetryReq:
      type: object
      properties:
        retry_strategy:
          $ref: '#/components/schemas/RetryStrategy'
  securitySchemes:
    EpilotAuth:
      type: http
      scheme: bearer
      description: Authorization header with epilot OAuth2 bearer token
      bearerFormat: JWT
  examples:
    TaxEntity:
      description: Example of a Tax Rate entity
      value:
        active: true
        type: VAT
        region: Germany
        region_label: All Regions
        rate: 19
        behavior: Exclusive
        description: MwSt. 19%
    ContactEntity:
      description: Example of a contact entity
      value:
        status: Active
        customer_number: abc123
        first_name: First
        middle_name: Middle
        last_name: Last
        title: Herr Prof. Dr.
        email:
          - email: user@example.com
            _tags:
              - work
        phone:
          - phone: '+49123456789'
            _tags:
              - personal
              - mobile
        address:
          - country: Germany
            city: Koln
            postal_code: 81475
            street: Melatengürtel
            street_number: 71
            additional_info: 5. Etage
            _tags:
              - billing
              - delivery
        birthdate: '2019-08-24'
        account:
          $relation:
            - entity_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              _tags:
                - company
        consent_email_marketing:
          status: OPTED_IN
          events:
            - type: OPT_IN
              organization_id: '123'
              created_at: '2021-07-05T09:12:29.352Z'
              topic: EMAIL_MARKETING
              identifier: user@example.com
              source: 'https://consent.sls.epilot.io/optin?token=abc123'
              meta:
                ip_address: 1.1.1.1
                user_agent: >-
                  Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7)
                  AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.114
                  Safari/537.36
            - type: DOUBLE_OPT_IN_REQUEST
              organization_id: '123'
              created_at: '2021-07-05T08:12:29.352Z'
              topic: EMAIL_MARKETING
              identifier: user@example.com
              source: consent-api
              meta:
                token: abc123
            - type: OPT_IN
              organization_id: '123'
              created_at: '2021-07-04T09:12:29.352Z'
              topic: EMAIL_MARKETING
              identifier: user@example.com
              source: 'https://frontend.epilot.cloud'
              meta:
                ip_address: 1.1.1.1
                user_agent: >-
                  Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7)
                  AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.114
                  Safari/537.36
    AccountEntity:
      description: Example of an account entity
      value:
        status: Active
        name: Example Company
        tax_id: DE123456789
        email:
          - email: user@example.com
            _tags:
              - work
        phone:
          - phone: '+49123456789'
            _tags:
              - personal
              - mobile
        address:
          - country: Germany
            city: Koln
            postal_code: 81475
            street: Melatengürtel
            street_number: 71
            additional_info: 5. Etage
            _tags:
              - billing
              - delivery
        website: 'http://company.com'
        tax_exemption: '2021-02-23T09:08:57.320Z'
        registry_court: Amtsgericht Köln
        registry_number: HRB 95505
        company_size: 50-99
        industry:
          - ecommerce
          - tech
        annual_revenue: '5000000'
        contact:
          $relation:
            - entity_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              _tags:
                - CEO
    ProductEntity:
      description: Example of a product entity
      value:
        code: SunrockSolar375
        type: Product
        name: Sunrock Solar Panel
        description: >-
          Sunrock Solar Panel, provide high capacity power generation even at
          night.
        shippable: 'true,'
        _files:
          type: file
          attachments:
            - key: f001-32123-asdasd-23213
              mime: application/pdf
              name: wallbox-premium.pdf
              size: 6933430
              image_url: 'https://s3-bucket.epilot.cloud/uid/f001-32123-asdasd-23213'
              download_url: 'https://s3-bucket.epilot.cloud/uid/f001-32123-asdasd-23213'
        _images:
          type: image
          attachments:
            - key: i001-32123-asdasd-23213
              mime: application/pdf
              name: wallbox-premium.pdf
              size: 6933430
              image_url: 'https://s3-bucket.epilot.cloud/uid/f001-32123-asdasd-23213'
              download_url: 'https://s3-bucket.epilot.cloud/uid/f001-32123-asdasd-23213'
        prices:
          $relation:
            - entity_id: a38cca03-18a2-4e9c-8516-0918d81e7830
              _tags:
                - price
            - entity_id: 3d10c912-c419-42d7-9270-02b7d05294e5
              _tags:
                - price
    PriceEntity:
      description: Example of a price entity
      value:
        code: MODEL_375KW_PREMIUM
        type: One Time
        description: Solar Panel 375 kWp Premium
        billing_scheme: per_unit
        unit_amount: € 28500
        tiers_mode: Standard
    OrderEntity:
      description: Example of a Order entity
      value:
        amount_subtotal: 23045
        amount_total: 27424
        billing_address:
          - additional_info: ''
            city: City
            country: DE
            postal_code: '123'
            street: Street 1
            street_number: '2'
            _tags: []
        billing_company_name: Epilot
        billing_contact:
          $relation:
            - entity_id: 0691f503-5a3c-4e9e-b036-ffb21ea1d284
              relationText: Daniel Test
              _schema: contact
              _tags: []
        billing_email: x@email.xyz
        billing_first_name: Paulo
        billing_last_name: Henriques
        billing_phone: 00351912611099
        billing_vat: '123456789'
        currency: EUR
        delivery_address:
          - additional_info: ''
            city: City
            country: DE
            postal_code: '123'
            street: Street 1
            street_number: '2'
            _tags: []
        footer_notes: Footer
        line_items:
          - amount_subtotal: 23045
            amount_total: 27424
            currency: EUR
            description: Basic Model - No Wifi
            price_id: efe9ff76-865c-4287-8de9-422cfc741ff9
            product_id: beefa9f1-29a8-448e-94d5-ebf1963428f8
            quantity: 1
            taxes:
              - amount: 4379
                rate: standard
            unit_amount: 23045
            _price:
              active: false
              billing_duration_amount: '2'
              billing_duration_unit: years
              billing_period: monthly
              description: Basic Model - No Wifi
              notice_time_amount: '1'
              notice_time_unit: months
              price_display_in_journeys: show_price
              renewal_duration_amount: '1'
              renewal_duration_unit: years
              sales_tax: standard
              tax_behavior: exclusive
              termination_time_amount: '1'
              termination_time_unit: months
              type: recurring
              unit_amount: 23045
              unit_amount_currency: EUR
              unit_amount_decimal: '230.4524'
              _created_at: '2021-12-15T12:34:59.579Z'
              _id: efe9ff76-865c-4287-8de9-422cfc741ff9
              _org: '739224'
              _schema: price
              _tags:
                - basic-model
                - wifi
              _title: Basic Model - No Wifi
              _updated_at: '2021-12-31T13:07:51.392Z'
            _product:
              active: true
              code: PWB
              feature:
                - _tags: []
                  feature: Pure Energon Fueled
                - _tags: []
                  feature: Mobile App Available
              name: Pinho Walls in a Box
              price_options:
                $relation:
                  - entity_id: efe9ff76-865c-4287-8de9-422cfc741ff9
              type: product
              _created_at: '2021-12-15T12:35:08.438Z'
              _id: beefa9f1-29a8-448e-94d5-ebf1963428f8
              _org: '739224'
              _schema: product
              _tags:
                - energon
                - eco-friendly
                - wallbox
              _title: Pinho Walls in a Box
              _updated_at: '2022-01-03T17:14:41.042Z'
        memo: Memo
        status: Paid
        total_details:
          amount_tax: 4379
          breakdown:
            recurrences:
              - amount_subtotal: 23045
                amount_tax: 4379
                amount_total: 27424
                billing_period: monthly
                type: recurring
            taxes:
              - amount: 4379
                rate: standard
    OpportunityEntity:
      description: Example of an Opportunity entity
      value:
        amount_subtotal: 23045
        amount_total: 27424
        assignees:
          $relation:
            - entity_id: 66a1a6a3-38ee-4ffe-b68d-ee90e3bb1a77
              relationText: Claudius Iohannis
              _schema: contact
              _tags: []
        billing_address:
          - additional_info: ''
            city: City
            country: DE
            postal_code: '123'
            street: Street 1
            street_number: '2'
            _tags: []
        billing_company_name: Epilot
        billing_contact:
          $relation:
            - entity_id: 0691f503-5a3c-4e9e-b036-ffb21ea1d284
              relationText: Daniel Test
              _schema: contact
              _tags: []
        billing_email: customer@email.xyz
        billing_first_name: Customer First Name
        billing_last_name: Customer Last Name
        billing_phone: 00351912611098
        billing_vat: '123456789'
        currency: EUR
        delivery_address:
          - additional_info: ''
            city: City
            country: DE
            postal_code: '123'
            street: Street 1
            street_number: '2'
            _tags: []
        line_items:
          - amount_subtotal: 23045
            amount_total: 27424
            currency: EUR
            description: Basic Model - No Wifi
            price_id: efe9ff76-865c-4287-8de9-422cfc741ff9
            product_id: beefa9f1-29a8-448e-94d5-ebf1963428f8
            quantity: 1
            taxes:
              - amount: 4379
                rate: standard
            unit_amount: 23045
            _price:
              active: false
              billing_duration_amount: '2'
              billing_duration_unit: years
              billing_period: monthly
              description: Basic Model - No Wifi
              notice_time_amount: '1'
              notice_time_unit: months
              price_display_in_journeys: show_price
              renewal_duration_amount: '1'
              renewal_duration_unit: years
              sales_tax: standard
              tax_behavior: exclusive
              termination_time_amount: '1'
              termination_time_unit: months
              type: recurring
              unit_amount: 23045
              unit_amount_currency: EUR
              unit_amount_decimal: '230.4524'
              _created_at: '2021-12-15T12:34:59.579Z'
              _id: efe9ff76-865c-4287-8de9-422cfc741ff9
              _org: '739224'
              _schema: price
              _tags:
                - basic-model
                - wifi
              _title: Basic Model - No Wifi
              _updated_at: '2021-12-31T13:07:51.392Z'
            _product:
              active: true
              code: PWB
              feature:
                - _tags: []
                  feature: Pure Energon Fueled
                - _tags: []
                  feature: Mobile App Available
              name: Pinho Walls in a Box
              price_options:
                $relation:
                  - entity_id: efe9ff76-865c-4287-8de9-422cfc741ff9
              type: product
              _created_at: '2021-12-15T12:35:08.438Z'
              _id: beefa9f1-29a8-448e-94d5-ebf1963428f8
              _org: '739224'
              _schema: product
              _tags:
                - energon
                - eco-friendly
                - wallbox
              _title: Pinho Walls in a Box
              _updated_at: '2022-01-03T17:14:41.042Z'
        opportunity_number: 20220105-768854819
        participants:
          $relation:
            - entity_id: 9bbfdaa9-22b2-4100-a256-67600202e3f4
              relationText: Alex Marques
              _schema: contact
              _tags: []
        status: Lead
        total_details:
          amount_tax: 4379
          breakdown:
            recurrences:
              - amount_subtotal: 23045
                amount_tax: 4379
                amount_total: 27424
                billing_period: monthly
                type: recurring
            taxes:
              - amount: 4379
                rate: standard
    EmailTemplateEntity:
      description: Example of an email template entity
      value:
        attachments: []
        body: >-
          <p fr-original-style="caret-color: rgb(65, 65, 65); color: rgb(65, 65,
          65); font-family: sans-serif;" id="isPasted" style="caret-color:
          rgb(65, 65, 65); color: rgb(65, 65, 65); font-family: sans-serif;
          box-sizing: inherit; border-color: rgba(229, 231, 235,
          var(--tw-border-opacity));"><span fr-original-style="font-weight:
          700;" style="font-weight: 700; box-sizing: inherit; border-color:
          rgba(229, 231, 235, var(--tw-border-opacity));">Variablen -
          Kontakt</span></p>
        brand_id: 7066103
        from:
          name: Name
          email: admin@email.xyz
        name: PH Test
        subject: Example Subject
        system_template: false
        to:
          - id: '1'
            name: Contact Name
            email: Contact email
        _tags:
          - Bestellung
    FileEntity:
      description: Example of a file template entity
      value:
        access_control: private
        filename: solar_panel_ph.jpeg
        s3ref:
          bucket: epilot-staging-user-content
          key: 728/temp/6d450fd1-2d63-435f-b598-c605dfb89cbc/solar_panel_ph.jpeg
    WorkflowStepEntity:
      description: Example of a workflow step template entity
      value:
        name: Name
        assigned_to":
          - '10000563'
        status: Unassigned
        order: 123
        tags:
          - tag1
    SubmissionEntity:
      description: Example of a submission step template entity
      value:
        mapped_entities:
          $relation:
            - entity_id: 4ffb071c-2821-4505-86d0-09b801ffd97a
              relationText: 4ffb071c-2821-4505-86d0-09b801ffd97a
              _schema: price
              _tags: []
