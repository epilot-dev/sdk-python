"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .searchpagination import SearchPagination, SearchPaginationTypedDict
from .searchsorting import SearchSorting
from enum import Enum
from epilot_workflows_execution.types import BaseModel
import pydantic
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class Status(str, Enum):
    OPEN = "OPEN"
    COMPLETE = "COMPLETE"
    NEXT_OPEN_ITEM_IN_WORKFLOW = "NEXT_OPEN_ITEM_IN_WORKFLOW"

class SearchStepsReqTypedDict(TypedDict):
    assigned_to: NotRequired[float]
    execution_name: NotRequired[str]
    include_done_workflows: NotRequired[bool]
    manually_created: NotRequired[bool]
    pagination: NotRequired[SearchPaginationTypedDict]
    sorting: NotRequired[SearchSorting]
    status: NotRequired[Status]
    step_name: NotRequired[str]
    

class SearchStepsReq(BaseModel):
    assigned_to: Annotated[Optional[float], pydantic.Field(alias="assignedTo")] = None
    execution_name: Annotated[Optional[str], pydantic.Field(alias="executionName")] = None
    include_done_workflows: Annotated[Optional[bool], pydantic.Field(alias="includeDoneWorkflows")] = None
    manually_created: Annotated[Optional[bool], pydantic.Field(alias="manuallyCreated")] = None
    pagination: Optional[SearchPagination] = None
    sorting: Optional[SearchSorting] = None
    status: Optional[Status] = None
    step_name: Annotated[Optional[str], pydantic.Field(alias="stepName")] = None
    
