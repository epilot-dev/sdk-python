"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .automationconfig import AutomationConfig, AutomationConfigTypedDict
from .dynamicduedate import DynamicDueDate, DynamicDueDateTypedDict
from .steppositionat import StepPositionAt, StepPositionAtTypedDict
from .stepstatus import StepStatus
from epilot_workflows_execution.types import BaseModel
import pydantic
from typing import List, Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class UpdateStepReqTypedDict(TypedDict):
    assigned_to: NotRequired[List[str]]
    assigned_to_in_progress: NotRequired[str]
    r"""The user which moved the step/task to the IN_PROGRESS state. The user should also be present in the assignedTo property of the step/task"""
    automation_config: NotRequired[AutomationConfigTypedDict]
    r"""Configuration for automation execution to run"""
    completed_time: NotRequired[str]
    due_date: NotRequired[str]
    dynamic_due_date: NotRequired[DynamicDueDateTypedDict]
    r"""set a Duedate for a step then a specific"""
    entity_ref_id: NotRequired[str]
    r"""This field is deprecated. Please use stepId"""
    name: NotRequired[str]
    position: NotRequired[StepPositionAtTypedDict]
    started_time: NotRequired[str]
    status: NotRequired[StepStatus]
    step_id: NotRequired[str]
    user_ids: NotRequired[List[float]]
    r"""This field is deprecated. Please use assignedTo"""
    

class UpdateStepReq(BaseModel):
    assigned_to: Annotated[Optional[List[str]], pydantic.Field(alias="assignedTo")] = None
    assigned_to_in_progress: Annotated[Optional[str], pydantic.Field(alias="assignedToInProgress")] = None
    r"""The user which moved the step/task to the IN_PROGRESS state. The user should also be present in the assignedTo property of the step/task"""
    automation_config: Annotated[Optional[AutomationConfig], pydantic.Field(alias="automationConfig")] = None
    r"""Configuration for automation execution to run"""
    completed_time: Annotated[Optional[str], pydantic.Field(alias="completedTime")] = None
    due_date: Annotated[Optional[str], pydantic.Field(alias="dueDate")] = None
    dynamic_due_date: Annotated[Optional[DynamicDueDate], pydantic.Field(alias="dynamicDueDate")] = None
    r"""set a Duedate for a step then a specific"""
    entity_ref_id: Annotated[Optional[str], pydantic.Field(deprecated="warning: ** DEPRECATED ** - This will be removed in a future release, please migrate away from it as soon as possible.", alias="entityRefId")] = None
    r"""This field is deprecated. Please use stepId"""
    name: Optional[str] = None
    position: Optional[StepPositionAt] = None
    started_time: Annotated[Optional[str], pydantic.Field(alias="startedTime")] = None
    status: Optional[StepStatus] = None
    step_id: Annotated[Optional[str], pydantic.Field(alias="stepId")] = None
    user_ids: Annotated[Optional[List[float]], pydantic.Field(deprecated="warning: ** DEPRECATED ** - This will be removed in a future release, please migrate away from it as soon as possible.", alias="userIds")] = None
    r"""This field is deprecated. Please use assignedTo"""
    
