"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .closingreason import ClosingReason, ClosingReasonTypedDict
from .dynamicduedate import DynamicDueDate, DynamicDueDateTypedDict
from .workflowcontext import WorkflowContext, WorkflowContextTypedDict
from .workflowstatus import WorkflowStatus
from epilot_workflows_execution.types import BaseModel
import pydantic
from typing import List, Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class WorkflowExecutionUpdateReqTypedDict(TypedDict):
    assigned_to: NotRequired[List[str]]
    closed_by: NotRequired[str]
    r"""id of the user / partner user who is closing the workflow. For partner pass orgId_userId."""
    closing_reason_description: NotRequired[str]
    completed_time: NotRequired[str]
    r"""Completed time of the workflow execution"""
    contexts: NotRequired[List[WorkflowContextTypedDict]]
    due_date: NotRequired[str]
    dynamic_due_date: NotRequired[DynamicDueDateTypedDict]
    r"""set a Duedate for a step then a specific"""
    selected_closing_reasons: NotRequired[List[ClosingReasonTypedDict]]
    status: NotRequired[WorkflowStatus]
    

class WorkflowExecutionUpdateReq(BaseModel):
    assigned_to: Annotated[Optional[List[str]], pydantic.Field(alias="assignedTo")] = None
    closed_by: Annotated[Optional[str], pydantic.Field(alias="closedBy")] = None
    r"""id of the user / partner user who is closing the workflow. For partner pass orgId_userId."""
    closing_reason_description: Annotated[Optional[str], pydantic.Field(alias="closingReasonDescription")] = None
    completed_time: Annotated[Optional[str], pydantic.Field(alias="completedTime")] = None
    r"""Completed time of the workflow execution"""
    contexts: Optional[List[WorkflowContext]] = None
    due_date: Annotated[Optional[str], pydantic.Field(alias="dueDate")] = None
    dynamic_due_date: Annotated[Optional[DynamicDueDate], pydantic.Field(alias="dynamicDueDate")] = None
    r"""set a Duedate for a step then a specific"""
    selected_closing_reasons: Annotated[Optional[List[ClosingReason]], pydantic.Field(alias="selectedClosingReasons")] = None
    status: Optional[WorkflowStatus] = None
    
